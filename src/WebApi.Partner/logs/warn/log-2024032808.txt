2024-03-28 08:30:39.393 [WRN] 63847211439230823816 responseBody GET /swagger/v1/swagger.json {
  "openapi": "3.0.1",
  "info": {
    "title": "WINMART",
    "version": "v1"
  },
  "paths": {
    "/api/v1/auth/token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JwtUser"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/JwtUser"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/JwtUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/validate": {
      "get": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/phuc-long/order/create": {
      "post": {
        "tags": [
          "MakeOrder"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phuc-long/order/check": {
      "get": {
        "tags": [
          "MakeOrder"
        ],
        "parameters": [
          {
            "name": "AppCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "200101-41498-001-0001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_order": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/export_error_menu": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_drivers_status": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/partner/card": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/topup": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/serial": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/esim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/physical-sim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/subscriber-info": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/o2/update": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sevices/tax-info/{taxcode}": {
      "get": {
        "tags": [
          "PublicService"
        ],
        "parameters": [
          {
            "name": "taxcode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0302616081-001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/create": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "PartnerCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "373701"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1630307833376"
            }
          },
          {
            "name": "AppCode",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "NOWFOOD"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/list": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/count": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/update-status": {
      "put": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/refund": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/check": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "appCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/campaign": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "appCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/check-sum": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/register": {
      "post": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/check/phone": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "parameters": [
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/update-status": {
      "put": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wmc/login": {
      "post": {
        "tags": [
          "WinMoney"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSRequestUrl_WMC"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSRequestUrl_WMC"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSRequestUrl_WMC"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wmc/store": {
      "get": {
        "tags": [
          "WinMoney"
        ],
        "parameters": [
          {
            "name": "appCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wmc/cashier": {
      "get": {
        "tags": [
          "WinMoney"
        ],
        "parameters": [
          {
            "name": "appCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storeNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wmc/pos": {
      "get": {
        "tags": [
          "WinMoney"
        ],
        "parameters": [
          {
            "name": "appCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storeNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BillingInfo": {
        "type": "object",
        "properties": {
          "TaxID": {
            "type": "string",
            "nullable": true
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CompanyName": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountOrderRequest": {
        "required": [
          "AppCode",
          "PartnerCode",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "WEB",
            "example": "WEB"
          },
          "StoreNo": {
            "type": "string",
            "default": "2018",
            "example": "2018"
          }
        },
        "additionalProperties": false
      },
      "Coupons": {
        "required": [
          "CouponCode"
        ],
        "type": "object",
        "properties": {
          "CouponCode": {
            "type": "string"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "DiscountPercent": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateEsimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePhysicalSimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "SerialSimKIT": {
            "type": "string",
            "nullable": true
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IssueVoucher": {
        "required": [
          "NumberOfVouchers",
          "PhoneNumber"
        ],
        "type": "object",
        "properties": {
          "PhoneNumber": {
            "maxLength": 11,
            "minLength": 9,
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string"
          },
          "NumberOfVouchers": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "JwtUser": {
        "type": "object",
        "properties": {
          "UserName": {
            "type": "string",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MembershipCard": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "PhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CardClass": {
            "type": "string",
            "nullable": true
          },
          "TotalPoints": {
            "type": "number",
            "format": "double"
          },
          "AvailabilityPoints": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Meta": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer",
            "format": "int32"
          },
          "Message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDiscount": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "OfferNo": {
            "type": "string",
            "nullable": true
          },
          "OfferType": {
            "type": "string",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineDto": {
        "required": [
          "ItemNo",
          "Quantity",
          "TaxGroupCode",
          "Uom",
          "VatPercent"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "maximum": 99999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "maximum": 99999,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "maxLength": 18,
            "minLength": 0,
            "type": "string"
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string"
          },
          "OldPrice": {
            "type": "number",
            "format": "double"
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "Quantity": {
            "maximum": 999,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "default": 1,
            "example": 1
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "LineAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountInVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountIncVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "TaxGroupCode": {
            "type": "string"
          },
          "VatPercent": {
            "type": "integer",
            "format": "int32"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "CupType": {
            "type": "string",
            "nullable": true
          },
          "Size": {
            "type": "string",
            "nullable": true
          },
          "IsTopping": {
            "type": "boolean"
          },
          "IsCombo": {
            "type": "boolean"
          },
          "ComboNo": {
            "type": "string",
            "nullable": true
          },
          "ComboId": {
            "type": "integer",
            "format": "int32"
          },
          "ArticleType": {
            "type": "string",
            "nullable": true
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "Loyalty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLoyalty"
            },
            "nullable": true
          },
          "OptionEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineOptionDto"
            },
            "nullable": true
          },
          "DiscountEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscount"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineOptionDto": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "OptionType": {
            "type": "string",
            "nullable": true
          },
          "OptionName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "Qty": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderLoyalty": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "PhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderPaymentDto": {
        "required": [
          "AmountTendered",
          "CurrencyCode",
          "ExchangeRate",
          "LineId",
          "PaymentMethod"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "PaymentMethod": {
            "type": "string"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "ExchangeRate": {
            "type": "number",
            "format": "double"
          },
          "AmountTendered": {
            "type": "number",
            "format": "double"
          },
          "AmountInCurrency": {
            "type": "number",
            "format": "double"
          },
          "TransactionNo": {
            "type": "string",
            "nullable": true
          },
          "ApprovalCode": {
            "type": "string",
            "nullable": true
          },
          "TraceCode": {
            "type": "string",
            "nullable": true
          },
          "ReferenceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderRequestBody": {
        "required": [
          "AppCode",
          "OrderDate",
          "OrderNo",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "AppCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "PartnerCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrderNo": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "OrderDate": {
            "type": "string",
            "format": "date-time"
          },
          "StoreNo": {
            "type": "string",
            "default": "2001",
            "example": "2001"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CustAddress": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "maximum": 999,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "SaleTypeId": {
            "maximum": 99,
            "minimum": 10,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "TotalAmount": {
            "type": "number",
            "format": "double"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double"
          },
          "ShippingFee": {
            "type": "number",
            "format": "double"
          },
          "HasVatInvoice": {
            "type": "boolean"
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "WinCode": {
            "type": "string",
            "nullable": true
          },
          "BillingInfo": {
            "$ref": "#/components/schemas/BillingInfo"
          },
          "UseCoupon": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Coupons"
            },
            "nullable": true
          },
          "ShippingInfo": {
            "$ref": "#/components/schemas/ShippingInfo"
          },
          "Serial": {
            "type": "string",
            "nullable": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineDto"
            },
            "nullable": true
          },
          "Payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPaymentDto"
            },
            "nullable": true
          },
          "MembershipCard": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MembershipCard"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "POSPurchaseCardRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "PurchaseValue",
          "Quantity",
          "ServiceCode",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "ServiceType": {
            "type": "string",
            "default": "PURCHASE_CARD",
            "example": "PURCHASE_CARD"
          },
          "ServiceCode": {
            "type": "string",
            "default": "GPPC.100",
            "example": "GPPC.100"
          },
          "PurchaseValue": {
            "maximum": 10000000,
            "minimum": 9999,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          },
          "Quantity": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          }
        },
        "additionalProperties": false
      },
      "POSRequestUrl_WMC": {
        "required": [
          "CashierID",
          "CashierName",
          "MerchantNo",
          "PosBrowserUID",
          "PosNo",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "StoreNo": {
            "type": "string"
          },
          "PosNo": {
            "type": "string"
          },
          "CashierID": {
            "type": "string"
          },
          "CashierName": {
            "type": "string"
          },
          "MerchantNo": {
            "type": "string"
          },
          "PosBrowserUID": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "POSTopupRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "Receiver",
          "TopupValue"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "Receiver": {
            "type": "string",
            "default": "0559384959",
            "example": "0559384959"
          },
          "TopupValue": {
            "maximum": 10000000,
            "minimum": 10000,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback": {
        "type": "object",
        "properties": {
          "object_changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/object_changes"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback_update_order": {
        "required": [
          "order_code"
        ],
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string"
          },
          "update_type": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "pick_time": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "merchant_note": {
            "type": "string",
            "nullable": true
          },
          "note_for_shipper": {
            "type": "string",
            "nullable": true
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "serial": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefundItems": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "OldPrice": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "TaxGroupCode": {
            "type": "string",
            "nullable": true
          },
          "VatPercent": {
            "type": "number",
            "format": "double"
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Remark": {
        "type": "object",
        "properties": {
          "Remark1": {
            "type": "string",
            "nullable": true
          },
          "Remark2": {
            "type": "string",
            "nullable": true
          },
          "Remark3": {
            "type": "string",
            "nullable": true
          },
          "Remark4": {
            "type": "string",
            "nullable": true
          },
          "Remark5": {
            "type": "string",
            "nullable": true
          },
          "Remark6": {
            "type": "string",
            "nullable": true
          },
          "Remark7": {
            "type": "string",
            "nullable": true
          },
          "Remark8": {
            "type": "string",
            "nullable": true
          },
          "Remark9": {
            "type": "string",
            "nullable": true
          },
          "Remark10": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestListOrderPOS": {
        "required": [
          "PageNumber",
          "PageSize",
          "PartnerCode",
          "PosNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "SHOPEE",
            "nullable": true,
            "example": "SHOPEE"
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "FromDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "ToDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "CustomerKeyword": {
            "type": "string",
            "default": "Tên khách",
            "nullable": true,
            "example": "Tên khách"
          },
          "ItemKeyword": {
            "type": "string",
            "default": "Tên sản phẩm",
            "nullable": true,
            "example": "Tên sản phẩm"
          },
          "PageNumber": {
            "type": "integer",
            "format": "int32",
            "default": "1",
            "example": "1"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32",
            "default": "10",
            "example": "10"
          }
        },
        "additionalProperties": false
      },
      "RequestUpdateOrderStatus": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PaymentAmount",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "OrderNo": {
            "type": "string",
            "default": "PLH1652759636107",
            "example": "PLH1652759636107"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double",
            "default": "0",
            "example": "0"
          },
          "Status": {
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseClient": {
        "type": "object",
        "properties": {
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "Data": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesReturnRequest": {
        "required": [
          "OrderNo",
          "OrgOrderNo",
          "PartnerCode",
          "PosNo",
          "ReturnedOrderNo",
          "TenderType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "ReturnedOrderNo": {
            "type": "string"
          },
          "OrgOrderNo": {
            "type": "string"
          },
          "TransactionDatetime": {
            "type": "string",
            "format": "date-time"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "TenderType": {
            "type": "string"
          },
          "RefundAmount": {
            "type": "number",
            "format": "double"
          },
          "RefundItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundItems"
            },
            "nullable": true
          },
          "InvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrgInvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "MerchantId": {
            "type": "string",
            "nullable": true
          },
          "StoreNo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingInfo": {
        "type": "object",
        "properties": {
          "ReceiverName": {
            "type": "string",
            "nullable": true
          },
          "ReceiverPhone": {
            "type": "string",
            "nullable": true
          },
          "ReceiverEmail": {
            "type": "string",
            "nullable": true
          },
          "ReceiverAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateStatusVoucherSAP": {
        "required": [
          "OrderNo",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "Vouchers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTierMemberO2": {
        "required": [
          "DataUpdate",
          "MemberNumber",
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "O2",
            "example": "O2"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "ServiceType": {
            "type": "string",
            "default": "O2_UPDATE_TIER",
            "example": "O2_UPDATE_TIER"
          },
          "MemberNumber": {
            "type": "string",
            "default": "0559900185",
            "example": "0559900185"
          },
          "DataUpdate": {
            "type": "string",
            "default": "VIP",
            "example": "VIP"
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidateKitStatusRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          }
        },
        "additionalProperties": false
      },
      "driver_arriving_times": {
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "driver_uid": {
            "type": "integer",
            "format": "int32"
          },
          "arriving_time": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "export_error_menu": {
        "type": "object",
        "properties": {
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          },
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "error_type": {
            "type": "string",
            "nullable": true
          },
          "error_time": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "object_changes": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "partner_api_url_callback_update_drivers_status": {
        "type": "object",
        "properties": {
          "driver_arriving_times": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/driver_arriving_times"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "description": "Basic Authorization header using the Bearer scheme.",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basic": [ ]
    }
  ]
}
2024-03-28 08:30:43.590 [WRN] 63847211443587876313 request GET /validate	

2024-03-28 08:30:43.882 [WRN] 63847211443587876313 responseBody GET /validate 
2024-03-28 08:30:45.774 [WRN] 6384721144577085325 request GET /validate	

2024-03-28 08:30:45.808 [WRN] 6384721144577085325 responseBody GET /validate 
2024-03-28 08:30:48.516 [WRN] 6384721144851333229 request POST /api/v1/auth/token	
{
    "UserName":"admin",
    "Password":"test"
}
2024-03-28 08:30:48.625 [WRN] 6384721144851333229 responseBody POST /api/v1/auth/token {"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYWRtaW4iLCJleHAiOjE3MTE1OTAwNDgsImlzcyI6InlvdXJfaXNzdWVyX2hlcmUiLCJhdWQiOiJ5b3VyX2F1ZGllbmNlX2hlcmUifQ.NySGk6ZRgqk60GcGbnCZYuQn7yIgzAPrfPEPVlIkjt8"}
2024-03-28 08:31:02.444 [WRN] 6384721146244179795 request GET /validate	

2024-03-28 08:31:02.500 [WRN] 6384721146244179795 responseBody GET /validate {"message":"Token is invalid"}
2024-03-28 08:31:04.351 [WRN] 6384721146434721835 request GET /validate	

2024-03-28 08:31:04.378 [WRN] 6384721146434721835 responseBody GET /validate {"message":"Token is invalid"}
2024-03-28 08:45:06.931 [WRN] 6384721230672747374 responseBody GET /swagger/v1/swagger.json {
  "openapi": "3.0.1",
  "info": {
    "title": "WINMART",
    "version": "v1"
  },
  "paths": {
    "/api/v1/auth/token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JwtUser"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/JwtUser"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/JwtUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/validate": {
      "get": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/phuc-long/order/create": {
      "post": {
        "tags": [
          "MakeOrder"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phuc-long/order/check": {
      "get": {
        "tags": [
          "MakeOrder"
        ],
        "parameters": [
          {
            "name": "AppCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "200101-41498-001-0001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_order": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/export_error_menu": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_drivers_status": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/partner/card": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/topup": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/serial": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/esim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/physical-sim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/subscriber-info": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/o2/update": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sevices/tax-info/{taxcode}": {
      "get": {
        "tags": [
          "PublicService"
        ],
        "parameters": [
          {
            "name": "taxcode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0302616081-001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/create": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "PartnerCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "373701"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1630307833376"
            }
          },
          {
            "name": "AppCode",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "NOWFOOD"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/list": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/count": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/update-status": {
      "put": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/refund": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/check": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "appCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/campaign": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "appCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/check-sum": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/register": {
      "post": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/check/phone": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "parameters": [
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/update-status": {
      "put": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wmc/login": {
      "post": {
        "tags": [
          "WinMoney"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSRequestUrl_WMC"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSRequestUrl_WMC"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSRequestUrl_WMC"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wmc/store": {
      "get": {
        "tags": [
          "WinMoney"
        ],
        "parameters": [
          {
            "name": "appCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wmc/cashier": {
      "get": {
        "tags": [
          "WinMoney"
        ],
        "parameters": [
          {
            "name": "appCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storeNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wmc/pos": {
      "get": {
        "tags": [
          "WinMoney"
        ],
        "parameters": [
          {
            "name": "appCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storeNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BillingInfo": {
        "type": "object",
        "properties": {
          "TaxID": {
            "type": "string",
            "nullable": true
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CompanyName": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountOrderRequest": {
        "required": [
          "AppCode",
          "PartnerCode",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "WEB",
            "example": "WEB"
          },
          "StoreNo": {
            "type": "string",
            "default": "2018",
            "example": "2018"
          }
        },
        "additionalProperties": false
      },
      "Coupons": {
        "required": [
          "CouponCode"
        ],
        "type": "object",
        "properties": {
          "CouponCode": {
            "type": "string"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "DiscountPercent": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateEsimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePhysicalSimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "SerialSimKIT": {
            "type": "string",
            "nullable": true
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IssueVoucher": {
        "required": [
          "NumberOfVouchers",
          "PhoneNumber"
        ],
        "type": "object",
        "properties": {
          "PhoneNumber": {
            "maxLength": 11,
            "minLength": 9,
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string"
          },
          "NumberOfVouchers": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "JwtUser": {
        "required": [
          "Password",
          "UserName"
        ],
        "type": "object",
        "properties": {
          "UserName": {
            "type": "string"
          },
          "Password": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MembershipCard": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "PhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CardClass": {
            "type": "string",
            "nullable": true
          },
          "TotalPoints": {
            "type": "number",
            "format": "double"
          },
          "AvailabilityPoints": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Meta": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer",
            "format": "int32"
          },
          "Message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDiscount": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "OfferNo": {
            "type": "string",
            "nullable": true
          },
          "OfferType": {
            "type": "string",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineDto": {
        "required": [
          "ItemNo",
          "Quantity",
          "TaxGroupCode",
          "Uom",
          "VatPercent"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "maximum": 99999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "maximum": 99999,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "maxLength": 18,
            "minLength": 0,
            "type": "string"
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string"
          },
          "OldPrice": {
            "type": "number",
            "format": "double"
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "Quantity": {
            "maximum": 999,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "default": 1,
            "example": 1
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "LineAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountInVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountIncVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "TaxGroupCode": {
            "type": "string"
          },
          "VatPercent": {
            "type": "integer",
            "format": "int32"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "CupType": {
            "type": "string",
            "nullable": true
          },
          "Size": {
            "type": "string",
            "nullable": true
          },
          "IsTopping": {
            "type": "boolean"
          },
          "IsCombo": {
            "type": "boolean"
          },
          "ComboNo": {
            "type": "string",
            "nullable": true
          },
          "ComboId": {
            "type": "integer",
            "format": "int32"
          },
          "ArticleType": {
            "type": "string",
            "nullable": true
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "Loyalty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLoyalty"
            },
            "nullable": true
          },
          "OptionEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineOptionDto"
            },
            "nullable": true
          },
          "DiscountEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscount"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineOptionDto": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "OptionType": {
            "type": "string",
            "nullable": true
          },
          "OptionName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "Qty": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderLoyalty": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "PhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderPaymentDto": {
        "required": [
          "AmountTendered",
          "CurrencyCode",
          "ExchangeRate",
          "LineId",
          "PaymentMethod"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "PaymentMethod": {
            "type": "string"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "ExchangeRate": {
            "type": "number",
            "format": "double"
          },
          "AmountTendered": {
            "type": "number",
            "format": "double"
          },
          "AmountInCurrency": {
            "type": "number",
            "format": "double"
          },
          "TransactionNo": {
            "type": "string",
            "nullable": true
          },
          "ApprovalCode": {
            "type": "string",
            "nullable": true
          },
          "TraceCode": {
            "type": "string",
            "nullable": true
          },
          "ReferenceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderRequestBody": {
        "required": [
          "AppCode",
          "OrderDate",
          "OrderNo",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "AppCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "PartnerCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrderNo": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "OrderDate": {
            "type": "string",
            "format": "date-time"
          },
          "StoreNo": {
            "type": "string",
            "default": "2001",
            "example": "2001"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CustAddress": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "maximum": 999,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "SaleTypeId": {
            "maximum": 99,
            "minimum": 10,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "TotalAmount": {
            "type": "number",
            "format": "double"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double"
          },
          "ShippingFee": {
            "type": "number",
            "format": "double"
          },
          "HasVatInvoice": {
            "type": "boolean"
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "WinCode": {
            "type": "string",
            "nullable": true
          },
          "BillingInfo": {
            "$ref": "#/components/schemas/BillingInfo"
          },
          "UseCoupon": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Coupons"
            },
            "nullable": true
          },
          "ShippingInfo": {
            "$ref": "#/components/schemas/ShippingInfo"
          },
          "Serial": {
            "type": "string",
            "nullable": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineDto"
            },
            "nullable": true
          },
          "Payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPaymentDto"
            },
            "nullable": true
          },
          "MembershipCard": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MembershipCard"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "POSPurchaseCardRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "PurchaseValue",
          "Quantity",
          "ServiceCode",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "ServiceType": {
            "type": "string",
            "default": "PURCHASE_CARD",
            "example": "PURCHASE_CARD"
          },
          "ServiceCode": {
            "type": "string",
            "default": "GPPC.100",
            "example": "GPPC.100"
          },
          "PurchaseValue": {
            "maximum": 10000000,
            "minimum": 9999,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          },
          "Quantity": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          }
        },
        "additionalProperties": false
      },
      "POSRequestUrl_WMC": {
        "required": [
          "CashierID",
          "CashierName",
          "MerchantNo",
          "PosBrowserUID",
          "PosNo",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "StoreNo": {
            "type": "string"
          },
          "PosNo": {
            "type": "string"
          },
          "CashierID": {
            "type": "string"
          },
          "CashierName": {
            "type": "string"
          },
          "MerchantNo": {
            "type": "string"
          },
          "PosBrowserUID": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "POSTopupRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "Receiver",
          "TopupValue"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "Receiver": {
            "type": "string",
            "default": "0559384959",
            "example": "0559384959"
          },
          "TopupValue": {
            "maximum": 10000000,
            "minimum": 10000,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback": {
        "type": "object",
        "properties": {
          "object_changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/object_changes"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback_update_order": {
        "required": [
          "order_code"
        ],
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string"
          },
          "update_type": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "pick_time": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "merchant_note": {
            "type": "string",
            "nullable": true
          },
          "note_for_shipper": {
            "type": "string",
            "nullable": true
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "serial": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefundItems": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "OldPrice": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "TaxGroupCode": {
            "type": "string",
            "nullable": true
          },
          "VatPercent": {
            "type": "number",
            "format": "double"
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Remark": {
        "type": "object",
        "properties": {
          "Remark1": {
            "type": "string",
            "nullable": true
          },
          "Remark2": {
            "type": "string",
            "nullable": true
          },
          "Remark3": {
            "type": "string",
            "nullable": true
          },
          "Remark4": {
            "type": "string",
            "nullable": true
          },
          "Remark5": {
            "type": "string",
            "nullable": true
          },
          "Remark6": {
            "type": "string",
            "nullable": true
          },
          "Remark7": {
            "type": "string",
            "nullable": true
          },
          "Remark8": {
            "type": "string",
            "nullable": true
          },
          "Remark9": {
            "type": "string",
            "nullable": true
          },
          "Remark10": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestListOrderPOS": {
        "required": [
          "PageNumber",
          "PageSize",
          "PartnerCode",
          "PosNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "SHOPEE",
            "nullable": true,
            "example": "SHOPEE"
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "FromDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "ToDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "CustomerKeyword": {
            "type": "string",
            "default": "Tên khách",
            "nullable": true,
            "example": "Tên khách"
          },
          "ItemKeyword": {
            "type": "string",
            "default": "Tên sản phẩm",
            "nullable": true,
            "example": "Tên sản phẩm"
          },
          "PageNumber": {
            "type": "integer",
            "format": "int32",
            "default": "1",
            "example": "1"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32",
            "default": "10",
            "example": "10"
          }
        },
        "additionalProperties": false
      },
      "RequestUpdateOrderStatus": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PaymentAmount",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "OrderNo": {
            "type": "string",
            "default": "PLH1652759636107",
            "example": "PLH1652759636107"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double",
            "default": "0",
            "example": "0"
          },
          "Status": {
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseClient": {
        "type": "object",
        "properties": {
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "Data": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesReturnRequest": {
        "required": [
          "OrderNo",
          "OrgOrderNo",
          "PartnerCode",
          "PosNo",
          "ReturnedOrderNo",
          "TenderType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "ReturnedOrderNo": {
            "type": "string"
          },
          "OrgOrderNo": {
            "type": "string"
          },
          "TransactionDatetime": {
            "type": "string",
            "format": "date-time"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "TenderType": {
            "type": "string"
          },
          "RefundAmount": {
            "type": "number",
            "format": "double"
          },
          "RefundItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundItems"
            },
            "nullable": true
          },
          "InvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrgInvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "MerchantId": {
            "type": "string",
            "nullable": true
          },
          "StoreNo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingInfo": {
        "type": "object",
        "properties": {
          "ReceiverName": {
            "type": "string",
            "nullable": true
          },
          "ReceiverPhone": {
            "type": "string",
            "nullable": true
          },
          "ReceiverEmail": {
            "type": "string",
            "nullable": true
          },
          "ReceiverAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateStatusVoucherSAP": {
        "required": [
          "OrderNo",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "Vouchers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTierMemberO2": {
        "required": [
          "DataUpdate",
          "MemberNumber",
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "O2",
            "example": "O2"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "ServiceType": {
            "type": "string",
            "default": "O2_UPDATE_TIER",
            "example": "O2_UPDATE_TIER"
          },
          "MemberNumber": {
            "type": "string",
            "default": "0559900185",
            "example": "0559900185"
          },
          "DataUpdate": {
            "type": "string",
            "default": "VIP",
            "example": "VIP"
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidateKitStatusRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          }
        },
        "additionalProperties": false
      },
      "driver_arriving_times": {
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "driver_uid": {
            "type": "integer",
            "format": "int32"
          },
          "arriving_time": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "export_error_menu": {
        "type": "object",
        "properties": {
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          },
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "error_type": {
            "type": "string",
            "nullable": true
          },
          "error_time": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "object_changes": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "partner_api_url_callback_update_drivers_status": {
        "type": "object",
        "properties": {
          "driver_arriving_times": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/driver_arriving_times"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "description": "Basic Authorization header using the Bearer scheme.",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basic": [ ]
    }
  ]
}
2024-03-28 08:45:09.995 [WRN] 63847212309991187813 request GET /validate	

2024-03-28 08:45:10.613 [WRN] 63847212309991187813 responseBody GET /validate {"message":"Token is valid"}
2024-03-28 08:45:12.153 [WRN] 6384721231214929646 request GET /validate	

2024-03-28 08:45:12.213 [WRN] 6384721231214929646 responseBody GET /validate {"message":"Token is valid"}
2024-03-28 08:45:13.491 [WRN] 6384721231348914464 request GET /validate	

2024-03-28 08:45:13.524 [WRN] 6384721231348914464 responseBody GET /validate {"message":"Token is valid"}
2024-03-28 08:45:14.726 [WRN] 6384721231472335496 request GET /validate	

2024-03-28 08:45:14.757 [WRN] 6384721231472335496 responseBody GET /validate {"message":"Token is valid"}
2024-03-28 08:45:15.608 [WRN] 63847212315605322315 request GET /validate	

2024-03-28 08:45:15.650 [WRN] 63847212315605322315 responseBody GET /validate {"message":"Token is valid"}
2024-03-28 08:45:17.988 [WRN] 6384721231798577604 request POST /api/v1/auth/token	
{
    "UserName":"admin",
    "Password":"test"
}
2024-03-28 08:45:18.037 [WRN] 6384721231798577604 responseBody POST /api/v1/auth/token {"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYWRtaW4iLCJleHAiOjE3MTE1OTA5MTgsImlzcyI6InlvdXJfaXNzdWVyX2hlcmUiLCJhdWQiOiJ5b3VyX2F1ZGllbmNlX2hlcmUifQ.p-Vhb1N7l--SNXJ2CCHCij6HvY8c1k90nAf8ZWNHiLI"}
2024-03-28 08:45:28.170 [WRN] 63847212328167880310 request GET /validate	

2024-03-28 08:45:28.198 [WRN] 63847212328167880310 responseBody GET /validate {"message":"Token is valid"}
2024-03-28 08:45:29.557 [WRN] 63847212329550897810 request GET /validate	

2024-03-28 08:45:29.584 [WRN] 63847212329550897810 responseBody GET /validate {"message":"Token is valid"}
2024-03-28 08:45:30.565 [WRN] 6384721233056229024 request GET /validate	

2024-03-28 08:45:30.603 [WRN] 6384721233056229024 responseBody GET /validate {"message":"Token is valid"}
2024-03-28 08:45:31.596 [WRN] 63847212331594177410 request GET /validate	

2024-03-28 08:45:31.626 [WRN] 63847212331594177410 responseBody GET /validate {"message":"Token is valid"}
2024-03-28 08:45:41.544 [WRN] 6384721234154204984 request GET /validate	

2024-03-28 08:45:41.576 [WRN] 6384721234154204984 responseBody GET /validate 
2024-03-28 08:45:43.035 [WRN] 6384721234303316226 request GET /validate	

2024-03-28 08:45:43.073 [WRN] 6384721234303316226 responseBody GET /validate 
2024-03-28 08:45:43.930 [WRN] 63847212343927823610 request GET /validate	

2024-03-28 08:45:43.961 [WRN] 63847212343927823610 responseBody GET /validate 
2024-03-28 08:45:44.723 [WRN] 6384721234472061714 request GET /validate	

2024-03-28 08:45:44.752 [WRN] 6384721234472061714 responseBody GET /validate 
2024-03-28 08:45:49.456 [WRN] 6384721234945429254 request GET /validate	

2024-03-28 08:45:49.498 [WRN] 6384721234945429254 responseBody GET /validate 
2024-03-28 08:45:50.467 [WRN] 63847212350465513810 request GET /validate	

2024-03-28 08:45:50.499 [WRN] 63847212350465513810 responseBody GET /validate 
2024-03-28 08:45:51.296 [WRN] 63847212351295237312 request GET /validate	

2024-03-28 08:45:51.320 [WRN] 63847212351295237312 responseBody GET /validate 
2024-03-28 08:45:52.166 [WRN] 6384721235216435856 request GET /validate	

2024-03-28 08:45:52.229 [WRN] 6384721235216435856 responseBody GET /validate 
2024-03-28 08:54:22.641 [WRN] 63847212862536693310 Exception GET /swagger/v1/swagger.json Conflicting method/path combination "POST api/v1/auth/token" for actions - WebApi.Partner.Controllers.AuthController.CreateToken (WebApi.Partner),WebApi.Partner.Controllers.HCMController.CreateToken (WebApi.Partner). Actions require a unique method/path combination for Swagger/OpenAPI 3.0. Use ConflictingActionsResolver as a workaround
2024-03-28 08:55:08.279 [WRN] 63847212908196043311 Exception GET /swagger/v1/swagger.json Conflicting method/path combination "POST api/v1/auth/token" for actions - WebApi.Partner.Controllers.AuthController.CreateToken (WebApi.Partner),WebApi.Partner.Controllers.HCMController.CreateToken (WebApi.Partner). Actions require a unique method/path combination for Swagger/OpenAPI 3.0. Use ConflictingActionsResolver as a workaround
2024-03-28 08:56:10.398 [WRN] 63847212970316861510 Exception GET /swagger/v1/swagger.json Conflicting method/path combination "POST api/v1/auth/token" for actions - WebApi.Partner.Controllers.AuthController.CreateToken (WebApi.Partner),WebApi.Partner.Controllers.HCMController.CreateToken (WebApi.Partner). Actions require a unique method/path combination for Swagger/OpenAPI 3.0. Use ConflictingActionsResolver as a workaround
2024-03-28 08:57:27.773 [WRN] 6384721304769620279 Exception GET /swagger/v1/swagger.json Conflicting method/path combination "POST api/v1/auth/token" for actions - WebApi.Partner.Controllers.AuthController.CreateToken (WebApi.Partner),WebApi.Partner.Controllers.HCMController.CreateToken (WebApi.Partner). Actions require a unique method/path combination for Swagger/OpenAPI 3.0. Use ConflictingActionsResolver as a workaround
2024-03-28 08:58:13.470 [WRN] 6384721309339060024 Exception GET /swagger/v1/swagger.json Conflicting method/path combination "POST api/v1/auth/token" for actions - WebApi.Partner.Controllers.AuthController.CreateToken (WebApi.Partner),WebApi.Partner.Controllers.HCMController.CreateToken (WebApi.Partner). Actions require a unique method/path combination for Swagger/OpenAPI 3.0. Use ConflictingActionsResolver as a workaround
2024-03-28 08:58:17.504 [WRN] 6384721309750205386 request GET /validate	

2024-03-28 08:58:18.070 [WRN] 6384721309750205386 responseBody GET /validate 
2024-03-28 08:58:21.143 [WRN] 63847213101138197817 request POST /api/v1/auth/token	
{
    "UserName":"admin",
    "Password":"test"
}
2024-03-28 08:58:21.193 [WRN] 63847213101138197817 Exception POST /api/v1/auth/token The request matched multiple endpoints. Matches: 

WebApi.Partner.Controllers.AuthController.CreateToken (WebApi.Partner)
WebApi.Partner.Controllers.HCMController.CreateToken (WebApi.Partner)
2024-03-28 08:58:23.390 [WRN] 63847213103388623712 request POST /api/v1/auth/token	
{
    "UserName":"admin",
    "Password":"test"
}
2024-03-28 08:58:23.419 [WRN] 63847213103388623712 Exception POST /api/v1/auth/token The request matched multiple endpoints. Matches: 

WebApi.Partner.Controllers.AuthController.CreateToken (WebApi.Partner)
WebApi.Partner.Controllers.HCMController.CreateToken (WebApi.Partner)
