2023-08-08 23:02:38.980 [WRN] 6382713255882273848 responseBody GET /swagger/v1/swagger.json {
  "openapi": "3.0.1",
  "info": {
    "title": "WINMART",
    "version": "v1"
  },
  "paths": {
    "/api/v1/phuc-long/order/create": {
      "post": {
        "tags": [
          "MakeOrder"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phuc-long/order/check": {
      "get": {
        "tags": [
          "MakeOrder"
        ],
        "parameters": [
          {
            "name": "AppCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "200101-41498-001-0001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_order": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/export_error_menu": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_drivers_status": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/partner/card": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/topup": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/serial": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/esim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/physical-sim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/subscriber-info": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/o2/update": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/create": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "PartnerCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "373701"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1630307833376"
            }
          },
          {
            "name": "AppCode",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "NOWFOOD"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/list": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/count": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/update-status": {
      "put": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/refund": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/register": {
      "post": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/check/phone": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "parameters": [
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/update-status": {
      "put": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BillingInfo": {
        "type": "object",
        "properties": {
          "TaxID": {
            "type": "string",
            "nullable": true
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CompanyName": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountOrderRequest": {
        "required": [
          "AppCode",
          "PartnerCode",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "WEB",
            "example": "WEB"
          },
          "StoreNo": {
            "type": "string",
            "default": "2018",
            "example": "2018"
          }
        },
        "additionalProperties": false
      },
      "Coupons": {
        "required": [
          "CouponCode"
        ],
        "type": "object",
        "properties": {
          "CouponCode": {
            "type": "string"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "DiscountPercent": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateEsimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePhysicalSimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "SerialSimKIT": {
            "type": "string",
            "nullable": true
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IssueVoucher": {
        "required": [
          "NumberOfVouchers",
          "PhoneNumber"
        ],
        "type": "object",
        "properties": {
          "PhoneNumber": {
            "maxLength": 11,
            "type": "string"
          },
          "NumberOfVouchers": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MembershipCard": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CardClass": {
            "type": "string",
            "nullable": true
          },
          "TotalPoints": {
            "type": "number",
            "format": "double"
          },
          "AvailabilityPoints": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Meta": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer",
            "format": "int32"
          },
          "Message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDiscount": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "OfferNo": {
            "type": "string",
            "nullable": true
          },
          "OfferType": {
            "type": "string",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineDto": {
        "required": [
          "ItemNo",
          "Quantity",
          "TaxGroupCode",
          "Uom",
          "VatPercent"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "maximum": 99999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "maximum": 99999,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "maxLength": 18,
            "minLength": 0,
            "type": "string"
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string"
          },
          "OldPrice": {
            "type": "number",
            "format": "double"
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "Quantity": {
            "maximum": 999,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "default": 1,
            "example": 1
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "LineAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountInVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountIncVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "TaxGroupCode": {
            "type": "string"
          },
          "VatPercent": {
            "type": "integer",
            "format": "int32"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "CupType": {
            "type": "string",
            "nullable": true
          },
          "Size": {
            "type": "string",
            "nullable": true
          },
          "IsTopping": {
            "type": "boolean"
          },
          "IsCombo": {
            "type": "boolean"
          },
          "ComboNo": {
            "type": "string",
            "nullable": true
          },
          "ComboId": {
            "type": "integer",
            "format": "int32"
          },
          "ArticleType": {
            "type": "string",
            "nullable": true
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "Loyalty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLoyalty"
            },
            "nullable": true
          },
          "OptionEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineOptionDto"
            },
            "nullable": true
          },
          "DiscountEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscount"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineOptionDto": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "OptionType": {
            "type": "string",
            "nullable": true
          },
          "OptionName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "Qty": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderLoyalty": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderPaymentDto": {
        "required": [
          "AmountTendered",
          "CurrencyCode",
          "ExchangeRate",
          "LineId",
          "PaymentMethod"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "PaymentMethod": {
            "type": "string"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "ExchangeRate": {
            "type": "number",
            "format": "double"
          },
          "AmountTendered": {
            "type": "number",
            "format": "double"
          },
          "AmountInCurrency": {
            "type": "number",
            "format": "double"
          },
          "TransactionNo": {
            "type": "string",
            "nullable": true
          },
          "ApprovalCode": {
            "type": "string",
            "nullable": true
          },
          "TraceCode": {
            "type": "string",
            "nullable": true
          },
          "ReferenceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderRequestBody": {
        "required": [
          "AppCode",
          "OrderDate",
          "OrderNo",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "AppCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "PartnerCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrderNo": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "OrderDate": {
            "type": "string",
            "format": "date-time"
          },
          "StoreNo": {
            "type": "string",
            "default": "2001",
            "example": "2001"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CustAddress": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "maximum": 999,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "SaleTypeId": {
            "maximum": 99,
            "minimum": 10,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "TotalAmount": {
            "type": "number",
            "format": "double"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double"
          },
          "ShippingFee": {
            "type": "number",
            "format": "double"
          },
          "HasVatInvoice": {
            "type": "boolean"
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "WinCode": {
            "type": "string",
            "nullable": true
          },
          "BillingInfo": {
            "$ref": "#/components/schemas/BillingInfo"
          },
          "UseCoupon": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Coupons"
            },
            "nullable": true
          },
          "ShippingInfo": {
            "$ref": "#/components/schemas/ShippingInfo"
          },
          "Serial": {
            "type": "string",
            "nullable": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineDto"
            },
            "nullable": true
          },
          "Payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPaymentDto"
            },
            "nullable": true
          },
          "MembershipCard": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MembershipCard"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "POSPurchaseCardRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "PurchaseValue",
          "Quantity",
          "ServiceCode",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "ServiceType": {
            "type": "string",
            "default": "PURCHASE_CARD",
            "example": "PURCHASE_CARD"
          },
          "ServiceCode": {
            "type": "string",
            "default": "GPPC.100",
            "example": "GPPC.100"
          },
          "PurchaseValue": {
            "maximum": 10000000,
            "minimum": 9999,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          },
          "Quantity": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          }
        },
        "additionalProperties": false
      },
      "POSTopupRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "Receiver",
          "TopupValue"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "Receiver": {
            "type": "string",
            "default": "0559384959",
            "example": "0559384959"
          },
          "TopupValue": {
            "maximum": 10000000,
            "minimum": 10000,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback": {
        "type": "object",
        "properties": {
          "object_changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/object_changes"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback_update_order": {
        "required": [
          "order_code"
        ],
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string"
          },
          "update_type": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "pick_time": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "merchant_note": {
            "type": "string",
            "nullable": true
          },
          "note_for_shipper": {
            "type": "string",
            "nullable": true
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "serial": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefundItems": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "OldPrice": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "TaxGroupCode": {
            "type": "string",
            "nullable": true
          },
          "VatPercent": {
            "type": "number",
            "format": "double"
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Remark": {
        "type": "object",
        "properties": {
          "Remark1": {
            "type": "string",
            "nullable": true
          },
          "Remark2": {
            "type": "string",
            "nullable": true
          },
          "Remark3": {
            "type": "string",
            "nullable": true
          },
          "Remark4": {
            "type": "string",
            "nullable": true
          },
          "Remark5": {
            "type": "string",
            "nullable": true
          },
          "Remark6": {
            "type": "string",
            "nullable": true
          },
          "Remark7": {
            "type": "string",
            "nullable": true
          },
          "Remark8": {
            "type": "string",
            "nullable": true
          },
          "Remark9": {
            "type": "string",
            "nullable": true
          },
          "Remark10": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestListOrderPOS": {
        "required": [
          "PageNumber",
          "PageSize",
          "PartnerCode",
          "PosNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "SHOPEE",
            "nullable": true,
            "example": "SHOPEE"
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "FromDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "ToDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "CustomerKeyword": {
            "type": "string",
            "default": "Tên khách",
            "nullable": true,
            "example": "Tên khách"
          },
          "ItemKeyword": {
            "type": "string",
            "default": "Tên sản phẩm",
            "nullable": true,
            "example": "Tên sản phẩm"
          },
          "PageNumber": {
            "type": "integer",
            "format": "int32",
            "default": "1",
            "example": "1"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32",
            "default": "10",
            "example": "10"
          }
        },
        "additionalProperties": false
      },
      "RequestUpdateOrderStatus": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PaymentAmount",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "OrderNo": {
            "type": "string",
            "default": "PLH1652759636107",
            "example": "PLH1652759636107"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double",
            "default": "0",
            "example": "0"
          },
          "Status": {
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseClient": {
        "type": "object",
        "properties": {
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "Data": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesReturnRequest": {
        "required": [
          "OrderNo",
          "OrgOrderNo",
          "PartnerCode",
          "PosNo",
          "ReturnedOrderNo",
          "TenderType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "ReturnedOrderNo": {
            "type": "string"
          },
          "OrgOrderNo": {
            "type": "string"
          },
          "TransactionDatetime": {
            "type": "string",
            "format": "date-time"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "TenderType": {
            "type": "string"
          },
          "RefundAmount": {
            "type": "number",
            "format": "double"
          },
          "RefundItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundItems"
            },
            "nullable": true
          },
          "InvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrgInvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "MerchantId": {
            "type": "string",
            "nullable": true
          },
          "StoreNo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingInfo": {
        "type": "object",
        "properties": {
          "ReceiverName": {
            "type": "string",
            "nullable": true
          },
          "ReceiverPhone": {
            "type": "string",
            "nullable": true
          },
          "ReceiverEmail": {
            "type": "string",
            "nullable": true
          },
          "ReceiverAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateStatusVoucherSAP": {
        "required": [
          "OrderNo",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "Vouchers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTierMemberO2": {
        "required": [
          "DataUpdate",
          "MemberNumber",
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "O2",
            "example": "O2"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "ServiceType": {
            "type": "string",
            "default": "O2_UPDATE_TIER",
            "example": "O2_UPDATE_TIER"
          },
          "MemberNumber": {
            "type": "string",
            "default": "0559900185",
            "example": "0559900185"
          },
          "DataUpdate": {
            "type": "string",
            "default": "VIP",
            "example": "VIP"
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidateKitStatusRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          }
        },
        "additionalProperties": false
      },
      "driver_arriving_times": {
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "driver_uid": {
            "type": "integer",
            "format": "int32"
          },
          "arriving_time": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "export_error_menu": {
        "type": "object",
        "properties": {
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          },
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "error_type": {
            "type": "string",
            "nullable": true
          },
          "error_time": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "object_changes": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "partner_api_url_callback_update_drivers_status": {
        "type": "object",
        "properties": {
          "driver_arriving_times": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/driver_arriving_times"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "description": "Basic Authorization header using the Bearer scheme.",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basic": [ ]
    }
  ]
}
2023-08-08 23:02:46.824 [WRN] 63827132566820735810 request PUT /api/v1/voucher/update-status	
{
  "PosNo": "201801",
  "OrderNo": "1691510567",
  "Status":"RDM",
  "Vouchers":["702308082127360734"]
}
2023-08-08 23:02:48.866 [WRN] b4838b5cfcad492c9bb60b0d4abd8ddc Request http://api-bluepos.masan.local/api/sap/winlife/redeemCpnVch	
{"OrderNo":"1691510567","TotalBill":0.0,"SiteCode":"2018","POSTerminal":"201801","ListSeriNo":[{"CompanyCode":"","Partner":"","VoucherNumber":"702308082127360734","IsVoucher":false,"Value":0.0,"ArticleNo":"70100041","ArticleType":"ZCOU","Status":"RDM"}]}
2023-08-08 23:02:53.197 [WRN] b4838b5cfcad492c9bb60b0d4abd8ddc Request http://api-bluepos.masan.local/api/sap/winlife/redeemCpnVch	
{"Status":200,"Message":"OK","Data":[{"Status":"Successful","Return":"0","ActicleNo":"","ActicleType":"VC_CU","VoucherNumber":null,"Value":"","Voucher_Currency":"","Validity_From_Date":null,"Expiry_Date":"","CompanyCode":"","Partner":null,"IsEmployee":null}]}
2023-08-08 23:02:53.257 [WRN] 63827132566820735810 responseBody PUT /api/v1/voucher/update-status {"Meta":{"Code":200,"Message":"Tạo voucher thành công"},"Data":null}
2023-08-08 23:12:07.109 [WRN] 6382713312698406784 responseBody GET /swagger/v1/swagger.json {
  "openapi": "3.0.1",
  "info": {
    "title": "WINMART",
    "version": "v1"
  },
  "paths": {
    "/api/v1/phuc-long/order/create": {
      "post": {
        "tags": [
          "MakeOrder"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phuc-long/order/check": {
      "get": {
        "tags": [
          "MakeOrder"
        ],
        "parameters": [
          {
            "name": "AppCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "200101-41498-001-0001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_order": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/export_error_menu": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_drivers_status": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/partner/card": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/topup": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/serial": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/esim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/physical-sim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/subscriber-info": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/o2/update": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/create": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "PartnerCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "373701"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1630307833376"
            }
          },
          {
            "name": "AppCode",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "NOWFOOD"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/list": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/count": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/update-status": {
      "put": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/refund": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/register": {
      "post": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/check/phone": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "parameters": [
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/update-status": {
      "put": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BillingInfo": {
        "type": "object",
        "properties": {
          "TaxID": {
            "type": "string",
            "nullable": true
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CompanyName": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountOrderRequest": {
        "required": [
          "AppCode",
          "PartnerCode",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "WEB",
            "example": "WEB"
          },
          "StoreNo": {
            "type": "string",
            "default": "2018",
            "example": "2018"
          }
        },
        "additionalProperties": false
      },
      "Coupons": {
        "required": [
          "CouponCode"
        ],
        "type": "object",
        "properties": {
          "CouponCode": {
            "type": "string"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "DiscountPercent": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateEsimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePhysicalSimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "SerialSimKIT": {
            "type": "string",
            "nullable": true
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IssueVoucher": {
        "required": [
          "NumberOfVouchers",
          "PhoneNumber"
        ],
        "type": "object",
        "properties": {
          "PhoneNumber": {
            "maxLength": 11,
            "type": "string"
          },
          "NumberOfVouchers": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MembershipCard": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CardClass": {
            "type": "string",
            "nullable": true
          },
          "TotalPoints": {
            "type": "number",
            "format": "double"
          },
          "AvailabilityPoints": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Meta": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer",
            "format": "int32"
          },
          "Message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDiscount": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "OfferNo": {
            "type": "string",
            "nullable": true
          },
          "OfferType": {
            "type": "string",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineDto": {
        "required": [
          "ItemNo",
          "Quantity",
          "TaxGroupCode",
          "Uom",
          "VatPercent"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "maximum": 99999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "maximum": 99999,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "maxLength": 18,
            "minLength": 0,
            "type": "string"
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string"
          },
          "OldPrice": {
            "type": "number",
            "format": "double"
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "Quantity": {
            "maximum": 999,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "default": 1,
            "example": 1
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "LineAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountInVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountIncVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "TaxGroupCode": {
            "type": "string"
          },
          "VatPercent": {
            "type": "integer",
            "format": "int32"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "CupType": {
            "type": "string",
            "nullable": true
          },
          "Size": {
            "type": "string",
            "nullable": true
          },
          "IsTopping": {
            "type": "boolean"
          },
          "IsCombo": {
            "type": "boolean"
          },
          "ComboNo": {
            "type": "string",
            "nullable": true
          },
          "ComboId": {
            "type": "integer",
            "format": "int32"
          },
          "ArticleType": {
            "type": "string",
            "nullable": true
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "Loyalty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLoyalty"
            },
            "nullable": true
          },
          "OptionEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineOptionDto"
            },
            "nullable": true
          },
          "DiscountEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscount"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineOptionDto": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "OptionType": {
            "type": "string",
            "nullable": true
          },
          "OptionName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "Qty": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderLoyalty": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderPaymentDto": {
        "required": [
          "AmountTendered",
          "CurrencyCode",
          "ExchangeRate",
          "LineId",
          "PaymentMethod"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "PaymentMethod": {
            "type": "string"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "ExchangeRate": {
            "type": "number",
            "format": "double"
          },
          "AmountTendered": {
            "type": "number",
            "format": "double"
          },
          "AmountInCurrency": {
            "type": "number",
            "format": "double"
          },
          "TransactionNo": {
            "type": "string",
            "nullable": true
          },
          "ApprovalCode": {
            "type": "string",
            "nullable": true
          },
          "TraceCode": {
            "type": "string",
            "nullable": true
          },
          "ReferenceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderRequestBody": {
        "required": [
          "AppCode",
          "OrderDate",
          "OrderNo",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "AppCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "PartnerCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrderNo": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "OrderDate": {
            "type": "string",
            "format": "date-time"
          },
          "StoreNo": {
            "type": "string",
            "default": "2001",
            "example": "2001"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CustAddress": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "maximum": 999,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "SaleTypeId": {
            "maximum": 99,
            "minimum": 10,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "TotalAmount": {
            "type": "number",
            "format": "double"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double"
          },
          "ShippingFee": {
            "type": "number",
            "format": "double"
          },
          "HasVatInvoice": {
            "type": "boolean"
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "WinCode": {
            "type": "string",
            "nullable": true
          },
          "BillingInfo": {
            "$ref": "#/components/schemas/BillingInfo"
          },
          "UseCoupon": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Coupons"
            },
            "nullable": true
          },
          "ShippingInfo": {
            "$ref": "#/components/schemas/ShippingInfo"
          },
          "Serial": {
            "type": "string",
            "nullable": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineDto"
            },
            "nullable": true
          },
          "Payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPaymentDto"
            },
            "nullable": true
          },
          "MembershipCard": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MembershipCard"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "POSPurchaseCardRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "PurchaseValue",
          "Quantity",
          "ServiceCode",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "ServiceType": {
            "type": "string",
            "default": "PURCHASE_CARD",
            "example": "PURCHASE_CARD"
          },
          "ServiceCode": {
            "type": "string",
            "default": "GPPC.100",
            "example": "GPPC.100"
          },
          "PurchaseValue": {
            "maximum": 10000000,
            "minimum": 9999,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          },
          "Quantity": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          }
        },
        "additionalProperties": false
      },
      "POSTopupRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "Receiver",
          "TopupValue"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "Receiver": {
            "type": "string",
            "default": "0559384959",
            "example": "0559384959"
          },
          "TopupValue": {
            "maximum": 10000000,
            "minimum": 10000,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback": {
        "type": "object",
        "properties": {
          "object_changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/object_changes"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback_update_order": {
        "required": [
          "order_code"
        ],
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string"
          },
          "update_type": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "pick_time": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "merchant_note": {
            "type": "string",
            "nullable": true
          },
          "note_for_shipper": {
            "type": "string",
            "nullable": true
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "serial": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefundItems": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "OldPrice": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "TaxGroupCode": {
            "type": "string",
            "nullable": true
          },
          "VatPercent": {
            "type": "number",
            "format": "double"
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Remark": {
        "type": "object",
        "properties": {
          "Remark1": {
            "type": "string",
            "nullable": true
          },
          "Remark2": {
            "type": "string",
            "nullable": true
          },
          "Remark3": {
            "type": "string",
            "nullable": true
          },
          "Remark4": {
            "type": "string",
            "nullable": true
          },
          "Remark5": {
            "type": "string",
            "nullable": true
          },
          "Remark6": {
            "type": "string",
            "nullable": true
          },
          "Remark7": {
            "type": "string",
            "nullable": true
          },
          "Remark8": {
            "type": "string",
            "nullable": true
          },
          "Remark9": {
            "type": "string",
            "nullable": true
          },
          "Remark10": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestListOrderPOS": {
        "required": [
          "PageNumber",
          "PageSize",
          "PartnerCode",
          "PosNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "SHOPEE",
            "nullable": true,
            "example": "SHOPEE"
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "FromDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "ToDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "CustomerKeyword": {
            "type": "string",
            "default": "Tên khách",
            "nullable": true,
            "example": "Tên khách"
          },
          "ItemKeyword": {
            "type": "string",
            "default": "Tên sản phẩm",
            "nullable": true,
            "example": "Tên sản phẩm"
          },
          "PageNumber": {
            "type": "integer",
            "format": "int32",
            "default": "1",
            "example": "1"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32",
            "default": "10",
            "example": "10"
          }
        },
        "additionalProperties": false
      },
      "RequestUpdateOrderStatus": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PaymentAmount",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "OrderNo": {
            "type": "string",
            "default": "PLH1652759636107",
            "example": "PLH1652759636107"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double",
            "default": "0",
            "example": "0"
          },
          "Status": {
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseClient": {
        "type": "object",
        "properties": {
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "Data": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesReturnRequest": {
        "required": [
          "OrderNo",
          "OrgOrderNo",
          "PartnerCode",
          "PosNo",
          "ReturnedOrderNo",
          "TenderType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "ReturnedOrderNo": {
            "type": "string"
          },
          "OrgOrderNo": {
            "type": "string"
          },
          "TransactionDatetime": {
            "type": "string",
            "format": "date-time"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "TenderType": {
            "type": "string"
          },
          "RefundAmount": {
            "type": "number",
            "format": "double"
          },
          "RefundItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundItems"
            },
            "nullable": true
          },
          "InvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrgInvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "MerchantId": {
            "type": "string",
            "nullable": true
          },
          "StoreNo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingInfo": {
        "type": "object",
        "properties": {
          "ReceiverName": {
            "type": "string",
            "nullable": true
          },
          "ReceiverPhone": {
            "type": "string",
            "nullable": true
          },
          "ReceiverEmail": {
            "type": "string",
            "nullable": true
          },
          "ReceiverAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateStatusVoucherSAP": {
        "required": [
          "OrderNo",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "Vouchers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTierMemberO2": {
        "required": [
          "DataUpdate",
          "MemberNumber",
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "O2",
            "example": "O2"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "ServiceType": {
            "type": "string",
            "default": "O2_UPDATE_TIER",
            "example": "O2_UPDATE_TIER"
          },
          "MemberNumber": {
            "type": "string",
            "default": "0559900185",
            "example": "0559900185"
          },
          "DataUpdate": {
            "type": "string",
            "default": "VIP",
            "example": "VIP"
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidateKitStatusRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          }
        },
        "additionalProperties": false
      },
      "driver_arriving_times": {
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "driver_uid": {
            "type": "integer",
            "format": "int32"
          },
          "arriving_time": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "export_error_menu": {
        "type": "object",
        "properties": {
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          },
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "error_type": {
            "type": "string",
            "nullable": true
          },
          "error_time": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "object_changes": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "partner_api_url_callback_update_drivers_status": {
        "type": "object",
        "properties": {
          "driver_arriving_times": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/driver_arriving_times"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "description": "Basic Authorization header using the Bearer scheme.",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basic": [ ]
    }
  ]
}
2023-08-08 23:12:10.788 [WRN] 6382713313078483289 request PUT /api/v1/voucher/update-status	
{
  "PosNo": "201801",
  "OrderNo": "1691511131",
  "Status":"RDM",
  "Vouchers":["402308082127360734"]
}
2023-08-08 23:12:11.956 [WRN] d0a624852bec4b9e844763ad339e1072 Request http://api-bluepos.masan.local/api/sap/winlife/redeemCpnVch	
{"OrderNo":"1691511131","TotalBill":0.0,"SiteCode":"2018","POSTerminal":"201801","ListSeriNo":[{"CompanyCode":"WCM","Partner":"","VoucherNumber":"402308082127360734","IsVoucher":false,"Value":10.000,"ArticleNo":"70100041","ArticleType":"ZCOU","Status":"RDM"}]}
2023-08-08 23:12:12.256 [WRN] d0a624852bec4b9e844763ad339e1072 Request http://api-bluepos.masan.local/api/sap/winlife/redeemCpnVch	
{"Status":200,"Message":"OK","Data":[{"Status":"Successful","Return":"0","ActicleNo":"","ActicleType":"VC_CU","VoucherNumber":null,"Value":"","Voucher_Currency":"","Validity_From_Date":null,"Expiry_Date":"","CompanyCode":"WCM","Partner":null,"IsEmployee":null}]}
2023-08-08 23:12:12.410 [WRN] 6382713313078483289 responseBody PUT /api/v1/voucher/update-status {"Meta":{"Code":200,"Message":"Sử dụng voucher thành công"},"Data":null}
2023-08-08 23:14:12.483 [WRN] 6382713325230653917 responseBody GET /swagger/v1/swagger.json {
  "openapi": "3.0.1",
  "info": {
    "title": "WINMART",
    "version": "v1"
  },
  "paths": {
    "/api/v1/phuc-long/order/create": {
      "post": {
        "tags": [
          "MakeOrder"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phuc-long/order/check": {
      "get": {
        "tags": [
          "MakeOrder"
        ],
        "parameters": [
          {
            "name": "AppCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "200101-41498-001-0001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_order": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/export_error_menu": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_drivers_status": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/partner/card": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/topup": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/serial": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/esim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/physical-sim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/subscriber-info": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/o2/update": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/create": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "PartnerCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "373701"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1630307833376"
            }
          },
          {
            "name": "AppCode",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "NOWFOOD"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/list": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/count": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/update-status": {
      "put": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/refund": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/register": {
      "post": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/check/phone": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "parameters": [
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/update-status": {
      "put": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BillingInfo": {
        "type": "object",
        "properties": {
          "TaxID": {
            "type": "string",
            "nullable": true
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CompanyName": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountOrderRequest": {
        "required": [
          "AppCode",
          "PartnerCode",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "WEB",
            "example": "WEB"
          },
          "StoreNo": {
            "type": "string",
            "default": "2018",
            "example": "2018"
          }
        },
        "additionalProperties": false
      },
      "Coupons": {
        "required": [
          "CouponCode"
        ],
        "type": "object",
        "properties": {
          "CouponCode": {
            "type": "string"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "DiscountPercent": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateEsimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePhysicalSimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "SerialSimKIT": {
            "type": "string",
            "nullable": true
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IssueVoucher": {
        "required": [
          "NumberOfVouchers",
          "PhoneNumber"
        ],
        "type": "object",
        "properties": {
          "PhoneNumber": {
            "maxLength": 11,
            "type": "string"
          },
          "NumberOfVouchers": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MembershipCard": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CardClass": {
            "type": "string",
            "nullable": true
          },
          "TotalPoints": {
            "type": "number",
            "format": "double"
          },
          "AvailabilityPoints": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Meta": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer",
            "format": "int32"
          },
          "Message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDiscount": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "OfferNo": {
            "type": "string",
            "nullable": true
          },
          "OfferType": {
            "type": "string",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineDto": {
        "required": [
          "ItemNo",
          "Quantity",
          "TaxGroupCode",
          "Uom",
          "VatPercent"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "maximum": 99999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "maximum": 99999,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "maxLength": 18,
            "minLength": 0,
            "type": "string"
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string"
          },
          "OldPrice": {
            "type": "number",
            "format": "double"
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "Quantity": {
            "maximum": 999,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "default": 1,
            "example": 1
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "LineAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountInVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountIncVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "TaxGroupCode": {
            "type": "string"
          },
          "VatPercent": {
            "type": "integer",
            "format": "int32"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "CupType": {
            "type": "string",
            "nullable": true
          },
          "Size": {
            "type": "string",
            "nullable": true
          },
          "IsTopping": {
            "type": "boolean"
          },
          "IsCombo": {
            "type": "boolean"
          },
          "ComboNo": {
            "type": "string",
            "nullable": true
          },
          "ComboId": {
            "type": "integer",
            "format": "int32"
          },
          "ArticleType": {
            "type": "string",
            "nullable": true
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "Loyalty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLoyalty"
            },
            "nullable": true
          },
          "OptionEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineOptionDto"
            },
            "nullable": true
          },
          "DiscountEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscount"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineOptionDto": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "OptionType": {
            "type": "string",
            "nullable": true
          },
          "OptionName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "Qty": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderLoyalty": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderPaymentDto": {
        "required": [
          "AmountTendered",
          "CurrencyCode",
          "ExchangeRate",
          "LineId",
          "PaymentMethod"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "PaymentMethod": {
            "type": "string"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "ExchangeRate": {
            "type": "number",
            "format": "double"
          },
          "AmountTendered": {
            "type": "number",
            "format": "double"
          },
          "AmountInCurrency": {
            "type": "number",
            "format": "double"
          },
          "TransactionNo": {
            "type": "string",
            "nullable": true
          },
          "ApprovalCode": {
            "type": "string",
            "nullable": true
          },
          "TraceCode": {
            "type": "string",
            "nullable": true
          },
          "ReferenceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderRequestBody": {
        "required": [
          "AppCode",
          "OrderDate",
          "OrderNo",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "AppCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "PartnerCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrderNo": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "OrderDate": {
            "type": "string",
            "format": "date-time"
          },
          "StoreNo": {
            "type": "string",
            "default": "2001",
            "example": "2001"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CustAddress": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "maximum": 999,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "SaleTypeId": {
            "maximum": 99,
            "minimum": 10,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "TotalAmount": {
            "type": "number",
            "format": "double"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double"
          },
          "ShippingFee": {
            "type": "number",
            "format": "double"
          },
          "HasVatInvoice": {
            "type": "boolean"
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "WinCode": {
            "type": "string",
            "nullable": true
          },
          "BillingInfo": {
            "$ref": "#/components/schemas/BillingInfo"
          },
          "UseCoupon": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Coupons"
            },
            "nullable": true
          },
          "ShippingInfo": {
            "$ref": "#/components/schemas/ShippingInfo"
          },
          "Serial": {
            "type": "string",
            "nullable": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineDto"
            },
            "nullable": true
          },
          "Payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPaymentDto"
            },
            "nullable": true
          },
          "MembershipCard": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MembershipCard"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "POSPurchaseCardRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "PurchaseValue",
          "Quantity",
          "ServiceCode",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "ServiceType": {
            "type": "string",
            "default": "PURCHASE_CARD",
            "example": "PURCHASE_CARD"
          },
          "ServiceCode": {
            "type": "string",
            "default": "GPPC.100",
            "example": "GPPC.100"
          },
          "PurchaseValue": {
            "maximum": 10000000,
            "minimum": 9999,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          },
          "Quantity": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          }
        },
        "additionalProperties": false
      },
      "POSTopupRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "Receiver",
          "TopupValue"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "Receiver": {
            "type": "string",
            "default": "0559384959",
            "example": "0559384959"
          },
          "TopupValue": {
            "maximum": 10000000,
            "minimum": 10000,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback": {
        "type": "object",
        "properties": {
          "object_changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/object_changes"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback_update_order": {
        "required": [
          "order_code"
        ],
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string"
          },
          "update_type": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "pick_time": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "merchant_note": {
            "type": "string",
            "nullable": true
          },
          "note_for_shipper": {
            "type": "string",
            "nullable": true
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "serial": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefundItems": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "OldPrice": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "TaxGroupCode": {
            "type": "string",
            "nullable": true
          },
          "VatPercent": {
            "type": "number",
            "format": "double"
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Remark": {
        "type": "object",
        "properties": {
          "Remark1": {
            "type": "string",
            "nullable": true
          },
          "Remark2": {
            "type": "string",
            "nullable": true
          },
          "Remark3": {
            "type": "string",
            "nullable": true
          },
          "Remark4": {
            "type": "string",
            "nullable": true
          },
          "Remark5": {
            "type": "string",
            "nullable": true
          },
          "Remark6": {
            "type": "string",
            "nullable": true
          },
          "Remark7": {
            "type": "string",
            "nullable": true
          },
          "Remark8": {
            "type": "string",
            "nullable": true
          },
          "Remark9": {
            "type": "string",
            "nullable": true
          },
          "Remark10": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestListOrderPOS": {
        "required": [
          "PageNumber",
          "PageSize",
          "PartnerCode",
          "PosNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "SHOPEE",
            "nullable": true,
            "example": "SHOPEE"
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "FromDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "ToDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "CustomerKeyword": {
            "type": "string",
            "default": "Tên khách",
            "nullable": true,
            "example": "Tên khách"
          },
          "ItemKeyword": {
            "type": "string",
            "default": "Tên sản phẩm",
            "nullable": true,
            "example": "Tên sản phẩm"
          },
          "PageNumber": {
            "type": "integer",
            "format": "int32",
            "default": "1",
            "example": "1"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32",
            "default": "10",
            "example": "10"
          }
        },
        "additionalProperties": false
      },
      "RequestUpdateOrderStatus": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PaymentAmount",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "OrderNo": {
            "type": "string",
            "default": "PLH1652759636107",
            "example": "PLH1652759636107"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double",
            "default": "0",
            "example": "0"
          },
          "Status": {
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseClient": {
        "type": "object",
        "properties": {
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "Data": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesReturnRequest": {
        "required": [
          "OrderNo",
          "OrgOrderNo",
          "PartnerCode",
          "PosNo",
          "ReturnedOrderNo",
          "TenderType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "ReturnedOrderNo": {
            "type": "string"
          },
          "OrgOrderNo": {
            "type": "string"
          },
          "TransactionDatetime": {
            "type": "string",
            "format": "date-time"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "TenderType": {
            "type": "string"
          },
          "RefundAmount": {
            "type": "number",
            "format": "double"
          },
          "RefundItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundItems"
            },
            "nullable": true
          },
          "InvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrgInvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "MerchantId": {
            "type": "string",
            "nullable": true
          },
          "StoreNo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingInfo": {
        "type": "object",
        "properties": {
          "ReceiverName": {
            "type": "string",
            "nullable": true
          },
          "ReceiverPhone": {
            "type": "string",
            "nullable": true
          },
          "ReceiverEmail": {
            "type": "string",
            "nullable": true
          },
          "ReceiverAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateStatusVoucherSAP": {
        "required": [
          "OrderNo",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "Vouchers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTierMemberO2": {
        "required": [
          "DataUpdate",
          "MemberNumber",
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "O2",
            "example": "O2"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "ServiceType": {
            "type": "string",
            "default": "O2_UPDATE_TIER",
            "example": "O2_UPDATE_TIER"
          },
          "MemberNumber": {
            "type": "string",
            "default": "0559900185",
            "example": "0559900185"
          },
          "DataUpdate": {
            "type": "string",
            "default": "VIP",
            "example": "VIP"
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidateKitStatusRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          }
        },
        "additionalProperties": false
      },
      "driver_arriving_times": {
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "driver_uid": {
            "type": "integer",
            "format": "int32"
          },
          "arriving_time": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "export_error_menu": {
        "type": "object",
        "properties": {
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          },
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "error_type": {
            "type": "string",
            "nullable": true
          },
          "error_time": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "object_changes": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "partner_api_url_callback_update_drivers_status": {
        "type": "object",
        "properties": {
          "driver_arriving_times": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/driver_arriving_times"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "description": "Basic Authorization header using the Bearer scheme.",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basic": [ ]
    }
  ]
}
2023-08-08 23:14:17.796 [WRN] 6382713325779433249 request PUT /api/v1/voucher/update-status	
{
  "PosNo": "201801",
  "OrderNo": "1691511258",
  "Status":"RDM",
  "Vouchers":["402308082127360734"]
}
2023-08-08 23:14:19.728 [WRN] 6382713325779433249 responseBody PUT /api/v1/voucher/update-status {"Meta":{"Code":1012,"Message":"Voucher không hợp lệ"},"Data":null}
2023-08-08 23:15:11.749 [WRN] 63827133311746720610 request PUT /api/v1/voucher/update-status	
{
  "PosNo": "201801",
  "OrderNo": "1691511312",
  "Status":"RDM",
  "Vouchers":["602308082127360734"]
}
2023-08-08 23:15:11.953 [WRN] 8effb83639f246cc97de942662837de7 Request http://api-bluepos.masan.local/api/sap/winlife/redeemCpnVch	
{"OrderNo":"1691511312","TotalBill":0.0,"SiteCode":"2018","POSTerminal":"201801","ListSeriNo":[{"CompanyCode":"WCM","Partner":"","VoucherNumber":"602308082127360734","IsVoucher":false,"Value":10.000,"ArticleNo":"70100041","ArticleType":"ZCOU","Status":"RDM"}]}
2023-08-08 23:15:12.281 [WRN] 8effb83639f246cc97de942662837de7 Request http://api-bluepos.masan.local/api/sap/winlife/redeemCpnVch	
{"Status":200,"Message":"OK","Data":[{"Status":"Successful","Return":"0","ActicleNo":"","ActicleType":"VC_CU","VoucherNumber":null,"Value":"","Voucher_Currency":"","Validity_From_Date":null,"Expiry_Date":"","CompanyCode":"WCM","Partner":null,"IsEmployee":null}]}
2023-08-08 23:15:12.492 [WRN] 63827133311746720610 responseBody PUT /api/v1/voucher/update-status {"Meta":{"Code":200,"Message":"Sử dụng voucher thành công"},"Data":null}
2023-08-08 23:15:41.120 [WRN] 6382713334111825774 request PUT /api/v1/voucher/update-status	
{
  "PosNo": "201801",
  "OrderNo": "1691511341",
  "Status":"RDM",
  "Vouchers":["602308082127360734","502308082127360734"]
}
2023-08-08 23:15:41.185 [WRN] f555126c3a7c4a009b62806164a53252 Request http://api-bluepos.masan.local/api/sap/winlife/redeemCpnVch	
{"OrderNo":"1691511341","TotalBill":0.0,"SiteCode":"2018","POSTerminal":"201801","ListSeriNo":[{"CompanyCode":"WCM","Partner":"","VoucherNumber":"502308082127360734","IsVoucher":false,"Value":10.000,"ArticleNo":"70100041","ArticleType":"ZCOU","Status":"RDM"}]}
2023-08-08 23:15:41.350 [WRN] f555126c3a7c4a009b62806164a53252 Request http://api-bluepos.masan.local/api/sap/winlife/redeemCpnVch	
{"Status":200,"Message":"OK","Data":[{"Status":"Successful","Return":"0","ActicleNo":"","ActicleType":"VC_CU","VoucherNumber":null,"Value":"","Voucher_Currency":"","Validity_From_Date":null,"Expiry_Date":"","CompanyCode":"WCM","Partner":null,"IsEmployee":null}]}
2023-08-08 23:15:41.380 [WRN] 6382713334111825774 responseBody PUT /api/v1/voucher/update-status {"Meta":{"Code":200,"Message":"Sử dụng voucher thành công"},"Data":null}
2023-08-08 23:15:57.837 [WRN] 63827133357833641511 request PUT /api/v1/voucher/update-status	
{
  "PosNo": "201801",
  "OrderNo": "1691511358",
  "Status":"RDM",
  "Vouchers":["602308082127360734","502308082127360734"]
}
2023-08-08 23:15:57.924 [WRN] 63827133357833641511 responseBody PUT /api/v1/voucher/update-status {"Meta":{"Code":1012,"Message":"Voucher không hợp lệ"},"Data":null}
2023-08-08 23:17:50.857 [WRN] 6382713347070825284 responseBody GET /swagger/v1/swagger.json {
  "openapi": "3.0.1",
  "info": {
    "title": "WINMART",
    "version": "v1"
  },
  "paths": {
    "/api/v1/phuc-long/order/create": {
      "post": {
        "tags": [
          "MakeOrder"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phuc-long/order/check": {
      "get": {
        "tags": [
          "MakeOrder"
        ],
        "parameters": [
          {
            "name": "AppCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "200101-41498-001-0001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_order": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/export_error_menu": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_drivers_status": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/partner/card": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/topup": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/serial": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/esim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/physical-sim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/subscriber-info": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/o2/update": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/create": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "PartnerCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "373701"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1630307833376"
            }
          },
          {
            "name": "AppCode",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "NOWFOOD"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/list": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/count": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/update-status": {
      "put": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/refund": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/register": {
      "post": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/check/phone": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "parameters": [
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/update-status": {
      "put": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BillingInfo": {
        "type": "object",
        "properties": {
          "TaxID": {
            "type": "string",
            "nullable": true
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CompanyName": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountOrderRequest": {
        "required": [
          "AppCode",
          "PartnerCode",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "WEB",
            "example": "WEB"
          },
          "StoreNo": {
            "type": "string",
            "default": "2018",
            "example": "2018"
          }
        },
        "additionalProperties": false
      },
      "Coupons": {
        "required": [
          "CouponCode"
        ],
        "type": "object",
        "properties": {
          "CouponCode": {
            "type": "string"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "DiscountPercent": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateEsimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePhysicalSimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "SerialSimKIT": {
            "type": "string",
            "nullable": true
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IssueVoucher": {
        "required": [
          "NumberOfVouchers",
          "PhoneNumber"
        ],
        "type": "object",
        "properties": {
          "PhoneNumber": {
            "maxLength": 11,
            "type": "string"
          },
          "NumberOfVouchers": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MembershipCard": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CardClass": {
            "type": "string",
            "nullable": true
          },
          "TotalPoints": {
            "type": "number",
            "format": "double"
          },
          "AvailabilityPoints": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Meta": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer",
            "format": "int32"
          },
          "Message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDiscount": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "OfferNo": {
            "type": "string",
            "nullable": true
          },
          "OfferType": {
            "type": "string",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineDto": {
        "required": [
          "ItemNo",
          "Quantity",
          "TaxGroupCode",
          "Uom",
          "VatPercent"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "maximum": 99999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "maximum": 99999,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "maxLength": 18,
            "minLength": 0,
            "type": "string"
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string"
          },
          "OldPrice": {
            "type": "number",
            "format": "double"
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "Quantity": {
            "maximum": 999,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "default": 1,
            "example": 1
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "LineAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountInVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountIncVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "TaxGroupCode": {
            "type": "string"
          },
          "VatPercent": {
            "type": "integer",
            "format": "int32"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "CupType": {
            "type": "string",
            "nullable": true
          },
          "Size": {
            "type": "string",
            "nullable": true
          },
          "IsTopping": {
            "type": "boolean"
          },
          "IsCombo": {
            "type": "boolean"
          },
          "ComboNo": {
            "type": "string",
            "nullable": true
          },
          "ComboId": {
            "type": "integer",
            "format": "int32"
          },
          "ArticleType": {
            "type": "string",
            "nullable": true
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "Loyalty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLoyalty"
            },
            "nullable": true
          },
          "OptionEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineOptionDto"
            },
            "nullable": true
          },
          "DiscountEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscount"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineOptionDto": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "OptionType": {
            "type": "string",
            "nullable": true
          },
          "OptionName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "Qty": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderLoyalty": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderPaymentDto": {
        "required": [
          "AmountTendered",
          "CurrencyCode",
          "ExchangeRate",
          "LineId",
          "PaymentMethod"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "PaymentMethod": {
            "type": "string"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "ExchangeRate": {
            "type": "number",
            "format": "double"
          },
          "AmountTendered": {
            "type": "number",
            "format": "double"
          },
          "AmountInCurrency": {
            "type": "number",
            "format": "double"
          },
          "TransactionNo": {
            "type": "string",
            "nullable": true
          },
          "ApprovalCode": {
            "type": "string",
            "nullable": true
          },
          "TraceCode": {
            "type": "string",
            "nullable": true
          },
          "ReferenceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderRequestBody": {
        "required": [
          "AppCode",
          "OrderDate",
          "OrderNo",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "AppCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "PartnerCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrderNo": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "OrderDate": {
            "type": "string",
            "format": "date-time"
          },
          "StoreNo": {
            "type": "string",
            "default": "2001",
            "example": "2001"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CustAddress": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "maximum": 999,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "SaleTypeId": {
            "maximum": 99,
            "minimum": 10,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "TotalAmount": {
            "type": "number",
            "format": "double"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double"
          },
          "ShippingFee": {
            "type": "number",
            "format": "double"
          },
          "HasVatInvoice": {
            "type": "boolean"
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "WinCode": {
            "type": "string",
            "nullable": true
          },
          "BillingInfo": {
            "$ref": "#/components/schemas/BillingInfo"
          },
          "UseCoupon": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Coupons"
            },
            "nullable": true
          },
          "ShippingInfo": {
            "$ref": "#/components/schemas/ShippingInfo"
          },
          "Serial": {
            "type": "string",
            "nullable": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineDto"
            },
            "nullable": true
          },
          "Payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPaymentDto"
            },
            "nullable": true
          },
          "MembershipCard": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MembershipCard"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "POSPurchaseCardRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "PurchaseValue",
          "Quantity",
          "ServiceCode",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "ServiceType": {
            "type": "string",
            "default": "PURCHASE_CARD",
            "example": "PURCHASE_CARD"
          },
          "ServiceCode": {
            "type": "string",
            "default": "GPPC.100",
            "example": "GPPC.100"
          },
          "PurchaseValue": {
            "maximum": 10000000,
            "minimum": 9999,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          },
          "Quantity": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          }
        },
        "additionalProperties": false
      },
      "POSTopupRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "Receiver",
          "TopupValue"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "Receiver": {
            "type": "string",
            "default": "0559384959",
            "example": "0559384959"
          },
          "TopupValue": {
            "maximum": 10000000,
            "minimum": 10000,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback": {
        "type": "object",
        "properties": {
          "object_changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/object_changes"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback_update_order": {
        "required": [
          "order_code"
        ],
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string"
          },
          "update_type": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "pick_time": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "merchant_note": {
            "type": "string",
            "nullable": true
          },
          "note_for_shipper": {
            "type": "string",
            "nullable": true
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "serial": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefundItems": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "OldPrice": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "TaxGroupCode": {
            "type": "string",
            "nullable": true
          },
          "VatPercent": {
            "type": "number",
            "format": "double"
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Remark": {
        "type": "object",
        "properties": {
          "Remark1": {
            "type": "string",
            "nullable": true
          },
          "Remark2": {
            "type": "string",
            "nullable": true
          },
          "Remark3": {
            "type": "string",
            "nullable": true
          },
          "Remark4": {
            "type": "string",
            "nullable": true
          },
          "Remark5": {
            "type": "string",
            "nullable": true
          },
          "Remark6": {
            "type": "string",
            "nullable": true
          },
          "Remark7": {
            "type": "string",
            "nullable": true
          },
          "Remark8": {
            "type": "string",
            "nullable": true
          },
          "Remark9": {
            "type": "string",
            "nullable": true
          },
          "Remark10": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestListOrderPOS": {
        "required": [
          "PageNumber",
          "PageSize",
          "PartnerCode",
          "PosNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "SHOPEE",
            "nullable": true,
            "example": "SHOPEE"
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "FromDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "ToDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "CustomerKeyword": {
            "type": "string",
            "default": "Tên khách",
            "nullable": true,
            "example": "Tên khách"
          },
          "ItemKeyword": {
            "type": "string",
            "default": "Tên sản phẩm",
            "nullable": true,
            "example": "Tên sản phẩm"
          },
          "PageNumber": {
            "type": "integer",
            "format": "int32",
            "default": "1",
            "example": "1"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32",
            "default": "10",
            "example": "10"
          }
        },
        "additionalProperties": false
      },
      "RequestUpdateOrderStatus": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PaymentAmount",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "OrderNo": {
            "type": "string",
            "default": "PLH1652759636107",
            "example": "PLH1652759636107"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double",
            "default": "0",
            "example": "0"
          },
          "Status": {
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseClient": {
        "type": "object",
        "properties": {
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "Data": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesReturnRequest": {
        "required": [
          "OrderNo",
          "OrgOrderNo",
          "PartnerCode",
          "PosNo",
          "ReturnedOrderNo",
          "TenderType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "ReturnedOrderNo": {
            "type": "string"
          },
          "OrgOrderNo": {
            "type": "string"
          },
          "TransactionDatetime": {
            "type": "string",
            "format": "date-time"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "TenderType": {
            "type": "string"
          },
          "RefundAmount": {
            "type": "number",
            "format": "double"
          },
          "RefundItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundItems"
            },
            "nullable": true
          },
          "InvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrgInvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "MerchantId": {
            "type": "string",
            "nullable": true
          },
          "StoreNo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingInfo": {
        "type": "object",
        "properties": {
          "ReceiverName": {
            "type": "string",
            "nullable": true
          },
          "ReceiverPhone": {
            "type": "string",
            "nullable": true
          },
          "ReceiverEmail": {
            "type": "string",
            "nullable": true
          },
          "ReceiverAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateStatusVoucherSAP": {
        "required": [
          "OrderNo",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "Vouchers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTierMemberO2": {
        "required": [
          "DataUpdate",
          "MemberNumber",
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "O2",
            "example": "O2"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "ServiceType": {
            "type": "string",
            "default": "O2_UPDATE_TIER",
            "example": "O2_UPDATE_TIER"
          },
          "MemberNumber": {
            "type": "string",
            "default": "0559900185",
            "example": "0559900185"
          },
          "DataUpdate": {
            "type": "string",
            "default": "VIP",
            "example": "VIP"
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidateKitStatusRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          }
        },
        "additionalProperties": false
      },
      "driver_arriving_times": {
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "driver_uid": {
            "type": "integer",
            "format": "int32"
          },
          "arriving_time": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "export_error_menu": {
        "type": "object",
        "properties": {
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          },
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "error_type": {
            "type": "string",
            "nullable": true
          },
          "error_time": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "object_changes": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "partner_api_url_callback_update_drivers_status": {
        "type": "object",
        "properties": {
          "driver_arriving_times": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/driver_arriving_times"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "description": "Basic Authorization header using the Bearer scheme.",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basic": [ ]
    }
  ]
}
2023-08-08 23:18:07.302 [WRN] 63827133487299993514 request PUT /api/v1/voucher/update-status	
{
  "PosNo": "201801",
  "OrderNo": "1691511487",
  "Status":"RDM",
  "Vouchers":["602308082127360734","902308082127360734"]
}
2023-08-08 23:18:08.396 [WRN] 63827133487299993514 responseBody PUT /api/v1/voucher/update-status {"Meta":{"Code":400,"Message":"Voucher không hợp lệ"},"Data":null}
2023-08-08 23:18:32.487 [WRN] 63827133512243340412 responseBody GET /swagger/v1/swagger.json {
  "openapi": "3.0.1",
  "info": {
    "title": "WINMART",
    "version": "v1"
  },
  "paths": {
    "/api/v1/phuc-long/order/create": {
      "post": {
        "tags": [
          "MakeOrder"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phuc-long/order/check": {
      "get": {
        "tags": [
          "MakeOrder"
        ],
        "parameters": [
          {
            "name": "AppCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "200101-41498-001-0001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_order": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/export_error_menu": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_drivers_status": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/partner/card": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/topup": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/serial": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/esim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/physical-sim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/subscriber-info": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/o2/update": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/create": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "PartnerCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "373701"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1630307833376"
            }
          },
          {
            "name": "AppCode",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "NOWFOOD"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/list": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/count": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/update-status": {
      "put": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/refund": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/register": {
      "post": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/check/phone": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "parameters": [
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/update-status": {
      "put": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BillingInfo": {
        "type": "object",
        "properties": {
          "TaxID": {
            "type": "string",
            "nullable": true
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CompanyName": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountOrderRequest": {
        "required": [
          "AppCode",
          "PartnerCode",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "WEB",
            "example": "WEB"
          },
          "StoreNo": {
            "type": "string",
            "default": "2018",
            "example": "2018"
          }
        },
        "additionalProperties": false
      },
      "Coupons": {
        "required": [
          "CouponCode"
        ],
        "type": "object",
        "properties": {
          "CouponCode": {
            "type": "string"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "DiscountPercent": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateEsimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePhysicalSimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "SerialSimKIT": {
            "type": "string",
            "nullable": true
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IssueVoucher": {
        "required": [
          "NumberOfVouchers",
          "PhoneNumber"
        ],
        "type": "object",
        "properties": {
          "PhoneNumber": {
            "maxLength": 11,
            "type": "string"
          },
          "NumberOfVouchers": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MembershipCard": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CardClass": {
            "type": "string",
            "nullable": true
          },
          "TotalPoints": {
            "type": "number",
            "format": "double"
          },
          "AvailabilityPoints": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Meta": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer",
            "format": "int32"
          },
          "Message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDiscount": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "OfferNo": {
            "type": "string",
            "nullable": true
          },
          "OfferType": {
            "type": "string",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineDto": {
        "required": [
          "ItemNo",
          "Quantity",
          "TaxGroupCode",
          "Uom",
          "VatPercent"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "maximum": 99999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "maximum": 99999,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "maxLength": 18,
            "minLength": 0,
            "type": "string"
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string"
          },
          "OldPrice": {
            "type": "number",
            "format": "double"
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "Quantity": {
            "maximum": 999,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "default": 1,
            "example": 1
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "LineAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountInVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountIncVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "TaxGroupCode": {
            "type": "string"
          },
          "VatPercent": {
            "type": "integer",
            "format": "int32"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "CupType": {
            "type": "string",
            "nullable": true
          },
          "Size": {
            "type": "string",
            "nullable": true
          },
          "IsTopping": {
            "type": "boolean"
          },
          "IsCombo": {
            "type": "boolean"
          },
          "ComboNo": {
            "type": "string",
            "nullable": true
          },
          "ComboId": {
            "type": "integer",
            "format": "int32"
          },
          "ArticleType": {
            "type": "string",
            "nullable": true
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "Loyalty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLoyalty"
            },
            "nullable": true
          },
          "OptionEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineOptionDto"
            },
            "nullable": true
          },
          "DiscountEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscount"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineOptionDto": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "OptionType": {
            "type": "string",
            "nullable": true
          },
          "OptionName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "Qty": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderLoyalty": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderPaymentDto": {
        "required": [
          "AmountTendered",
          "CurrencyCode",
          "ExchangeRate",
          "LineId",
          "PaymentMethod"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "PaymentMethod": {
            "type": "string"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "ExchangeRate": {
            "type": "number",
            "format": "double"
          },
          "AmountTendered": {
            "type": "number",
            "format": "double"
          },
          "AmountInCurrency": {
            "type": "number",
            "format": "double"
          },
          "TransactionNo": {
            "type": "string",
            "nullable": true
          },
          "ApprovalCode": {
            "type": "string",
            "nullable": true
          },
          "TraceCode": {
            "type": "string",
            "nullable": true
          },
          "ReferenceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderRequestBody": {
        "required": [
          "AppCode",
          "OrderDate",
          "OrderNo",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "AppCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "PartnerCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrderNo": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "OrderDate": {
            "type": "string",
            "format": "date-time"
          },
          "StoreNo": {
            "type": "string",
            "default": "2001",
            "example": "2001"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CustAddress": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "maximum": 999,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "SaleTypeId": {
            "maximum": 99,
            "minimum": 10,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "TotalAmount": {
            "type": "number",
            "format": "double"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double"
          },
          "ShippingFee": {
            "type": "number",
            "format": "double"
          },
          "HasVatInvoice": {
            "type": "boolean"
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "WinCode": {
            "type": "string",
            "nullable": true
          },
          "BillingInfo": {
            "$ref": "#/components/schemas/BillingInfo"
          },
          "UseCoupon": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Coupons"
            },
            "nullable": true
          },
          "ShippingInfo": {
            "$ref": "#/components/schemas/ShippingInfo"
          },
          "Serial": {
            "type": "string",
            "nullable": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineDto"
            },
            "nullable": true
          },
          "Payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPaymentDto"
            },
            "nullable": true
          },
          "MembershipCard": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MembershipCard"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "POSPurchaseCardRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "PurchaseValue",
          "Quantity",
          "ServiceCode",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "ServiceType": {
            "type": "string",
            "default": "PURCHASE_CARD",
            "example": "PURCHASE_CARD"
          },
          "ServiceCode": {
            "type": "string",
            "default": "GPPC.100",
            "example": "GPPC.100"
          },
          "PurchaseValue": {
            "maximum": 10000000,
            "minimum": 9999,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          },
          "Quantity": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          }
        },
        "additionalProperties": false
      },
      "POSTopupRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "Receiver",
          "TopupValue"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "Receiver": {
            "type": "string",
            "default": "0559384959",
            "example": "0559384959"
          },
          "TopupValue": {
            "maximum": 10000000,
            "minimum": 10000,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback": {
        "type": "object",
        "properties": {
          "object_changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/object_changes"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback_update_order": {
        "required": [
          "order_code"
        ],
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string"
          },
          "update_type": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "pick_time": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "merchant_note": {
            "type": "string",
            "nullable": true
          },
          "note_for_shipper": {
            "type": "string",
            "nullable": true
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "serial": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefundItems": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "OldPrice": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "TaxGroupCode": {
            "type": "string",
            "nullable": true
          },
          "VatPercent": {
            "type": "number",
            "format": "double"
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Remark": {
        "type": "object",
        "properties": {
          "Remark1": {
            "type": "string",
            "nullable": true
          },
          "Remark2": {
            "type": "string",
            "nullable": true
          },
          "Remark3": {
            "type": "string",
            "nullable": true
          },
          "Remark4": {
            "type": "string",
            "nullable": true
          },
          "Remark5": {
            "type": "string",
            "nullable": true
          },
          "Remark6": {
            "type": "string",
            "nullable": true
          },
          "Remark7": {
            "type": "string",
            "nullable": true
          },
          "Remark8": {
            "type": "string",
            "nullable": true
          },
          "Remark9": {
            "type": "string",
            "nullable": true
          },
          "Remark10": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestListOrderPOS": {
        "required": [
          "PageNumber",
          "PageSize",
          "PartnerCode",
          "PosNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "SHOPEE",
            "nullable": true,
            "example": "SHOPEE"
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "FromDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "ToDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "CustomerKeyword": {
            "type": "string",
            "default": "Tên khách",
            "nullable": true,
            "example": "Tên khách"
          },
          "ItemKeyword": {
            "type": "string",
            "default": "Tên sản phẩm",
            "nullable": true,
            "example": "Tên sản phẩm"
          },
          "PageNumber": {
            "type": "integer",
            "format": "int32",
            "default": "1",
            "example": "1"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32",
            "default": "10",
            "example": "10"
          }
        },
        "additionalProperties": false
      },
      "RequestUpdateOrderStatus": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PaymentAmount",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "OrderNo": {
            "type": "string",
            "default": "PLH1652759636107",
            "example": "PLH1652759636107"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double",
            "default": "0",
            "example": "0"
          },
          "Status": {
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseClient": {
        "type": "object",
        "properties": {
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "Data": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesReturnRequest": {
        "required": [
          "OrderNo",
          "OrgOrderNo",
          "PartnerCode",
          "PosNo",
          "ReturnedOrderNo",
          "TenderType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "ReturnedOrderNo": {
            "type": "string"
          },
          "OrgOrderNo": {
            "type": "string"
          },
          "TransactionDatetime": {
            "type": "string",
            "format": "date-time"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "TenderType": {
            "type": "string"
          },
          "RefundAmount": {
            "type": "number",
            "format": "double"
          },
          "RefundItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundItems"
            },
            "nullable": true
          },
          "InvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrgInvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "MerchantId": {
            "type": "string",
            "nullable": true
          },
          "StoreNo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingInfo": {
        "type": "object",
        "properties": {
          "ReceiverName": {
            "type": "string",
            "nullable": true
          },
          "ReceiverPhone": {
            "type": "string",
            "nullable": true
          },
          "ReceiverEmail": {
            "type": "string",
            "nullable": true
          },
          "ReceiverAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateStatusVoucherSAP": {
        "required": [
          "OrderNo",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "Vouchers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTierMemberO2": {
        "required": [
          "DataUpdate",
          "MemberNumber",
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "O2",
            "example": "O2"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "ServiceType": {
            "type": "string",
            "default": "O2_UPDATE_TIER",
            "example": "O2_UPDATE_TIER"
          },
          "MemberNumber": {
            "type": "string",
            "default": "0559900185",
            "example": "0559900185"
          },
          "DataUpdate": {
            "type": "string",
            "default": "VIP",
            "example": "VIP"
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidateKitStatusRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          }
        },
        "additionalProperties": false
      },
      "driver_arriving_times": {
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "driver_uid": {
            "type": "integer",
            "format": "int32"
          },
          "arriving_time": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "export_error_menu": {
        "type": "object",
        "properties": {
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          },
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "error_type": {
            "type": "string",
            "nullable": true
          },
          "error_time": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "object_changes": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "partner_api_url_callback_update_drivers_status": {
        "type": "object",
        "properties": {
          "driver_arriving_times": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/driver_arriving_times"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "description": "Basic Authorization header using the Bearer scheme.",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basic": [ ]
    }
  ]
}
2023-08-08 23:18:37.462 [WRN] 6382713351745938704 request PUT /api/v1/voucher/update-status	
{
  "PosNo": "201801",
  "OrderNo": "1691511517",
  "Status":"RDM",
  "Vouchers":["602308082127360734","902308082127360734"]
}
2023-08-08 23:18:39.354 [WRN] 6382713351745938704 responseBody PUT /api/v1/voucher/update-status {"Meta":{"Code":400,"Message":"Request có Voucher không hợp lệ"},"Data":null}
2023-08-08 23:18:50.642 [WRN] 63827133530638574114 request PUT /api/v1/voucher/update-status	
{
  "PosNo": "201801",
  "OrderNo": "1691511531",
  "Status":"RDM",
  "Vouchers":["102308082127360734","902308082127360734"]
}
2023-08-08 23:18:50.797 [WRN] c6e51e5a7cf84ffc8bcc2772697b9c47 Request http://api-bluepos.masan.local/api/sap/winlife/redeemCpnVch	
{"OrderNo":"1691511531","TotalBill":0.0,"SiteCode":"2018","POSTerminal":"201801","ListSeriNo":[{"CompanyCode":"WCM","Partner":"","VoucherNumber":"102308082127360734","IsVoucher":false,"Value":10.000,"ArticleNo":"70100041","ArticleType":"ZCOU","Status":"RDM"},{"CompanyCode":"WCM","Partner":"","VoucherNumber":"902308082127360734","IsVoucher":false,"Value":10.000,"ArticleNo":"70100041","ArticleType":"ZCOU","Status":"RDM"}]}
2023-08-08 23:18:51.044 [WRN] c6e51e5a7cf84ffc8bcc2772697b9c47 Request http://api-bluepos.masan.local/api/sap/winlife/redeemCpnVch	
{"Status":200,"Message":"OK","Data":[{"Status":"RDM","Return":"4","ActicleNo":"","ActicleType":"VC_CU","VoucherNumber":null,"Value":"","Voucher_Currency":"","Validity_From_Date":null,"Expiry_Date":"","CompanyCode":"WCM","Partner":null,"IsEmployee":null},{"Status":"RDM","Return":"4","ActicleNo":"","ActicleType":"VC_CU","VoucherNumber":null,"Value":"","Voucher_Currency":"","Validity_From_Date":null,"Expiry_Date":"","CompanyCode":"WCM","Partner":null,"IsEmployee":null}]}
2023-08-08 23:18:51.090 [WRN] 63827133530638574114 responseBody PUT /api/v1/voucher/update-status {"Meta":{"Code":400,"Message":"RDM"},"Data":null}
2023-08-08 23:19:40.543 [WRN] 6382713358054108404 request PUT /api/v1/voucher/update-status	
{
  "PosNo": "201801",
  "OrderNo": "1691511581",
  "Status":"RDM",
  "Vouchers":["102308082127360734","902308082127360734"]
}
2023-08-08 23:20:02.405 [WRN] f4d1bf6b92fc4b68b487821ff3c28ce2 Request http://api-bluepos.masan.local/api/sap/winlife/redeemCpnVch	
{"OrderNo":"1691511581","TotalBill":0.0,"SiteCode":"2018","POSTerminal":"201801","ListSeriNo":[{"CompanyCode":"WCM","Partner":"","VoucherNumber":"102308082127360734","IsVoucher":false,"Value":10.000,"ArticleNo":"70100041","ArticleType":"ZCOU","Status":"RDM"},{"CompanyCode":"WCM","Partner":"","VoucherNumber":"902308082127360734","IsVoucher":false,"Value":10.000,"ArticleNo":"70100041","ArticleType":"ZCOU","Status":"RDM"}]}
2023-08-08 23:20:02.611 [WRN] f4d1bf6b92fc4b68b487821ff3c28ce2 Request http://api-bluepos.masan.local/api/sap/winlife/redeemCpnVch	
{"Status":200,"Message":"OK","Data":[{"Status":"RDM","Return":"4","ActicleNo":"","ActicleType":"VC_CU","VoucherNumber":null,"Value":"","Voucher_Currency":"","Validity_From_Date":null,"Expiry_Date":"","CompanyCode":"WCM","Partner":null,"IsEmployee":null},{"Status":"RDM","Return":"4","ActicleNo":"","ActicleType":"VC_CU","VoucherNumber":null,"Value":"","Voucher_Currency":"","Validity_From_Date":null,"Expiry_Date":"","CompanyCode":"WCM","Partner":null,"IsEmployee":null}]}
2023-08-08 23:22:22.988 [WRN] 63827133742779403810 responseBody GET /swagger/v1/swagger.json {
  "openapi": "3.0.1",
  "info": {
    "title": "WINMART",
    "version": "v1"
  },
  "paths": {
    "/api/v1/phuc-long/order/create": {
      "post": {
        "tags": [
          "MakeOrder"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phuc-long/order/check": {
      "get": {
        "tags": [
          "MakeOrder"
        ],
        "parameters": [
          {
            "name": "AppCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "200101-41498-001-0001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_order": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/export_error_menu": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_drivers_status": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/partner/card": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/topup": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/serial": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/esim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/physical-sim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/subscriber-info": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/o2/update": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/create": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "PartnerCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "373701"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1630307833376"
            }
          },
          {
            "name": "AppCode",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "NOWFOOD"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/list": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/count": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/update-status": {
      "put": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/refund": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/register": {
      "post": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/check/phone": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "parameters": [
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/update-status": {
      "put": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BillingInfo": {
        "type": "object",
        "properties": {
          "TaxID": {
            "type": "string",
            "nullable": true
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CompanyName": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountOrderRequest": {
        "required": [
          "AppCode",
          "PartnerCode",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "WEB",
            "example": "WEB"
          },
          "StoreNo": {
            "type": "string",
            "default": "2018",
            "example": "2018"
          }
        },
        "additionalProperties": false
      },
      "Coupons": {
        "required": [
          "CouponCode"
        ],
        "type": "object",
        "properties": {
          "CouponCode": {
            "type": "string"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "DiscountPercent": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateEsimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePhysicalSimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "SerialSimKIT": {
            "type": "string",
            "nullable": true
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IssueVoucher": {
        "required": [
          "NumberOfVouchers",
          "PhoneNumber"
        ],
        "type": "object",
        "properties": {
          "PhoneNumber": {
            "maxLength": 11,
            "type": "string"
          },
          "NumberOfVouchers": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MembershipCard": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CardClass": {
            "type": "string",
            "nullable": true
          },
          "TotalPoints": {
            "type": "number",
            "format": "double"
          },
          "AvailabilityPoints": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Meta": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer",
            "format": "int32"
          },
          "Message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDiscount": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "OfferNo": {
            "type": "string",
            "nullable": true
          },
          "OfferType": {
            "type": "string",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineDto": {
        "required": [
          "ItemNo",
          "Quantity",
          "TaxGroupCode",
          "Uom",
          "VatPercent"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "maximum": 99999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "maximum": 99999,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "maxLength": 18,
            "minLength": 0,
            "type": "string"
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string"
          },
          "OldPrice": {
            "type": "number",
            "format": "double"
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "Quantity": {
            "maximum": 999,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "default": 1,
            "example": 1
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "LineAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountInVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountIncVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "TaxGroupCode": {
            "type": "string"
          },
          "VatPercent": {
            "type": "integer",
            "format": "int32"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "CupType": {
            "type": "string",
            "nullable": true
          },
          "Size": {
            "type": "string",
            "nullable": true
          },
          "IsTopping": {
            "type": "boolean"
          },
          "IsCombo": {
            "type": "boolean"
          },
          "ComboNo": {
            "type": "string",
            "nullable": true
          },
          "ComboId": {
            "type": "integer",
            "format": "int32"
          },
          "ArticleType": {
            "type": "string",
            "nullable": true
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "Loyalty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLoyalty"
            },
            "nullable": true
          },
          "OptionEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineOptionDto"
            },
            "nullable": true
          },
          "DiscountEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscount"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineOptionDto": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "OptionType": {
            "type": "string",
            "nullable": true
          },
          "OptionName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "Qty": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderLoyalty": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderPaymentDto": {
        "required": [
          "AmountTendered",
          "CurrencyCode",
          "ExchangeRate",
          "LineId",
          "PaymentMethod"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "PaymentMethod": {
            "type": "string"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "ExchangeRate": {
            "type": "number",
            "format": "double"
          },
          "AmountTendered": {
            "type": "number",
            "format": "double"
          },
          "AmountInCurrency": {
            "type": "number",
            "format": "double"
          },
          "TransactionNo": {
            "type": "string",
            "nullable": true
          },
          "ApprovalCode": {
            "type": "string",
            "nullable": true
          },
          "TraceCode": {
            "type": "string",
            "nullable": true
          },
          "ReferenceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderRequestBody": {
        "required": [
          "AppCode",
          "OrderDate",
          "OrderNo",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "AppCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "PartnerCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrderNo": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "OrderDate": {
            "type": "string",
            "format": "date-time"
          },
          "StoreNo": {
            "type": "string",
            "default": "2001",
            "example": "2001"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CustAddress": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "maximum": 999,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "SaleTypeId": {
            "maximum": 99,
            "minimum": 10,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "TotalAmount": {
            "type": "number",
            "format": "double"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double"
          },
          "ShippingFee": {
            "type": "number",
            "format": "double"
          },
          "HasVatInvoice": {
            "type": "boolean"
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "WinCode": {
            "type": "string",
            "nullable": true
          },
          "BillingInfo": {
            "$ref": "#/components/schemas/BillingInfo"
          },
          "UseCoupon": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Coupons"
            },
            "nullable": true
          },
          "ShippingInfo": {
            "$ref": "#/components/schemas/ShippingInfo"
          },
          "Serial": {
            "type": "string",
            "nullable": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineDto"
            },
            "nullable": true
          },
          "Payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPaymentDto"
            },
            "nullable": true
          },
          "MembershipCard": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MembershipCard"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "POSPurchaseCardRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "PurchaseValue",
          "Quantity",
          "ServiceCode",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "ServiceType": {
            "type": "string",
            "default": "PURCHASE_CARD",
            "example": "PURCHASE_CARD"
          },
          "ServiceCode": {
            "type": "string",
            "default": "GPPC.100",
            "example": "GPPC.100"
          },
          "PurchaseValue": {
            "maximum": 10000000,
            "minimum": 9999,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          },
          "Quantity": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          }
        },
        "additionalProperties": false
      },
      "POSTopupRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "Receiver",
          "TopupValue"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "Receiver": {
            "type": "string",
            "default": "0559384959",
            "example": "0559384959"
          },
          "TopupValue": {
            "maximum": 10000000,
            "minimum": 10000,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback": {
        "type": "object",
        "properties": {
          "object_changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/object_changes"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback_update_order": {
        "required": [
          "order_code"
        ],
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string"
          },
          "update_type": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "pick_time": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "merchant_note": {
            "type": "string",
            "nullable": true
          },
          "note_for_shipper": {
            "type": "string",
            "nullable": true
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "serial": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefundItems": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "OldPrice": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "TaxGroupCode": {
            "type": "string",
            "nullable": true
          },
          "VatPercent": {
            "type": "number",
            "format": "double"
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Remark": {
        "type": "object",
        "properties": {
          "Remark1": {
            "type": "string",
            "nullable": true
          },
          "Remark2": {
            "type": "string",
            "nullable": true
          },
          "Remark3": {
            "type": "string",
            "nullable": true
          },
          "Remark4": {
            "type": "string",
            "nullable": true
          },
          "Remark5": {
            "type": "string",
            "nullable": true
          },
          "Remark6": {
            "type": "string",
            "nullable": true
          },
          "Remark7": {
            "type": "string",
            "nullable": true
          },
          "Remark8": {
            "type": "string",
            "nullable": true
          },
          "Remark9": {
            "type": "string",
            "nullable": true
          },
          "Remark10": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestListOrderPOS": {
        "required": [
          "PageNumber",
          "PageSize",
          "PartnerCode",
          "PosNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "SHOPEE",
            "nullable": true,
            "example": "SHOPEE"
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "FromDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "ToDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "CustomerKeyword": {
            "type": "string",
            "default": "Tên khách",
            "nullable": true,
            "example": "Tên khách"
          },
          "ItemKeyword": {
            "type": "string",
            "default": "Tên sản phẩm",
            "nullable": true,
            "example": "Tên sản phẩm"
          },
          "PageNumber": {
            "type": "integer",
            "format": "int32",
            "default": "1",
            "example": "1"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32",
            "default": "10",
            "example": "10"
          }
        },
        "additionalProperties": false
      },
      "RequestUpdateOrderStatus": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PaymentAmount",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "OrderNo": {
            "type": "string",
            "default": "PLH1652759636107",
            "example": "PLH1652759636107"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double",
            "default": "0",
            "example": "0"
          },
          "Status": {
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseClient": {
        "type": "object",
        "properties": {
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "Data": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesReturnRequest": {
        "required": [
          "OrderNo",
          "OrgOrderNo",
          "PartnerCode",
          "PosNo",
          "ReturnedOrderNo",
          "TenderType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "ReturnedOrderNo": {
            "type": "string"
          },
          "OrgOrderNo": {
            "type": "string"
          },
          "TransactionDatetime": {
            "type": "string",
            "format": "date-time"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "TenderType": {
            "type": "string"
          },
          "RefundAmount": {
            "type": "number",
            "format": "double"
          },
          "RefundItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundItems"
            },
            "nullable": true
          },
          "InvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrgInvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "MerchantId": {
            "type": "string",
            "nullable": true
          },
          "StoreNo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingInfo": {
        "type": "object",
        "properties": {
          "ReceiverName": {
            "type": "string",
            "nullable": true
          },
          "ReceiverPhone": {
            "type": "string",
            "nullable": true
          },
          "ReceiverEmail": {
            "type": "string",
            "nullable": true
          },
          "ReceiverAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateStatusVoucherSAP": {
        "required": [
          "OrderNo",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "Vouchers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTierMemberO2": {
        "required": [
          "DataUpdate",
          "MemberNumber",
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "O2",
            "example": "O2"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "ServiceType": {
            "type": "string",
            "default": "O2_UPDATE_TIER",
            "example": "O2_UPDATE_TIER"
          },
          "MemberNumber": {
            "type": "string",
            "default": "0559900185",
            "example": "0559900185"
          },
          "DataUpdate": {
            "type": "string",
            "default": "VIP",
            "example": "VIP"
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidateKitStatusRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          }
        },
        "additionalProperties": false
      },
      "driver_arriving_times": {
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "driver_uid": {
            "type": "integer",
            "format": "int32"
          },
          "arriving_time": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "export_error_menu": {
        "type": "object",
        "properties": {
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          },
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "error_type": {
            "type": "string",
            "nullable": true
          },
          "error_time": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "object_changes": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "partner_api_url_callback_update_drivers_status": {
        "type": "object",
        "properties": {
          "driver_arriving_times": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/driver_arriving_times"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "description": "Basic Authorization header using the Bearer scheme.",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basic": [ ]
    }
  ]
}
2023-08-08 23:22:36.912 [WRN] 6382713375690667514 request PUT /api/v1/voucher/update-status	
{
  "PosNo": "201801",
  "OrderNo": "1691511757",
  "Status":"RDM",
  "Vouchers":["102308082127360734","902308082127360734"]
}
2023-08-08 23:22:42.447 [WRN] 3934680513014a9dbc22d5cd0c7b08e4 Request http://api-bluepos.masan.local/api/sap/winlife/redeemCpnVch	
{"OrderNo":"1691511757","TotalBill":0.0,"SiteCode":"2018","POSTerminal":"201801","ListSeriNo":[{"CompanyCode":"WCM","Partner":"","VoucherNumber":"102308082127360734","IsVoucher":false,"Value":10.000,"ArticleNo":"70100041","ArticleType":"ZCOU","Status":"RDM"},{"CompanyCode":"WCM","Partner":"","VoucherNumber":"902308082127360734","IsVoucher":false,"Value":10.000,"ArticleNo":"70100041","ArticleType":"ZCOU","Status":"RDM"}]}
2023-08-08 23:22:42.689 [WRN] 3934680513014a9dbc22d5cd0c7b08e4 Request http://api-bluepos.masan.local/api/sap/winlife/redeemCpnVch	
{"Status":200,"Message":"OK","Data":[{"Status":"RDM","Return":"4","ActicleNo":"","ActicleType":"VC_CU","VoucherNumber":null,"Value":"","Voucher_Currency":"","Validity_From_Date":null,"Expiry_Date":"","CompanyCode":"WCM","Partner":null,"IsEmployee":null},{"Status":"RDM","Return":"4","ActicleNo":"","ActicleType":"VC_CU","VoucherNumber":null,"Value":"","Voucher_Currency":"","Validity_From_Date":null,"Expiry_Date":"","CompanyCode":"WCM","Partner":null,"IsEmployee":null}]}
2023-08-08 23:22:42.753 [WRN] 6382713375690667514 responseBody PUT /api/v1/voucher/update-status {"Meta":{"Code":400,"Message":"Request có voucher/coupon không hợp lệ RDM"},"Data":null}
2023-08-08 23:23:06.959 [WRN] 63827133786955983116 request PUT /api/v1/voucher/update-status	
{
  "PosNo": "201801",
  "OrderNo": "1691511787",
  "Status":"RDM",
  "Vouchers":["101691505222","101691505234"]
}
2023-08-08 23:23:07.020 [WRN] db24fed46b4f4ed3b1023ac4def5257d Request http://api-bluepos.masan.local/api/sap/winlife/redeemCpnVch	
{"OrderNo":"1691511787","TotalBill":0.0,"SiteCode":"2018","POSTerminal":"201801","ListSeriNo":[{"CompanyCode":"WCM","Partner":"","VoucherNumber":"101691505222","IsVoucher":false,"Value":10.000,"ArticleNo":"70100041","ArticleType":"ZCOU","Status":"RDM"},{"CompanyCode":"WCM","Partner":"","VoucherNumber":"101691505234","IsVoucher":false,"Value":10.000,"ArticleNo":"70100041","ArticleType":"ZCOU","Status":"RDM"}]}
2023-08-08 23:23:07.195 [WRN] db24fed46b4f4ed3b1023ac4def5257d Request http://api-bluepos.masan.local/api/sap/winlife/redeemCpnVch	
{"Status":200,"Message":"OK","Data":[{"Status":"Successful","Return":"0","ActicleNo":"","ActicleType":"VC_CU","VoucherNumber":null,"Value":"","Voucher_Currency":"","Validity_From_Date":null,"Expiry_Date":"","CompanyCode":"WCM","Partner":null,"IsEmployee":null},{"Status":"Successful","Return":"0","ActicleNo":"","ActicleType":"VC_CU","VoucherNumber":null,"Value":"","Voucher_Currency":"","Validity_From_Date":null,"Expiry_Date":"","CompanyCode":"WCM","Partner":null,"IsEmployee":null}]}
2023-08-08 23:23:07.405 [WRN] 63827133786955983116 responseBody PUT /api/v1/voucher/update-status {"Meta":{"Code":200,"Message":"Sử dụng voucher thành công"},"Data":null}
