2024-01-02 11:35:28.478 [WRN] 63839792128444348913 responseBody GET /swagger/swagger-ui-standalone-preset.js 
2024-01-02 11:35:28.478 [WRN] 63839792128445237216 responseBody GET /swagger/swagger-ui-bundle.js 
2024-01-02 11:35:28.478 [WRN] 63839792128444414417 responseBody GET /swagger/swagger-ui.css 
2024-01-02 11:35:28.808 [WRN] 63839792128803161011 responseBody GET /swagger/favicon-32x32.png 
2024-01-02 11:35:29.006 [WRN] 63839792128790182310 responseBody GET /swagger/v1/swagger.json {
  "openapi": "3.0.1",
  "info": {
    "title": "WINMART",
    "version": "v1"
  },
  "paths": {
    "/api/v1/phuc-long/order/create": {
      "post": {
        "tags": [
          "MakeOrder"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phuc-long/order/check": {
      "get": {
        "tags": [
          "MakeOrder"
        ],
        "parameters": [
          {
            "name": "AppCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "200101-41498-001-0001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_order": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/export_error_menu": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_drivers_status": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/partner/card": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/topup": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/serial": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/esim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/physical-sim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/subscriber-info": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/o2/update": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sevices/tax-info/{taxcode}": {
      "get": {
        "tags": [
          "PublicService"
        ],
        "parameters": [
          {
            "name": "taxcode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0302616081-001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/create": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "PartnerCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "373701"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1630307833376"
            }
          },
          {
            "name": "AppCode",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "NOWFOOD"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/list": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/count": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/update-status": {
      "put": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/refund": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/check": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "appCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/campaign": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "appCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/register": {
      "post": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/check/phone": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "parameters": [
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/update-status": {
      "put": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BillingInfo": {
        "type": "object",
        "properties": {
          "TaxID": {
            "type": "string",
            "nullable": true
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CompanyName": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountOrderRequest": {
        "required": [
          "AppCode",
          "PartnerCode",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "WEB",
            "example": "WEB"
          },
          "StoreNo": {
            "type": "string",
            "default": "2018",
            "example": "2018"
          }
        },
        "additionalProperties": false
      },
      "Coupons": {
        "required": [
          "CouponCode"
        ],
        "type": "object",
        "properties": {
          "CouponCode": {
            "type": "string"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "DiscountPercent": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateEsimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePhysicalSimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "SerialSimKIT": {
            "type": "string",
            "nullable": true
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IssueVoucher": {
        "required": [
          "NumberOfVouchers",
          "PhoneNumber"
        ],
        "type": "object",
        "properties": {
          "PhoneNumber": {
            "maxLength": 11,
            "minLength": 9,
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string"
          },
          "NumberOfVouchers": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MembershipCard": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CardClass": {
            "type": "string",
            "nullable": true
          },
          "TotalPoints": {
            "type": "number",
            "format": "double"
          },
          "AvailabilityPoints": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Meta": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer",
            "format": "int32"
          },
          "Message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDiscount": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "OfferNo": {
            "type": "string",
            "nullable": true
          },
          "OfferType": {
            "type": "string",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineDto": {
        "required": [
          "ItemNo",
          "Quantity",
          "TaxGroupCode",
          "Uom",
          "VatPercent"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "maximum": 99999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "maximum": 99999,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "maxLength": 18,
            "minLength": 0,
            "type": "string"
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string"
          },
          "OldPrice": {
            "type": "number",
            "format": "double"
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "Quantity": {
            "maximum": 999,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "default": 1,
            "example": 1
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "LineAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountInVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountIncVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "TaxGroupCode": {
            "type": "string"
          },
          "VatPercent": {
            "type": "integer",
            "format": "int32"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "CupType": {
            "type": "string",
            "nullable": true
          },
          "Size": {
            "type": "string",
            "nullable": true
          },
          "IsTopping": {
            "type": "boolean"
          },
          "IsCombo": {
            "type": "boolean"
          },
          "ComboNo": {
            "type": "string",
            "nullable": true
          },
          "ComboId": {
            "type": "integer",
            "format": "int32"
          },
          "ArticleType": {
            "type": "string",
            "nullable": true
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "Loyalty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLoyalty"
            },
            "nullable": true
          },
          "OptionEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineOptionDto"
            },
            "nullable": true
          },
          "DiscountEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscount"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineOptionDto": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "OptionType": {
            "type": "string",
            "nullable": true
          },
          "OptionName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "Qty": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderLoyalty": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderPaymentDto": {
        "required": [
          "AmountTendered",
          "CurrencyCode",
          "ExchangeRate",
          "LineId",
          "PaymentMethod"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "PaymentMethod": {
            "type": "string"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "ExchangeRate": {
            "type": "number",
            "format": "double"
          },
          "AmountTendered": {
            "type": "number",
            "format": "double"
          },
          "AmountInCurrency": {
            "type": "number",
            "format": "double"
          },
          "TransactionNo": {
            "type": "string",
            "nullable": true
          },
          "ApprovalCode": {
            "type": "string",
            "nullable": true
          },
          "TraceCode": {
            "type": "string",
            "nullable": true
          },
          "ReferenceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderRequestBody": {
        "required": [
          "AppCode",
          "OrderDate",
          "OrderNo",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "AppCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "PartnerCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrderNo": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "OrderDate": {
            "type": "string",
            "format": "date-time"
          },
          "StoreNo": {
            "type": "string",
            "default": "2001",
            "example": "2001"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CustAddress": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "maximum": 999,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "SaleTypeId": {
            "maximum": 99,
            "minimum": 10,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "TotalAmount": {
            "type": "number",
            "format": "double"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double"
          },
          "ShippingFee": {
            "type": "number",
            "format": "double"
          },
          "HasVatInvoice": {
            "type": "boolean"
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "WinCode": {
            "type": "string",
            "nullable": true
          },
          "BillingInfo": {
            "$ref": "#/components/schemas/BillingInfo"
          },
          "UseCoupon": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Coupons"
            },
            "nullable": true
          },
          "ShippingInfo": {
            "$ref": "#/components/schemas/ShippingInfo"
          },
          "Serial": {
            "type": "string",
            "nullable": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineDto"
            },
            "nullable": true
          },
          "Payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPaymentDto"
            },
            "nullable": true
          },
          "MembershipCard": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MembershipCard"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "POSPurchaseCardRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "PurchaseValue",
          "Quantity",
          "ServiceCode",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "ServiceType": {
            "type": "string",
            "default": "PURCHASE_CARD",
            "example": "PURCHASE_CARD"
          },
          "ServiceCode": {
            "type": "string",
            "default": "GPPC.100",
            "example": "GPPC.100"
          },
          "PurchaseValue": {
            "maximum": 10000000,
            "minimum": 9999,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          },
          "Quantity": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          }
        },
        "additionalProperties": false
      },
      "POSTopupRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "Receiver",
          "TopupValue"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "Receiver": {
            "type": "string",
            "default": "0559384959",
            "example": "0559384959"
          },
          "TopupValue": {
            "maximum": 10000000,
            "minimum": 10000,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback": {
        "type": "object",
        "properties": {
          "object_changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/object_changes"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback_update_order": {
        "required": [
          "order_code"
        ],
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string"
          },
          "update_type": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "pick_time": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "merchant_note": {
            "type": "string",
            "nullable": true
          },
          "note_for_shipper": {
            "type": "string",
            "nullable": true
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "serial": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefundItems": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "OldPrice": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "TaxGroupCode": {
            "type": "string",
            "nullable": true
          },
          "VatPercent": {
            "type": "number",
            "format": "double"
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Remark": {
        "type": "object",
        "properties": {
          "Remark1": {
            "type": "string",
            "nullable": true
          },
          "Remark2": {
            "type": "string",
            "nullable": true
          },
          "Remark3": {
            "type": "string",
            "nullable": true
          },
          "Remark4": {
            "type": "string",
            "nullable": true
          },
          "Remark5": {
            "type": "string",
            "nullable": true
          },
          "Remark6": {
            "type": "string",
            "nullable": true
          },
          "Remark7": {
            "type": "string",
            "nullable": true
          },
          "Remark8": {
            "type": "string",
            "nullable": true
          },
          "Remark9": {
            "type": "string",
            "nullable": true
          },
          "Remark10": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestListOrderPOS": {
        "required": [
          "PageNumber",
          "PageSize",
          "PartnerCode",
          "PosNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "SHOPEE",
            "nullable": true,
            "example": "SHOPEE"
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "FromDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "ToDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "CustomerKeyword": {
            "type": "string",
            "default": "Tên khách",
            "nullable": true,
            "example": "Tên khách"
          },
          "ItemKeyword": {
            "type": "string",
            "default": "Tên sản phẩm",
            "nullable": true,
            "example": "Tên sản phẩm"
          },
          "PageNumber": {
            "type": "integer",
            "format": "int32",
            "default": "1",
            "example": "1"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32",
            "default": "10",
            "example": "10"
          }
        },
        "additionalProperties": false
      },
      "RequestUpdateOrderStatus": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PaymentAmount",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "OrderNo": {
            "type": "string",
            "default": "PLH1652759636107",
            "example": "PLH1652759636107"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double",
            "default": "0",
            "example": "0"
          },
          "Status": {
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseClient": {
        "type": "object",
        "properties": {
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "Data": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesReturnRequest": {
        "required": [
          "OrderNo",
          "OrgOrderNo",
          "PartnerCode",
          "PosNo",
          "ReturnedOrderNo",
          "TenderType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "ReturnedOrderNo": {
            "type": "string"
          },
          "OrgOrderNo": {
            "type": "string"
          },
          "TransactionDatetime": {
            "type": "string",
            "format": "date-time"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "TenderType": {
            "type": "string"
          },
          "RefundAmount": {
            "type": "number",
            "format": "double"
          },
          "RefundItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundItems"
            },
            "nullable": true
          },
          "InvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrgInvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "MerchantId": {
            "type": "string",
            "nullable": true
          },
          "StoreNo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingInfo": {
        "type": "object",
        "properties": {
          "ReceiverName": {
            "type": "string",
            "nullable": true
          },
          "ReceiverPhone": {
            "type": "string",
            "nullable": true
          },
          "ReceiverEmail": {
            "type": "string",
            "nullable": true
          },
          "ReceiverAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateStatusVoucherSAP": {
        "required": [
          "OrderNo",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "Vouchers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTierMemberO2": {
        "required": [
          "DataUpdate",
          "MemberNumber",
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "O2",
            "example": "O2"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "ServiceType": {
            "type": "string",
            "default": "O2_UPDATE_TIER",
            "example": "O2_UPDATE_TIER"
          },
          "MemberNumber": {
            "type": "string",
            "default": "0559900185",
            "example": "0559900185"
          },
          "DataUpdate": {
            "type": "string",
            "default": "VIP",
            "example": "VIP"
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidateKitStatusRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          }
        },
        "additionalProperties": false
      },
      "driver_arriving_times": {
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "driver_uid": {
            "type": "integer",
            "format": "int32"
          },
          "arriving_time": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "export_error_menu": {
        "type": "object",
        "properties": {
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          },
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "error_type": {
            "type": "string",
            "nullable": true
          },
          "error_time": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "object_changes": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "partner_api_url_callback_update_drivers_status": {
        "type": "object",
        "properties": {
          "driver_arriving_times": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/driver_arriving_times"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "description": "Basic Authorization header using the Bearer scheme.",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basic": [ ]
    }
  ]
}
2024-01-02 11:36:07.891 [WRN] 6383979216788891404 request GET /api/v1/transaction/order?PartnerCode=WCM&PosNo=201801&OrderNo=1698893250139&AppCode=WEB	

2024-01-02 11:36:11.714 [WRN] Response https://uat-api-crownx.winmart.vn/rp/api/pos/order/1698893250139 10-MINHNB-L5 {
  "code": "S200",
  "message": "Thành công",
  "data": {
    "appCode": "VMP",
    "orderNo": "1698893250139",
    "orderDate": "2023-11-02T02:47:30.139759",
    "storeNo": "2018",
    "custName": "test79",
    "custAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội",
    "custPhone": "84909123479",
    "note": "",
    "status": 9,
    "totalAmount": 470462.00000,
    "paymentAmount": 50000.0,
    "saleTypeId": 60,
    "shippingFee": 0.00000,
    "hasVatInvoice": false,
    "shippingInfo": {
      "receiverName": "test79",
      "receiverPhone": "0909123479",
      "receiverEmail": "",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    "payments": [
      {
        "lineId": 4,
        "paymentMethod": "PTCS",
        "currencyCode": "VND",
        "exchangeRate": 1.0,
        "amountTendered": 420462.00000,
        "amountInCurrency": 420462.00000
      },
      {
        "lineId": 4,
        "paymentMethod": "ZPVO",
        "currencyCode": "VND",
        "exchangeRate": 1.0,
        "amountTendered": 50000.0,
        "amountInCurrency": 50000.0,
        "transactionNo": "ONLYVCHV"
      }
    ],
    "items": [
      {
        "lineId": 1,
        "parentLineId": 1,
        "itemNo": "10617947",
        "itemName": "Thịt heo xay loại 1 Meat Deli (S) (0.385KG)",
        "uom": "KG",
        "oldPrice": 99900.00000,
        "unitPrice": 99900.00000,
        "quantity": 0.38500,
        "discountAmount": 0.0,
        "taxGroupCode": 5,
        "vatPercent": 5.0,
        "barcode": "2650532000000",
        "lineAmount": 38462.00000,
        "discountEntry": []
      },
      {
        "lineId": 2,
        "parentLineId": 2,
        "itemNo": "10023974",
        "itemName": "Hle6824s-bộ 2 hộp nhựa ezlock đỏ 270ml",
        "uom": "CAI",
        "oldPrice": 142000.00000,
        "unitPrice": 142000.00000,
        "quantity": 1.00000,
        "discountAmount": 0.0,
        "taxGroupCode": 4,
        "vatPercent": 10.0,
        "barcode": "8936136164755",
        "lineAmount": 142000.00000,
        "discountEntry": []
      },
      {
        "lineId": 3,
        "parentLineId": 3,
        "itemNo": "10617957",
        "itemName": "Nạc dăm heo (nạc vai) Meat Deli (S)",
        "uom": "KG",
        "oldPrice": 290000.00000,
        "unitPrice": 290000.00000,
        "quantity": 1.00000,
        "discountAmount": 0.0,
        "taxGroupCode": 5,
        "vatPercent": 5.0,
        "barcode": "30724",
        "lineAmount": 290000.00000,
        "discountEntry": []
      }
    ]
  }
} 693
2024-01-02 11:36:11.771 [WRN] 1698893250139 response: {"Data":{"Items":[{"LineId":1,"ParentLineId":1,"ItemNo":"10617947","ItemName":"Thịt heo xay loại 1 Meat Deli (S) (0.385KG)","Uom":"KG","OldPrice":99900.00000,"UnitPrice":99900.00000,"Quantity":0.38500,"DiscountAmount":0.0,"LineAmount":38462.00000,"TaxGroupCode":"5","VatPercent":5.0,"Note":"","IsLoyalty":false,"CupType":"","Size":"","IsTopping":false,"IsCombo":false,"ComboNo":null,"ArticleType":"","Barcode":"2650532000000","OptionEntry":null,"DiscountEntry":[],"Loyalty":null,"DiscountType":null},{"LineId":2,"ParentLineId":2,"ItemNo":"10023974","ItemName":"Hle6824s-bộ 2 hộp nhựa ezlock đỏ 270ml","Uom":"CAI","OldPrice":142000.00000,"UnitPrice":142000.00000,"Quantity":1.00000,"DiscountAmount":0.0,"LineAmount":142000.00000,"TaxGroupCode":"4","VatPercent":10.0,"Note":"","IsLoyalty":false,"CupType":"","Size":"","IsTopping":false,"IsCombo":false,"ComboNo":null,"ArticleType":"","Barcode":"8936136164755","OptionEntry":null,"DiscountEntry":[],"Loyalty":null,"DiscountType":null},{"LineId":3,"ParentLineId":3,"ItemNo":"10617957","ItemName":"Nạc dăm heo (nạc vai) Meat Deli (S)","Uom":"KG","OldPrice":290000.00000,"UnitPrice":290000.00000,"Quantity":1.00000,"DiscountAmount":0.0,"LineAmount":290000.00000,"TaxGroupCode":"5","VatPercent":5.0,"Note":"","IsLoyalty":false,"CupType":"","Size":"","IsTopping":false,"IsCombo":false,"ComboNo":null,"ArticleType":"","Barcode":"30724","OptionEntry":null,"DiscountEntry":[],"Loyalty":null,"DiscountType":null}],"Payments":[{"LineId":4,"PaymentMethod":"PTCS","CurrencyCode":"VND","ExchangeRate":1.0,"AmountTendered":420462.00000,"AmountInCurrency":420462.00000,"TransactionNo":null,"ApprovalCode":null,"TraceCode":null,"ReferenceId":null},{"LineId":4,"PaymentMethod":"ZPVO","CurrencyCode":"VND","ExchangeRate":1.0,"AmountTendered":50000.0,"AmountInCurrency":50000.0,"TransactionNo":"ONLYVCHV","ApprovalCode":null,"TraceCode":null,"ReferenceId":null}],"MembershipCard":null,"AppCode":"VMP","PartnerCode":"WCM","OrderNo":"1698893250139","OrderDate":"2023-11-02T02:47:30.139759","StoreNo":"2018","CustName":"test79","CustAddress":"gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội","CustPhone":"84909123479","Note":"","Status":9,"SaleTypeId":60,"TotalAmount":470462.00000,"PaymentAmount":50000.0,"ShippingFee":0.00000,"HasVatInvoice":false,"IsLoyalty":false,"WinCode":null,"BillingInfo":null,"UseCoupon":null,"ShippingInfo":{"ReceiverName":"test79","ReceiverPhone":"0909123479","ReceiverEmail":"","ReceiverAddress":"gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"},"Serial":null}
2024-01-02 11:36:11.807 [WRN] 6383979216788891404 responseBody GET /api/v1/transaction/order?PartnerCode=WCM&PosNo=201801&OrderNo=1698893250139&AppCode=WEB {"Meta":{"Code":200,"Message":"Successfully"},"Data":{"AppCode":"VMP","OrderNo":"1698893250139","OrderTime":"2023-11-02 02:47:30","DeliveryType":1,"CustNo":"2018","CustName":"test79","CustPhone":"0909123479","CustAddress":"gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội","CustNote":"","CardMember":"84909123479","TotalAmount":470462.00000,"PaymentAmount":50000.0,"Status":1,"IsPromotion":false,"RefNo":"","CashierId":"","CashierName":null,"PromoAmount":0,"PromoName":"","MemberInfo":null,"StoreInfo":null,"BillingInfo":null,"TransLine":[{"LineNo":1,"ParentLineNo":1,"ItemNo":"10617947","ItemName":"Thịt heo xay loại 1 Meat Deli (S) (0.385KG)","ItemName2":"Thịt heo xay loại 1 Meat Deli (S) (0.385KG)","Barcode":"2650532000000","Uom":"KG","UnitPrice":99900.00000,"Qty":0.38500,"DiscountAmount":0.0,"VatGroup":"5","VatPercent":5.0,"VatAmount":1832.00000,"LineAmountExcVAT":36630,"LineAmountIncVAT":38462.00000,"IsLoyalty":false,"ItemType":"","Remark":null,"TransDiscountEntry":[]},{"LineNo":2,"ParentLineNo":2,"ItemNo":"10023974","ItemName":"Hle6824s-bộ 2 hộp nhựa ezlock đỏ 270ml","ItemName2":"Hle6824s-bộ 2 hộp nhựa ezlock đỏ 270ml","Barcode":"8936136164755","Uom":"CAI","UnitPrice":142000.00000,"Qty":1.00000,"DiscountAmount":0.0,"VatGroup":"4","VatPercent":10.0,"VatAmount":12909.00000,"LineAmountExcVAT":129091,"LineAmountIncVAT":142000.00000,"IsLoyalty":false,"ItemType":"","Remark":null,"TransDiscountEntry":[]},{"LineNo":3,"ParentLineNo":3,"ItemNo":"10617957","ItemName":"Nạc dăm heo (nạc vai) Meat Deli (S)","ItemName2":"Nạc dăm heo (nạc vai) Meat Deli (S)","Barcode":"30724","Uom":"KG","UnitPrice":290000.00000,"Qty":1.00000,"DiscountAmount":0.0,"VatGroup":"5","VatPercent":5.0,"VatAmount":13810.00000,"LineAmountExcVAT":276190,"LineAmountIncVAT":290000.00000,"IsLoyalty":false,"ItemType":"","Remark":null,"TransDiscountEntry":[]}],"TransPaymentEntry":[{"LineNo":4,"TenderType":"PTCS","PaymentAmount":420462.00000,"ReferenceNo":"","TransactionId":"","PayForOrderNo":"1698893250139","TransactionNo":"","ApprovalCode":"","TraceCode":"","AdditionalData":null},{"LineNo":4,"TenderType":"ZPVO","PaymentAmount":50000.0,"ReferenceNo":"ONLYVCHV","TransactionId":"","PayForOrderNo":"1698893250139","TransactionNo":"ONLYVCHV","ApprovalCode":"ONLYVCHV","TraceCode":"","AdditionalData":null}]}
2024-01-02 11:36:15.765 [WRN] 6383979217576268714 request GET /api/v1/transaction/order?PartnerCode=WCM&PosNo=201801&OrderNo=1701670496942&AppCode=WEB	

2024-01-02 11:36:15.827 [WRN] Response https://uat-api-crownx.winmart.vn/rp/api/pos/order/1701670496942 10-MINHNB-L5 {
  "code": "S200",
  "message": "Thành công",
  "data": {
    "appCode": "VMP",
    "orderNo": "1701670496942",
    "orderDate": "2023-12-04T06:14:56.942052",
    "storeNo": "2018",
    "custName": "thuyntn",
    "custAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội",
    "custPhone": "84908123456",
    "note": "",
    "status": 3,
    "totalAmount": 369760.00000,
    "paymentAmount": 10000.0,
    "saleTypeId": 60,
    "shippingFee": 0.00000,
    "hasVatInvoice": false,
    "shippingInfo": {
      "receiverName": "thuyntn",
      "receiverPhone": "84908123456",
      "receiverEmail": "",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    "payments": [
      {
        "lineId": 5,
        "paymentMethod": "PTCS",
        "currencyCode": "VND",
        "exchangeRate": 1.0,
        "amountTendered": 359760.00000,
        "amountInCurrency": 359760.00000
      },
      {
        "lineId": 5,
        "paymentMethod": "ZPVO",
        "currencyCode": "VND",
        "exchangeRate": 1.0,
        "amountTendered": 10000.0,
        "amountInCurrency": 10000.0,
        "transactionNo": "CAP"
      }
    ],
    "items": [
      {
        "lineId": 2,
        "parentLineId": 2,
        "itemNo": "10617947",
        "itemName": "Thịt heo xay loại 1 Meat Deli (S) (0.385KG)",
        "uom": "KG",
        "oldPrice": 38461.5,
        "unitPrice": 38461.5,
        "quantity": 1.1550000000,
        "discountAmount": -47884.56750,
        "taxGroupCode": 5,
        "vatPercent": 5.0,
        "barcode": "2650532000000",
        "lineAmount": 92307.60000,
        "discountEntry": [
          {
            "lineId": 1,
            "offerNo": "1000003368",
            "offerType": "",
            "quantity": 1.1550000000,
            "discountAmount": -47884.56750,
            "note": ""
          }
        ]
      },
      {
        "lineId": 4,
        "parentLineId": 4,
        "itemNo": "10023974",
        "itemName": "Hle6824s-bộ 2 hộp nhựa ezlock đỏ 270ml",
        "uom": "CAI",
        "oldPrice": 142000.00000,
        "unitPrice": 142000.00000,
        "quantity": 1.00000,
        "discountAmount": 12000.00000,
        "taxGroupCode": 4,
        "vatPercent": 10.0,
        "barcode": "8936136164755",
        "lineAmount": 130000.00000,
        "discountEntry": [
          {
            "lineId": 3,
            "offerNo": "",
            "offerType": "",
            "quantity": 1.00000,
            "discountAmount": 12000.00000,
            "note": ""
          }
        ]
      }
    ]
  }
} 39
2024-01-02 11:36:15.835 [WRN] 6383979217576268714 responseBody GET /api/v1/transaction/order?PartnerCode=WCM&PosNo=201801&OrderNo=1701670496942&AppCode=WEB {"Meta":{"Code":201,"Message":"Đơn hàng 1701670496942 tổng tiền đơn hàng: 222,308 sai lệch tổng thanh toán: 369,760"},"Data":null}
2024-01-02 11:36:21.914 [WRN] 63839792181912060816 request GET /api/v1/transaction/order?PartnerCode=WCM&PosNo=201801&OrderNo=1698893250139&AppCode=WEB	

2024-01-02 11:36:21.988 [WRN] Response https://uat-api-crownx.winmart.vn/rp/api/pos/order/1698893250139 10-MINHNB-L5 {
  "code": "S200",
  "message": "Thành công",
  "data": {
    "appCode": "VMP",
    "orderNo": "1698893250139",
    "orderDate": "2023-11-02T02:47:30.139759",
    "storeNo": "2018",
    "custName": "test79",
    "custAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội",
    "custPhone": "84909123479",
    "note": "",
    "status": 9,
    "totalAmount": 470462.00000,
    "paymentAmount": 50000.0,
    "saleTypeId": 60,
    "shippingFee": 0.00000,
    "hasVatInvoice": false,
    "shippingInfo": {
      "receiverName": "test79",
      "receiverPhone": "0909123479",
      "receiverEmail": "",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    "payments": [
      {
        "lineId": 4,
        "paymentMethod": "PTCS",
        "currencyCode": "VND",
        "exchangeRate": 1.0,
        "amountTendered": 420462.00000,
        "amountInCurrency": 420462.00000
      },
      {
        "lineId": 4,
        "paymentMethod": "ZPVO",
        "currencyCode": "VND",
        "exchangeRate": 1.0,
        "amountTendered": 50000.0,
        "amountInCurrency": 50000.0,
        "transactionNo": "ONLYVCHV"
      }
    ],
    "items": [
      {
        "lineId": 1,
        "parentLineId": 1,
        "itemNo": "10617947",
        "itemName": "Thịt heo xay loại 1 Meat Deli (S) (0.385KG)",
        "uom": "KG",
        "oldPrice": 99900.00000,
        "unitPrice": 99900.00000,
        "quantity": 0.38500,
        "discountAmount": 0.0,
        "taxGroupCode": 5,
        "vatPercent": 5.0,
        "barcode": "2650532000000",
        "lineAmount": 38462.00000,
        "discountEntry": []
      },
      {
        "lineId": 2,
        "parentLineId": 2,
        "itemNo": "10023974",
        "itemName": "Hle6824s-bộ 2 hộp nhựa ezlock đỏ 270ml",
        "uom": "CAI",
        "oldPrice": 142000.00000,
        "unitPrice": 142000.00000,
        "quantity": 1.00000,
        "discountAmount": 0.0,
        "taxGroupCode": 4,
        "vatPercent": 10.0,
        "barcode": "8936136164755",
        "lineAmount": 142000.00000,
        "discountEntry": []
      },
      {
        "lineId": 3,
        "parentLineId": 3,
        "itemNo": "10617957",
        "itemName": "Nạc dăm heo (nạc vai) Meat Deli (S)",
        "uom": "KG",
        "oldPrice": 290000.00000,
        "unitPrice": 290000.00000,
        "quantity": 1.00000,
        "discountAmount": 0.0,
        "taxGroupCode": 5,
        "vatPercent": 5.0,
        "barcode": "30724",
        "lineAmount": 290000.00000,
        "discountEntry": []
      }
    ]
  }
} 39
2024-01-02 11:36:21.993 [WRN] 1698893250139 response: {"Data":{"Items":[{"LineId":1,"ParentLineId":1,"ItemNo":"10617947","ItemName":"Thịt heo xay loại 1 Meat Deli (S) (0.385KG)","Uom":"KG","OldPrice":99900.00000,"UnitPrice":99900.00000,"Quantity":0.38500,"DiscountAmount":0.0,"LineAmount":38462.00000,"TaxGroupCode":"5","VatPercent":5.0,"Note":"","IsLoyalty":false,"CupType":"","Size":"","IsTopping":false,"IsCombo":false,"ComboNo":null,"ArticleType":"","Barcode":"2650532000000","OptionEntry":null,"DiscountEntry":[],"Loyalty":null,"DiscountType":null},{"LineId":2,"ParentLineId":2,"ItemNo":"10023974","ItemName":"Hle6824s-bộ 2 hộp nhựa ezlock đỏ 270ml","Uom":"CAI","OldPrice":142000.00000,"UnitPrice":142000.00000,"Quantity":1.00000,"DiscountAmount":0.0,"LineAmount":142000.00000,"TaxGroupCode":"4","VatPercent":10.0,"Note":"","IsLoyalty":false,"CupType":"","Size":"","IsTopping":false,"IsCombo":false,"ComboNo":null,"ArticleType":"","Barcode":"8936136164755","OptionEntry":null,"DiscountEntry":[],"Loyalty":null,"DiscountType":null},{"LineId":3,"ParentLineId":3,"ItemNo":"10617957","ItemName":"Nạc dăm heo (nạc vai) Meat Deli (S)","Uom":"KG","OldPrice":290000.00000,"UnitPrice":290000.00000,"Quantity":1.00000,"DiscountAmount":0.0,"LineAmount":290000.00000,"TaxGroupCode":"5","VatPercent":5.0,"Note":"","IsLoyalty":false,"CupType":"","Size":"","IsTopping":false,"IsCombo":false,"ComboNo":null,"ArticleType":"","Barcode":"30724","OptionEntry":null,"DiscountEntry":[],"Loyalty":null,"DiscountType":null}],"Payments":[{"LineId":4,"PaymentMethod":"PTCS","CurrencyCode":"VND","ExchangeRate":1.0,"AmountTendered":420462.00000,"AmountInCurrency":420462.00000,"TransactionNo":null,"ApprovalCode":null,"TraceCode":null,"ReferenceId":null},{"LineId":4,"PaymentMethod":"ZPVO","CurrencyCode":"VND","ExchangeRate":1.0,"AmountTendered":50000.0,"AmountInCurrency":50000.0,"TransactionNo":"ONLYVCHV","ApprovalCode":null,"TraceCode":null,"ReferenceId":null}],"MembershipCard":null,"AppCode":"VMP","PartnerCode":"WCM","OrderNo":"1698893250139","OrderDate":"2023-11-02T02:47:30.139759","StoreNo":"2018","CustName":"test79","CustAddress":"gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội","CustPhone":"84909123479","Note":"","Status":9,"SaleTypeId":60,"TotalAmount":470462.00000,"PaymentAmount":50000.0,"ShippingFee":0.00000,"HasVatInvoice":false,"IsLoyalty":false,"WinCode":null,"BillingInfo":null,"UseCoupon":null,"ShippingInfo":{"ReceiverName":"test79","ReceiverPhone":"0909123479","ReceiverEmail":"","ReceiverAddress":"gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"},"Serial":null}
2024-01-02 11:36:21.998 [WRN] 63839792181912060816 responseBody GET /api/v1/transaction/order?PartnerCode=WCM&PosNo=201801&OrderNo=1698893250139&AppCode=WEB {"Meta":{"Code":200,"Message":"Successfully"},"Data":{"AppCode":"VMP","OrderNo":"1698893250139","OrderTime":"2023-11-02 02:47:30","DeliveryType":1,"CustNo":"2018","CustName":"test79","CustPhone":"0909123479","CustAddress":"gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội","CustNote":"","CardMember":"84909123479","TotalAmount":470462.00000,"PaymentAmount":50000.0,"Status":1,"IsPromotion":false,"RefNo":"","CashierId":"","CashierName":null,"PromoAmount":0,"PromoName":"","MemberInfo":null,"StoreInfo":null,"BillingInfo":null,"TransLine":[{"LineNo":1,"ParentLineNo":1,"ItemNo":"10617947","ItemName":"Thịt heo xay loại 1 Meat Deli (S) (0.385KG)","ItemName2":"Thịt heo xay loại 1 Meat Deli (S) (0.385KG)","Barcode":"2650532000000","Uom":"KG","UnitPrice":99900.00000,"Qty":0.38500,"DiscountAmount":0.0,"VatGroup":"5","VatPercent":5.0,"VatAmount":1832.00000,"LineAmountExcVAT":36630,"LineAmountIncVAT":38462.00000,"IsLoyalty":false,"ItemType":"","Remark":null,"TransDiscountEntry":[]},{"LineNo":2,"ParentLineNo":2,"ItemNo":"10023974","ItemName":"Hle6824s-bộ 2 hộp nhựa ezlock đỏ 270ml","ItemName2":"Hle6824s-bộ 2 hộp nhựa ezlock đỏ 270ml","Barcode":"8936136164755","Uom":"CAI","UnitPrice":142000.00000,"Qty":1.00000,"DiscountAmount":0.0,"VatGroup":"4","VatPercent":10.0,"VatAmount":12909.00000,"LineAmountExcVAT":129091,"LineAmountIncVAT":142000.00000,"IsLoyalty":false,"ItemType":"","Remark":null,"TransDiscountEntry":[]},{"LineNo":3,"ParentLineNo":3,"ItemNo":"10617957","ItemName":"Nạc dăm heo (nạc vai) Meat Deli (S)","ItemName2":"Nạc dăm heo (nạc vai) Meat Deli (S)","Barcode":"30724","Uom":"KG","UnitPrice":290000.00000,"Qty":1.00000,"DiscountAmount":0.0,"VatGroup":"5","VatPercent":5.0,"VatAmount":13810.00000,"LineAmountExcVAT":276190,"LineAmountIncVAT":290000.00000,"IsLoyalty":false,"ItemType":"","Remark":null,"TransDiscountEntry":[]}],"TransPaymentEntry":[{"LineNo":4,"TenderType":"PTCS","PaymentAmount":420462.00000,"ReferenceNo":"","TransactionId":"","PayForOrderNo":"1698893250139","TransactionNo":"","ApprovalCode":"","TraceCode":"","AdditionalData":null},{"LineNo":4,"TenderType":"ZPVO","PaymentAmount":50000.0,"ReferenceNo":"ONLYVCHV","TransactionId":"","PayForOrderNo":"1698893250139","TransactionNo":"ONLYVCHV","ApprovalCode":"ONLYVCHV","TraceCode":"","AdditionalData":null}]}
2024-01-02 11:36:52.646 [WRN] 63839792212642641121 request GET /api/v1/transaction/order?PartnerCode=WCM&PosNo=201801&OrderNo=1698893250139&AppCode=WEB	

2024-01-02 11:37:16.815 [WRN] 6383979223668623655 responseBody GET /swagger/v1/swagger.json {
  "openapi": "3.0.1",
  "info": {
    "title": "WINMART",
    "version": "v1"
  },
  "paths": {
    "/api/v1/phuc-long/order/create": {
      "post": {
        "tags": [
          "MakeOrder"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phuc-long/order/check": {
      "get": {
        "tags": [
          "MakeOrder"
        ],
        "parameters": [
          {
            "name": "AppCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "200101-41498-001-0001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_order": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/export_error_menu": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_drivers_status": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/partner/card": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/topup": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/serial": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/esim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/physical-sim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/subscriber-info": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/o2/update": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sevices/tax-info/{taxcode}": {
      "get": {
        "tags": [
          "PublicService"
        ],
        "parameters": [
          {
            "name": "taxcode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0302616081-001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/create": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "PartnerCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "373701"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1630307833376"
            }
          },
          {
            "name": "AppCode",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "NOWFOOD"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/list": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/count": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/update-status": {
      "put": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/refund": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/check": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "appCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/campaign": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "appCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/register": {
      "post": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/check/phone": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "parameters": [
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/update-status": {
      "put": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BillingInfo": {
        "type": "object",
        "properties": {
          "TaxID": {
            "type": "string",
            "nullable": true
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CompanyName": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountOrderRequest": {
        "required": [
          "AppCode",
          "PartnerCode",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "WEB",
            "example": "WEB"
          },
          "StoreNo": {
            "type": "string",
            "default": "2018",
            "example": "2018"
          }
        },
        "additionalProperties": false
      },
      "Coupons": {
        "required": [
          "CouponCode"
        ],
        "type": "object",
        "properties": {
          "CouponCode": {
            "type": "string"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "DiscountPercent": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateEsimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePhysicalSimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "SerialSimKIT": {
            "type": "string",
            "nullable": true
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IssueVoucher": {
        "required": [
          "NumberOfVouchers",
          "PhoneNumber"
        ],
        "type": "object",
        "properties": {
          "PhoneNumber": {
            "maxLength": 11,
            "minLength": 9,
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string"
          },
          "NumberOfVouchers": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MembershipCard": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CardClass": {
            "type": "string",
            "nullable": true
          },
          "TotalPoints": {
            "type": "number",
            "format": "double"
          },
          "AvailabilityPoints": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Meta": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer",
            "format": "int32"
          },
          "Message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDiscount": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "OfferNo": {
            "type": "string",
            "nullable": true
          },
          "OfferType": {
            "type": "string",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineDto": {
        "required": [
          "ItemNo",
          "Quantity",
          "TaxGroupCode",
          "Uom",
          "VatPercent"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "maximum": 99999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "maximum": 99999,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "maxLength": 18,
            "minLength": 0,
            "type": "string"
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string"
          },
          "OldPrice": {
            "type": "number",
            "format": "double"
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "Quantity": {
            "maximum": 999,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "default": 1,
            "example": 1
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "LineAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountInVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountIncVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "TaxGroupCode": {
            "type": "string"
          },
          "VatPercent": {
            "type": "integer",
            "format": "int32"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "CupType": {
            "type": "string",
            "nullable": true
          },
          "Size": {
            "type": "string",
            "nullable": true
          },
          "IsTopping": {
            "type": "boolean"
          },
          "IsCombo": {
            "type": "boolean"
          },
          "ComboNo": {
            "type": "string",
            "nullable": true
          },
          "ComboId": {
            "type": "integer",
            "format": "int32"
          },
          "ArticleType": {
            "type": "string",
            "nullable": true
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "Loyalty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLoyalty"
            },
            "nullable": true
          },
          "OptionEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineOptionDto"
            },
            "nullable": true
          },
          "DiscountEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscount"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineOptionDto": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "OptionType": {
            "type": "string",
            "nullable": true
          },
          "OptionName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "Qty": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderLoyalty": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderPaymentDto": {
        "required": [
          "AmountTendered",
          "CurrencyCode",
          "ExchangeRate",
          "LineId",
          "PaymentMethod"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "PaymentMethod": {
            "type": "string"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "ExchangeRate": {
            "type": "number",
            "format": "double"
          },
          "AmountTendered": {
            "type": "number",
            "format": "double"
          },
          "AmountInCurrency": {
            "type": "number",
            "format": "double"
          },
          "TransactionNo": {
            "type": "string",
            "nullable": true
          },
          "ApprovalCode": {
            "type": "string",
            "nullable": true
          },
          "TraceCode": {
            "type": "string",
            "nullable": true
          },
          "ReferenceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderRequestBody": {
        "required": [
          "AppCode",
          "OrderDate",
          "OrderNo",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "AppCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "PartnerCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrderNo": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "OrderDate": {
            "type": "string",
            "format": "date-time"
          },
          "StoreNo": {
            "type": "string",
            "default": "2001",
            "example": "2001"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CustAddress": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "maximum": 999,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "SaleTypeId": {
            "maximum": 99,
            "minimum": 10,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "TotalAmount": {
            "type": "number",
            "format": "double"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double"
          },
          "ShippingFee": {
            "type": "number",
            "format": "double"
          },
          "HasVatInvoice": {
            "type": "boolean"
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "WinCode": {
            "type": "string",
            "nullable": true
          },
          "BillingInfo": {
            "$ref": "#/components/schemas/BillingInfo"
          },
          "UseCoupon": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Coupons"
            },
            "nullable": true
          },
          "ShippingInfo": {
            "$ref": "#/components/schemas/ShippingInfo"
          },
          "Serial": {
            "type": "string",
            "nullable": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineDto"
            },
            "nullable": true
          },
          "Payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPaymentDto"
            },
            "nullable": true
          },
          "MembershipCard": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MembershipCard"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "POSPurchaseCardRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "PurchaseValue",
          "Quantity",
          "ServiceCode",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "ServiceType": {
            "type": "string",
            "default": "PURCHASE_CARD",
            "example": "PURCHASE_CARD"
          },
          "ServiceCode": {
            "type": "string",
            "default": "GPPC.100",
            "example": "GPPC.100"
          },
          "PurchaseValue": {
            "maximum": 10000000,
            "minimum": 9999,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          },
          "Quantity": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          }
        },
        "additionalProperties": false
      },
      "POSTopupRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "Receiver",
          "TopupValue"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "Receiver": {
            "type": "string",
            "default": "0559384959",
            "example": "0559384959"
          },
          "TopupValue": {
            "maximum": 10000000,
            "minimum": 10000,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback": {
        "type": "object",
        "properties": {
          "object_changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/object_changes"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback_update_order": {
        "required": [
          "order_code"
        ],
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string"
          },
          "update_type": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "pick_time": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "merchant_note": {
            "type": "string",
            "nullable": true
          },
          "note_for_shipper": {
            "type": "string",
            "nullable": true
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "serial": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefundItems": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "OldPrice": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "TaxGroupCode": {
            "type": "string",
            "nullable": true
          },
          "VatPercent": {
            "type": "number",
            "format": "double"
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Remark": {
        "type": "object",
        "properties": {
          "Remark1": {
            "type": "string",
            "nullable": true
          },
          "Remark2": {
            "type": "string",
            "nullable": true
          },
          "Remark3": {
            "type": "string",
            "nullable": true
          },
          "Remark4": {
            "type": "string",
            "nullable": true
          },
          "Remark5": {
            "type": "string",
            "nullable": true
          },
          "Remark6": {
            "type": "string",
            "nullable": true
          },
          "Remark7": {
            "type": "string",
            "nullable": true
          },
          "Remark8": {
            "type": "string",
            "nullable": true
          },
          "Remark9": {
            "type": "string",
            "nullable": true
          },
          "Remark10": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestListOrderPOS": {
        "required": [
          "PageNumber",
          "PageSize",
          "PartnerCode",
          "PosNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "SHOPEE",
            "nullable": true,
            "example": "SHOPEE"
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "FromDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "ToDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "CustomerKeyword": {
            "type": "string",
            "default": "Tên khách",
            "nullable": true,
            "example": "Tên khách"
          },
          "ItemKeyword": {
            "type": "string",
            "default": "Tên sản phẩm",
            "nullable": true,
            "example": "Tên sản phẩm"
          },
          "PageNumber": {
            "type": "integer",
            "format": "int32",
            "default": "1",
            "example": "1"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32",
            "default": "10",
            "example": "10"
          }
        },
        "additionalProperties": false
      },
      "RequestUpdateOrderStatus": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PaymentAmount",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "OrderNo": {
            "type": "string",
            "default": "PLH1652759636107",
            "example": "PLH1652759636107"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double",
            "default": "0",
            "example": "0"
          },
          "Status": {
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseClient": {
        "type": "object",
        "properties": {
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "Data": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesReturnRequest": {
        "required": [
          "OrderNo",
          "OrgOrderNo",
          "PartnerCode",
          "PosNo",
          "ReturnedOrderNo",
          "TenderType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "ReturnedOrderNo": {
            "type": "string"
          },
          "OrgOrderNo": {
            "type": "string"
          },
          "TransactionDatetime": {
            "type": "string",
            "format": "date-time"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "TenderType": {
            "type": "string"
          },
          "RefundAmount": {
            "type": "number",
            "format": "double"
          },
          "RefundItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundItems"
            },
            "nullable": true
          },
          "InvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrgInvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "MerchantId": {
            "type": "string",
            "nullable": true
          },
          "StoreNo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingInfo": {
        "type": "object",
        "properties": {
          "ReceiverName": {
            "type": "string",
            "nullable": true
          },
          "ReceiverPhone": {
            "type": "string",
            "nullable": true
          },
          "ReceiverEmail": {
            "type": "string",
            "nullable": true
          },
          "ReceiverAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateStatusVoucherSAP": {
        "required": [
          "OrderNo",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "Vouchers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTierMemberO2": {
        "required": [
          "DataUpdate",
          "MemberNumber",
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "O2",
            "example": "O2"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "ServiceType": {
            "type": "string",
            "default": "O2_UPDATE_TIER",
            "example": "O2_UPDATE_TIER"
          },
          "MemberNumber": {
            "type": "string",
            "default": "0559900185",
            "example": "0559900185"
          },
          "DataUpdate": {
            "type": "string",
            "default": "VIP",
            "example": "VIP"
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidateKitStatusRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          }
        },
        "additionalProperties": false
      },
      "driver_arriving_times": {
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "driver_uid": {
            "type": "integer",
            "format": "int32"
          },
          "arriving_time": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "export_error_menu": {
        "type": "object",
        "properties": {
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          },
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "error_type": {
            "type": "string",
            "nullable": true
          },
          "error_time": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "object_changes": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "partner_api_url_callback_update_drivers_status": {
        "type": "object",
        "properties": {
          "driver_arriving_times": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/driver_arriving_times"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "description": "Basic Authorization header using the Bearer scheme.",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basic": [ ]
    }
  ]
}
