2023-09-21 10:00:16.244 [ERR] 63830887216221162116 Exception POST /api/v1/voucher/register Index (zero based) must be greater than or equal to zero and less than the size of the argument list.
2023-09-21 10:01:31.223 [ERR] 63830887291201285022 Exception GET /api/v1/sevices/tax-info/0302616081-0011 Index (zero based) must be greater than or equal to zero and less than the size of the argument list.
2023-09-21 10:01:32.889 [ERR] 6383088729286470064 Exception GET /api/v1/sevices/tax-info/0302616081-0011 Index (zero based) must be greater than or equal to zero and less than the size of the argument list.
2023-09-21 10:01:33.939 [ERR] 63830887293918427515 Exception GET /api/v1/sevices/tax-info/0302616081-0011 Index (zero based) must be greater than or equal to zero and less than the size of the argument list.
2023-09-21 10:02:01.345 [ERR] 63830887321316468424 Exception GET /api/v1/sevices/tax-info/0302616081-0011 Index (zero based) must be greater than or equal to zero and less than the size of the argument list.
2023-09-21 10:02:02.426 [ERR] 63830887322407247512 Exception GET /api/v1/sevices/tax-info/0302616081-0011 Index (zero based) must be greater than or equal to zero and less than the size of the argument list.
2023-09-21 10:02:16.673 [ERR] 63830887336651742524 Exception GET /api/v1/sevices/tax-info/0302616081-0011 Index (zero based) must be greater than or equal to zero and less than the size of the argument list.
2023-09-21 10:02:55.929 [ERR] 63830887375904585216 Exception GET /api/v1/sevices/tax-info/0302616081-0011 Index (zero based) must be greater than or equal to zero and less than the size of the argument list.
2023-09-21 10:03:01.444 [ERR] 63830887381420400524 Exception GET /api/v1/sevices/tax-info/0302616081-0011 Index (zero based) must be greater than or equal to zero and less than the size of the argument list.
2023-09-21 10:03:02.261 [ERR] 63830887382236891524 Exception GET /api/v1/sevices/tax-info/0302616081-0011 Index (zero based) must be greater than or equal to zero and less than the size of the argument list.
2023-09-21 10:09:03.333 [WRN] 6383088774318163917 responseBody GET /swagger/v1/swagger.json {
  "openapi": "3.0.1",
  "info": {
    "title": "WINMART",
    "version": "v1"
  },
  "paths": {
    "/api/v1/phuc-long/order/create": {
      "post": {
        "tags": [
          "MakeOrder"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phuc-long/order/check": {
      "get": {
        "tags": [
          "MakeOrder"
        ],
        "parameters": [
          {
            "name": "AppCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "200101-41498-001-0001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_order": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/export_error_menu": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_drivers_status": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/partner/card": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/topup": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/serial": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/esim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/physical-sim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/subscriber-info": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/o2/update": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sevices/tax-info/{taxcode}": {
      "get": {
        "tags": [
          "PublicService"
        ],
        "parameters": [
          {
            "name": "taxcode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0302616081-001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/create": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "PartnerCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "373701"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1630307833376"
            }
          },
          {
            "name": "AppCode",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "NOWFOOD"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/list": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/count": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/update-status": {
      "put": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/refund": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/register": {
      "post": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/check/phone": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "parameters": [
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/update-status": {
      "put": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BillingInfo": {
        "type": "object",
        "properties": {
          "TaxID": {
            "type": "string",
            "nullable": true
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CompanyName": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountOrderRequest": {
        "required": [
          "AppCode",
          "PartnerCode",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "WEB",
            "example": "WEB"
          },
          "StoreNo": {
            "type": "string",
            "default": "2018",
            "example": "2018"
          }
        },
        "additionalProperties": false
      },
      "Coupons": {
        "required": [
          "CouponCode"
        ],
        "type": "object",
        "properties": {
          "CouponCode": {
            "type": "string"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "DiscountPercent": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateEsimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePhysicalSimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "SerialSimKIT": {
            "type": "string",
            "nullable": true
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IssueVoucher": {
        "required": [
          "NumberOfVouchers",
          "PhoneNumber"
        ],
        "type": "object",
        "properties": {
          "PhoneNumber": {
            "maxLength": 11,
            "minLength": 9,
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string"
          },
          "NumberOfVouchers": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MembershipCard": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CardClass": {
            "type": "string",
            "nullable": true
          },
          "TotalPoints": {
            "type": "number",
            "format": "double"
          },
          "AvailabilityPoints": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Meta": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer",
            "format": "int32"
          },
          "Message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDiscount": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "OfferNo": {
            "type": "string",
            "nullable": true
          },
          "OfferType": {
            "type": "string",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineDto": {
        "required": [
          "ItemNo",
          "Quantity",
          "TaxGroupCode",
          "Uom",
          "VatPercent"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "maximum": 99999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "maximum": 99999,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "maxLength": 18,
            "minLength": 0,
            "type": "string"
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string"
          },
          "OldPrice": {
            "type": "number",
            "format": "double"
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "Quantity": {
            "maximum": 999,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "default": 1,
            "example": 1
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "LineAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountInVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountIncVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "TaxGroupCode": {
            "type": "string"
          },
          "VatPercent": {
            "type": "integer",
            "format": "int32"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "CupType": {
            "type": "string",
            "nullable": true
          },
          "Size": {
            "type": "string",
            "nullable": true
          },
          "IsTopping": {
            "type": "boolean"
          },
          "IsCombo": {
            "type": "boolean"
          },
          "ComboNo": {
            "type": "string",
            "nullable": true
          },
          "ComboId": {
            "type": "integer",
            "format": "int32"
          },
          "ArticleType": {
            "type": "string",
            "nullable": true
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "Loyalty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLoyalty"
            },
            "nullable": true
          },
          "OptionEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineOptionDto"
            },
            "nullable": true
          },
          "DiscountEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscount"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineOptionDto": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "OptionType": {
            "type": "string",
            "nullable": true
          },
          "OptionName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "Qty": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderLoyalty": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderPaymentDto": {
        "required": [
          "AmountTendered",
          "CurrencyCode",
          "ExchangeRate",
          "LineId",
          "PaymentMethod"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "PaymentMethod": {
            "type": "string"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "ExchangeRate": {
            "type": "number",
            "format": "double"
          },
          "AmountTendered": {
            "type": "number",
            "format": "double"
          },
          "AmountInCurrency": {
            "type": "number",
            "format": "double"
          },
          "TransactionNo": {
            "type": "string",
            "nullable": true
          },
          "ApprovalCode": {
            "type": "string",
            "nullable": true
          },
          "TraceCode": {
            "type": "string",
            "nullable": true
          },
          "ReferenceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderRequestBody": {
        "required": [
          "AppCode",
          "OrderDate",
          "OrderNo",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "AppCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "PartnerCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrderNo": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "OrderDate": {
            "type": "string",
            "format": "date-time"
          },
          "StoreNo": {
            "type": "string",
            "default": "2001",
            "example": "2001"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CustAddress": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "maximum": 999,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "SaleTypeId": {
            "maximum": 99,
            "minimum": 10,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "TotalAmount": {
            "type": "number",
            "format": "double"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double"
          },
          "ShippingFee": {
            "type": "number",
            "format": "double"
          },
          "HasVatInvoice": {
            "type": "boolean"
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "WinCode": {
            "type": "string",
            "nullable": true
          },
          "BillingInfo": {
            "$ref": "#/components/schemas/BillingInfo"
          },
          "UseCoupon": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Coupons"
            },
            "nullable": true
          },
          "ShippingInfo": {
            "$ref": "#/components/schemas/ShippingInfo"
          },
          "Serial": {
            "type": "string",
            "nullable": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineDto"
            },
            "nullable": true
          },
          "Payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPaymentDto"
            },
            "nullable": true
          },
          "MembershipCard": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MembershipCard"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "POSPurchaseCardRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "PurchaseValue",
          "Quantity",
          "ServiceCode",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "ServiceType": {
            "type": "string",
            "default": "PURCHASE_CARD",
            "example": "PURCHASE_CARD"
          },
          "ServiceCode": {
            "type": "string",
            "default": "GPPC.100",
            "example": "GPPC.100"
          },
          "PurchaseValue": {
            "maximum": 10000000,
            "minimum": 9999,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          },
          "Quantity": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          }
        },
        "additionalProperties": false
      },
      "POSTopupRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "Receiver",
          "TopupValue"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "Receiver": {
            "type": "string",
            "default": "0559384959",
            "example": "0559384959"
          },
          "TopupValue": {
            "maximum": 10000000,
            "minimum": 10000,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback": {
        "type": "object",
        "properties": {
          "object_changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/object_changes"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback_update_order": {
        "required": [
          "order_code"
        ],
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string"
          },
          "update_type": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "pick_time": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "merchant_note": {
            "type": "string",
            "nullable": true
          },
          "note_for_shipper": {
            "type": "string",
            "nullable": true
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "serial": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefundItems": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "OldPrice": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "TaxGroupCode": {
            "type": "string",
            "nullable": true
          },
          "VatPercent": {
            "type": "number",
            "format": "double"
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Remark": {
        "type": "object",
        "properties": {
          "Remark1": {
            "type": "string",
            "nullable": true
          },
          "Remark2": {
            "type": "string",
            "nullable": true
          },
          "Remark3": {
            "type": "string",
            "nullable": true
          },
          "Remark4": {
            "type": "string",
            "nullable": true
          },
          "Remark5": {
            "type": "string",
            "nullable": true
          },
          "Remark6": {
            "type": "string",
            "nullable": true
          },
          "Remark7": {
            "type": "string",
            "nullable": true
          },
          "Remark8": {
            "type": "string",
            "nullable": true
          },
          "Remark9": {
            "type": "string",
            "nullable": true
          },
          "Remark10": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestListOrderPOS": {
        "required": [
          "PageNumber",
          "PageSize",
          "PartnerCode",
          "PosNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "SHOPEE",
            "nullable": true,
            "example": "SHOPEE"
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "FromDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "ToDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "CustomerKeyword": {
            "type": "string",
            "default": "Tên khách",
            "nullable": true,
            "example": "Tên khách"
          },
          "ItemKeyword": {
            "type": "string",
            "default": "Tên sản phẩm",
            "nullable": true,
            "example": "Tên sản phẩm"
          },
          "PageNumber": {
            "type": "integer",
            "format": "int32",
            "default": "1",
            "example": "1"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32",
            "default": "10",
            "example": "10"
          }
        },
        "additionalProperties": false
      },
      "RequestUpdateOrderStatus": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PaymentAmount",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "OrderNo": {
            "type": "string",
            "default": "PLH1652759636107",
            "example": "PLH1652759636107"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double",
            "default": "0",
            "example": "0"
          },
          "Status": {
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseClient": {
        "type": "object",
        "properties": {
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "Data": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesReturnRequest": {
        "required": [
          "OrderNo",
          "OrgOrderNo",
          "PartnerCode",
          "PosNo",
          "ReturnedOrderNo",
          "TenderType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "ReturnedOrderNo": {
            "type": "string"
          },
          "OrgOrderNo": {
            "type": "string"
          },
          "TransactionDatetime": {
            "type": "string",
            "format": "date-time"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "TenderType": {
            "type": "string"
          },
          "RefundAmount": {
            "type": "number",
            "format": "double"
          },
          "RefundItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundItems"
            },
            "nullable": true
          },
          "InvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrgInvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "MerchantId": {
            "type": "string",
            "nullable": true
          },
          "StoreNo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingInfo": {
        "type": "object",
        "properties": {
          "ReceiverName": {
            "type": "string",
            "nullable": true
          },
          "ReceiverPhone": {
            "type": "string",
            "nullable": true
          },
          "ReceiverEmail": {
            "type": "string",
            "nullable": true
          },
          "ReceiverAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateStatusVoucherSAP": {
        "required": [
          "OrderNo",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "Vouchers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTierMemberO2": {
        "required": [
          "DataUpdate",
          "MemberNumber",
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "O2",
            "example": "O2"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "ServiceType": {
            "type": "string",
            "default": "O2_UPDATE_TIER",
            "example": "O2_UPDATE_TIER"
          },
          "MemberNumber": {
            "type": "string",
            "default": "0559900185",
            "example": "0559900185"
          },
          "DataUpdate": {
            "type": "string",
            "default": "VIP",
            "example": "VIP"
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidateKitStatusRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          }
        },
        "additionalProperties": false
      },
      "driver_arriving_times": {
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "driver_uid": {
            "type": "integer",
            "format": "int32"
          },
          "arriving_time": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "export_error_menu": {
        "type": "object",
        "properties": {
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          },
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "error_type": {
            "type": "string",
            "nullable": true
          },
          "error_time": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "object_changes": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "partner_api_url_callback_update_drivers_status": {
        "type": "object",
        "properties": {
          "driver_arriving_times": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/driver_arriving_times"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "description": "Basic Authorization header using the Bearer scheme.",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basic": [ ]
    }
  ]
}
2023-09-21 10:09:03.911 [ERR] 6383088774388370814 Exception GET /api/v1/sevices/tax-info/0302616081-0011 Index (zero based) must be greater than or equal to zero and less than the size of the argument list.
2023-09-21 10:09:11.284 [ERR] 6383088775125969769 Exception GET /api/v1/sevices/tax-info/0302616081-0011 Index (zero based) must be greater than or equal to zero and less than the size of the argument list.
2023-09-21 10:09:11.963 [ERR] 6383088775194265414 Exception GET /api/v1/sevices/tax-info/0302616081-0011 Index (zero based) must be greater than or equal to zero and less than the size of the argument list.
2023-09-21 10:09:12.483 [ERR] 6383088775246264977 Exception GET /api/v1/sevices/tax-info/0302616081-0011 Index (zero based) must be greater than or equal to zero and less than the size of the argument list.
2023-09-21 10:12:37.068 [WRN] 6383088795690724155 responseBody GET /swagger/v1/swagger.json {
  "openapi": "3.0.1",
  "info": {
    "title": "WINMART",
    "version": "v1"
  },
  "paths": {
    "/api/v1/phuc-long/order/create": {
      "post": {
        "tags": [
          "MakeOrder"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phuc-long/order/check": {
      "get": {
        "tags": [
          "MakeOrder"
        ],
        "parameters": [
          {
            "name": "AppCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "200101-41498-001-0001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_order": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/export_error_menu": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_drivers_status": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/partner/card": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/topup": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/serial": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/esim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/physical-sim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/subscriber-info": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/o2/update": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sevices/tax-info/{taxcode}": {
      "get": {
        "tags": [
          "PublicService"
        ],
        "parameters": [
          {
            "name": "taxcode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0302616081-001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/create": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "PartnerCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "373701"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1630307833376"
            }
          },
          {
            "name": "AppCode",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "NOWFOOD"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/list": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/count": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/update-status": {
      "put": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/refund": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/register": {
      "post": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/check/phone": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "parameters": [
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/update-status": {
      "put": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BillingInfo": {
        "type": "object",
        "properties": {
          "TaxID": {
            "type": "string",
            "nullable": true
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CompanyName": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountOrderRequest": {
        "required": [
          "AppCode",
          "PartnerCode",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "WEB",
            "example": "WEB"
          },
          "StoreNo": {
            "type": "string",
            "default": "2018",
            "example": "2018"
          }
        },
        "additionalProperties": false
      },
      "Coupons": {
        "required": [
          "CouponCode"
        ],
        "type": "object",
        "properties": {
          "CouponCode": {
            "type": "string"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "DiscountPercent": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateEsimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePhysicalSimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "SerialSimKIT": {
            "type": "string",
            "nullable": true
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IssueVoucher": {
        "required": [
          "NumberOfVouchers",
          "PhoneNumber"
        ],
        "type": "object",
        "properties": {
          "PhoneNumber": {
            "maxLength": 11,
            "minLength": 9,
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string"
          },
          "NumberOfVouchers": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MembershipCard": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CardClass": {
            "type": "string",
            "nullable": true
          },
          "TotalPoints": {
            "type": "number",
            "format": "double"
          },
          "AvailabilityPoints": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Meta": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer",
            "format": "int32"
          },
          "Message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDiscount": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "OfferNo": {
            "type": "string",
            "nullable": true
          },
          "OfferType": {
            "type": "string",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineDto": {
        "required": [
          "ItemNo",
          "Quantity",
          "TaxGroupCode",
          "Uom",
          "VatPercent"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "maximum": 99999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "maximum": 99999,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "maxLength": 18,
            "minLength": 0,
            "type": "string"
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string"
          },
          "OldPrice": {
            "type": "number",
            "format": "double"
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "Quantity": {
            "maximum": 999,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "default": 1,
            "example": 1
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "LineAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountInVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountIncVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "TaxGroupCode": {
            "type": "string"
          },
          "VatPercent": {
            "type": "integer",
            "format": "int32"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "CupType": {
            "type": "string",
            "nullable": true
          },
          "Size": {
            "type": "string",
            "nullable": true
          },
          "IsTopping": {
            "type": "boolean"
          },
          "IsCombo": {
            "type": "boolean"
          },
          "ComboNo": {
            "type": "string",
            "nullable": true
          },
          "ComboId": {
            "type": "integer",
            "format": "int32"
          },
          "ArticleType": {
            "type": "string",
            "nullable": true
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "Loyalty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLoyalty"
            },
            "nullable": true
          },
          "OptionEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineOptionDto"
            },
            "nullable": true
          },
          "DiscountEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscount"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineOptionDto": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "OptionType": {
            "type": "string",
            "nullable": true
          },
          "OptionName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "Qty": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderLoyalty": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderPaymentDto": {
        "required": [
          "AmountTendered",
          "CurrencyCode",
          "ExchangeRate",
          "LineId",
          "PaymentMethod"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "PaymentMethod": {
            "type": "string"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "ExchangeRate": {
            "type": "number",
            "format": "double"
          },
          "AmountTendered": {
            "type": "number",
            "format": "double"
          },
          "AmountInCurrency": {
            "type": "number",
            "format": "double"
          },
          "TransactionNo": {
            "type": "string",
            "nullable": true
          },
          "ApprovalCode": {
            "type": "string",
            "nullable": true
          },
          "TraceCode": {
            "type": "string",
            "nullable": true
          },
          "ReferenceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderRequestBody": {
        "required": [
          "AppCode",
          "OrderDate",
          "OrderNo",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "AppCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "PartnerCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrderNo": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "OrderDate": {
            "type": "string",
            "format": "date-time"
          },
          "StoreNo": {
            "type": "string",
            "default": "2001",
            "example": "2001"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CustAddress": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "maximum": 999,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "SaleTypeId": {
            "maximum": 99,
            "minimum": 10,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "TotalAmount": {
            "type": "number",
            "format": "double"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double"
          },
          "ShippingFee": {
            "type": "number",
            "format": "double"
          },
          "HasVatInvoice": {
            "type": "boolean"
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "WinCode": {
            "type": "string",
            "nullable": true
          },
          "BillingInfo": {
            "$ref": "#/components/schemas/BillingInfo"
          },
          "UseCoupon": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Coupons"
            },
            "nullable": true
          },
          "ShippingInfo": {
            "$ref": "#/components/schemas/ShippingInfo"
          },
          "Serial": {
            "type": "string",
            "nullable": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineDto"
            },
            "nullable": true
          },
          "Payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPaymentDto"
            },
            "nullable": true
          },
          "MembershipCard": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MembershipCard"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "POSPurchaseCardRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "PurchaseValue",
          "Quantity",
          "ServiceCode",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "ServiceType": {
            "type": "string",
            "default": "PURCHASE_CARD",
            "example": "PURCHASE_CARD"
          },
          "ServiceCode": {
            "type": "string",
            "default": "GPPC.100",
            "example": "GPPC.100"
          },
          "PurchaseValue": {
            "maximum": 10000000,
            "minimum": 9999,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          },
          "Quantity": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          }
        },
        "additionalProperties": false
      },
      "POSTopupRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "Receiver",
          "TopupValue"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "Receiver": {
            "type": "string",
            "default": "0559384959",
            "example": "0559384959"
          },
          "TopupValue": {
            "maximum": 10000000,
            "minimum": 10000,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback": {
        "type": "object",
        "properties": {
          "object_changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/object_changes"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback_update_order": {
        "required": [
          "order_code"
        ],
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string"
          },
          "update_type": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "pick_time": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "merchant_note": {
            "type": "string",
            "nullable": true
          },
          "note_for_shipper": {
            "type": "string",
            "nullable": true
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "serial": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefundItems": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "OldPrice": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "TaxGroupCode": {
            "type": "string",
            "nullable": true
          },
          "VatPercent": {
            "type": "number",
            "format": "double"
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Remark": {
        "type": "object",
        "properties": {
          "Remark1": {
            "type": "string",
            "nullable": true
          },
          "Remark2": {
            "type": "string",
            "nullable": true
          },
          "Remark3": {
            "type": "string",
            "nullable": true
          },
          "Remark4": {
            "type": "string",
            "nullable": true
          },
          "Remark5": {
            "type": "string",
            "nullable": true
          },
          "Remark6": {
            "type": "string",
            "nullable": true
          },
          "Remark7": {
            "type": "string",
            "nullable": true
          },
          "Remark8": {
            "type": "string",
            "nullable": true
          },
          "Remark9": {
            "type": "string",
            "nullable": true
          },
          "Remark10": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestListOrderPOS": {
        "required": [
          "PageNumber",
          "PageSize",
          "PartnerCode",
          "PosNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "SHOPEE",
            "nullable": true,
            "example": "SHOPEE"
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "FromDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "ToDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "CustomerKeyword": {
            "type": "string",
            "default": "Tên khách",
            "nullable": true,
            "example": "Tên khách"
          },
          "ItemKeyword": {
            "type": "string",
            "default": "Tên sản phẩm",
            "nullable": true,
            "example": "Tên sản phẩm"
          },
          "PageNumber": {
            "type": "integer",
            "format": "int32",
            "default": "1",
            "example": "1"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32",
            "default": "10",
            "example": "10"
          }
        },
        "additionalProperties": false
      },
      "RequestUpdateOrderStatus": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PaymentAmount",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "OrderNo": {
            "type": "string",
            "default": "PLH1652759636107",
            "example": "PLH1652759636107"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double",
            "default": "0",
            "example": "0"
          },
          "Status": {
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseClient": {
        "type": "object",
        "properties": {
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "Data": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesReturnRequest": {
        "required": [
          "OrderNo",
          "OrgOrderNo",
          "PartnerCode",
          "PosNo",
          "ReturnedOrderNo",
          "TenderType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "ReturnedOrderNo": {
            "type": "string"
          },
          "OrgOrderNo": {
            "type": "string"
          },
          "TransactionDatetime": {
            "type": "string",
            "format": "date-time"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "TenderType": {
            "type": "string"
          },
          "RefundAmount": {
            "type": "number",
            "format": "double"
          },
          "RefundItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundItems"
            },
            "nullable": true
          },
          "InvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrgInvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "MerchantId": {
            "type": "string",
            "nullable": true
          },
          "StoreNo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingInfo": {
        "type": "object",
        "properties": {
          "ReceiverName": {
            "type": "string",
            "nullable": true
          },
          "ReceiverPhone": {
            "type": "string",
            "nullable": true
          },
          "ReceiverEmail": {
            "type": "string",
            "nullable": true
          },
          "ReceiverAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateStatusVoucherSAP": {
        "required": [
          "OrderNo",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "Vouchers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTierMemberO2": {
        "required": [
          "DataUpdate",
          "MemberNumber",
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "O2",
            "example": "O2"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "ServiceType": {
            "type": "string",
            "default": "O2_UPDATE_TIER",
            "example": "O2_UPDATE_TIER"
          },
          "MemberNumber": {
            "type": "string",
            "default": "0559900185",
            "example": "0559900185"
          },
          "DataUpdate": {
            "type": "string",
            "default": "VIP",
            "example": "VIP"
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidateKitStatusRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          }
        },
        "additionalProperties": false
      },
      "driver_arriving_times": {
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "driver_uid": {
            "type": "integer",
            "format": "int32"
          },
          "arriving_time": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "export_error_menu": {
        "type": "object",
        "properties": {
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          },
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "error_type": {
            "type": "string",
            "nullable": true
          },
          "error_time": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "object_changes": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "partner_api_url_callback_update_drivers_status": {
        "type": "object",
        "properties": {
          "driver_arriving_times": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/driver_arriving_times"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "description": "Basic Authorization header using the Bearer scheme.",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basic": [ ]
    }
  ]
}
2023-09-21 10:12:40.037 [ERR] 6383088795999704864 Exception GET /api/v1/sevices/tax-info/0302616081-0011 Index (zero based) must be greater than or equal to zero and less than the size of the argument list.
2023-09-21 10:12:41.206 [ERR] 6383088796118266015 Exception GET /api/v1/sevices/tax-info/0302616081-0011 Index (zero based) must be greater than or equal to zero and less than the size of the argument list.
2023-09-21 10:12:44.470 [ERR] 6383088796444860709 Exception GET /api/v1/sevices/tax-info/0302616081-0011 Index (zero based) must be greater than or equal to zero and less than the size of the argument list.
2023-09-21 10:12:45.235 [ERR] 6383088796521417329 Exception GET /api/v1/sevices/tax-info/0302616081-0011 Index (zero based) must be greater than or equal to zero and less than the size of the argument list.
2023-09-21 10:12:45.906 [ERR] 6383088796588582429 Exception GET /api/v1/sevices/tax-info/0302616081-0011 Index (zero based) must be greater than or equal to zero and less than the size of the argument list.
2023-09-21 10:14:08.219 [ERR] 6383088804819268975 Exception GET /api/v1/sevices/tax-info/0302616081-0011 Index (zero based) must be greater than or equal to zero and less than the size of the argument list.
2023-09-21 10:15:21.427 [WRN] acc9b51bc3904502a2c93398bfc13bb8 Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:15:24.668 [WRN] acc9b51bc3904502a2c93398bfc13bb8 Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:16:16.628 [WRN] 6383088817645851424 responseBody GET /swagger/v1/swagger.json {
  "openapi": "3.0.1",
  "info": {
    "title": "WINMART",
    "version": "v1"
  },
  "paths": {
    "/api/v1/phuc-long/order/create": {
      "post": {
        "tags": [
          "MakeOrder"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phuc-long/order/check": {
      "get": {
        "tags": [
          "MakeOrder"
        ],
        "parameters": [
          {
            "name": "AppCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "200101-41498-001-0001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_order": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/export_error_menu": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_drivers_status": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/partner/card": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/topup": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/serial": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/esim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/physical-sim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/subscriber-info": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/o2/update": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sevices/tax-info/{taxcode}": {
      "get": {
        "tags": [
          "PublicService"
        ],
        "parameters": [
          {
            "name": "taxcode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0302616081-001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/create": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "PartnerCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "373701"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1630307833376"
            }
          },
          {
            "name": "AppCode",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "NOWFOOD"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/list": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/count": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/update-status": {
      "put": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/refund": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/register": {
      "post": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/check/phone": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "parameters": [
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/update-status": {
      "put": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BillingInfo": {
        "type": "object",
        "properties": {
          "TaxID": {
            "type": "string",
            "nullable": true
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CompanyName": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountOrderRequest": {
        "required": [
          "AppCode",
          "PartnerCode",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "WEB",
            "example": "WEB"
          },
          "StoreNo": {
            "type": "string",
            "default": "2018",
            "example": "2018"
          }
        },
        "additionalProperties": false
      },
      "Coupons": {
        "required": [
          "CouponCode"
        ],
        "type": "object",
        "properties": {
          "CouponCode": {
            "type": "string"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "DiscountPercent": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateEsimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePhysicalSimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "SerialSimKIT": {
            "type": "string",
            "nullable": true
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IssueVoucher": {
        "required": [
          "NumberOfVouchers",
          "PhoneNumber"
        ],
        "type": "object",
        "properties": {
          "PhoneNumber": {
            "maxLength": 11,
            "minLength": 9,
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string"
          },
          "NumberOfVouchers": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MembershipCard": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CardClass": {
            "type": "string",
            "nullable": true
          },
          "TotalPoints": {
            "type": "number",
            "format": "double"
          },
          "AvailabilityPoints": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Meta": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer",
            "format": "int32"
          },
          "Message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDiscount": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "OfferNo": {
            "type": "string",
            "nullable": true
          },
          "OfferType": {
            "type": "string",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineDto": {
        "required": [
          "ItemNo",
          "Quantity",
          "TaxGroupCode",
          "Uom",
          "VatPercent"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "maximum": 99999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "maximum": 99999,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "maxLength": 18,
            "minLength": 0,
            "type": "string"
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string"
          },
          "OldPrice": {
            "type": "number",
            "format": "double"
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "Quantity": {
            "maximum": 999,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "default": 1,
            "example": 1
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "LineAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountInVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountIncVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "TaxGroupCode": {
            "type": "string"
          },
          "VatPercent": {
            "type": "integer",
            "format": "int32"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "CupType": {
            "type": "string",
            "nullable": true
          },
          "Size": {
            "type": "string",
            "nullable": true
          },
          "IsTopping": {
            "type": "boolean"
          },
          "IsCombo": {
            "type": "boolean"
          },
          "ComboNo": {
            "type": "string",
            "nullable": true
          },
          "ComboId": {
            "type": "integer",
            "format": "int32"
          },
          "ArticleType": {
            "type": "string",
            "nullable": true
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "Loyalty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLoyalty"
            },
            "nullable": true
          },
          "OptionEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineOptionDto"
            },
            "nullable": true
          },
          "DiscountEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscount"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineOptionDto": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "OptionType": {
            "type": "string",
            "nullable": true
          },
          "OptionName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "Qty": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderLoyalty": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderPaymentDto": {
        "required": [
          "AmountTendered",
          "CurrencyCode",
          "ExchangeRate",
          "LineId",
          "PaymentMethod"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "PaymentMethod": {
            "type": "string"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "ExchangeRate": {
            "type": "number",
            "format": "double"
          },
          "AmountTendered": {
            "type": "number",
            "format": "double"
          },
          "AmountInCurrency": {
            "type": "number",
            "format": "double"
          },
          "TransactionNo": {
            "type": "string",
            "nullable": true
          },
          "ApprovalCode": {
            "type": "string",
            "nullable": true
          },
          "TraceCode": {
            "type": "string",
            "nullable": true
          },
          "ReferenceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderRequestBody": {
        "required": [
          "AppCode",
          "OrderDate",
          "OrderNo",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "AppCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "PartnerCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrderNo": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "OrderDate": {
            "type": "string",
            "format": "date-time"
          },
          "StoreNo": {
            "type": "string",
            "default": "2001",
            "example": "2001"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CustAddress": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "maximum": 999,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "SaleTypeId": {
            "maximum": 99,
            "minimum": 10,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "TotalAmount": {
            "type": "number",
            "format": "double"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double"
          },
          "ShippingFee": {
            "type": "number",
            "format": "double"
          },
          "HasVatInvoice": {
            "type": "boolean"
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "WinCode": {
            "type": "string",
            "nullable": true
          },
          "BillingInfo": {
            "$ref": "#/components/schemas/BillingInfo"
          },
          "UseCoupon": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Coupons"
            },
            "nullable": true
          },
          "ShippingInfo": {
            "$ref": "#/components/schemas/ShippingInfo"
          },
          "Serial": {
            "type": "string",
            "nullable": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineDto"
            },
            "nullable": true
          },
          "Payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPaymentDto"
            },
            "nullable": true
          },
          "MembershipCard": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MembershipCard"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "POSPurchaseCardRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "PurchaseValue",
          "Quantity",
          "ServiceCode",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "ServiceType": {
            "type": "string",
            "default": "PURCHASE_CARD",
            "example": "PURCHASE_CARD"
          },
          "ServiceCode": {
            "type": "string",
            "default": "GPPC.100",
            "example": "GPPC.100"
          },
          "PurchaseValue": {
            "maximum": 10000000,
            "minimum": 9999,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          },
          "Quantity": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          }
        },
        "additionalProperties": false
      },
      "POSTopupRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "Receiver",
          "TopupValue"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "Receiver": {
            "type": "string",
            "default": "0559384959",
            "example": "0559384959"
          },
          "TopupValue": {
            "maximum": 10000000,
            "minimum": 10000,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback": {
        "type": "object",
        "properties": {
          "object_changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/object_changes"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback_update_order": {
        "required": [
          "order_code"
        ],
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string"
          },
          "update_type": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "pick_time": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "merchant_note": {
            "type": "string",
            "nullable": true
          },
          "note_for_shipper": {
            "type": "string",
            "nullable": true
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "serial": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefundItems": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "OldPrice": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "TaxGroupCode": {
            "type": "string",
            "nullable": true
          },
          "VatPercent": {
            "type": "number",
            "format": "double"
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Remark": {
        "type": "object",
        "properties": {
          "Remark1": {
            "type": "string",
            "nullable": true
          },
          "Remark2": {
            "type": "string",
            "nullable": true
          },
          "Remark3": {
            "type": "string",
            "nullable": true
          },
          "Remark4": {
            "type": "string",
            "nullable": true
          },
          "Remark5": {
            "type": "string",
            "nullable": true
          },
          "Remark6": {
            "type": "string",
            "nullable": true
          },
          "Remark7": {
            "type": "string",
            "nullable": true
          },
          "Remark8": {
            "type": "string",
            "nullable": true
          },
          "Remark9": {
            "type": "string",
            "nullable": true
          },
          "Remark10": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestListOrderPOS": {
        "required": [
          "PageNumber",
          "PageSize",
          "PartnerCode",
          "PosNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "SHOPEE",
            "nullable": true,
            "example": "SHOPEE"
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "FromDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "ToDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "CustomerKeyword": {
            "type": "string",
            "default": "Tên khách",
            "nullable": true,
            "example": "Tên khách"
          },
          "ItemKeyword": {
            "type": "string",
            "default": "Tên sản phẩm",
            "nullable": true,
            "example": "Tên sản phẩm"
          },
          "PageNumber": {
            "type": "integer",
            "format": "int32",
            "default": "1",
            "example": "1"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32",
            "default": "10",
            "example": "10"
          }
        },
        "additionalProperties": false
      },
      "RequestUpdateOrderStatus": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PaymentAmount",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "OrderNo": {
            "type": "string",
            "default": "PLH1652759636107",
            "example": "PLH1652759636107"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double",
            "default": "0",
            "example": "0"
          },
          "Status": {
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseClient": {
        "type": "object",
        "properties": {
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "Data": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesReturnRequest": {
        "required": [
          "OrderNo",
          "OrgOrderNo",
          "PartnerCode",
          "PosNo",
          "ReturnedOrderNo",
          "TenderType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "ReturnedOrderNo": {
            "type": "string"
          },
          "OrgOrderNo": {
            "type": "string"
          },
          "TransactionDatetime": {
            "type": "string",
            "format": "date-time"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "TenderType": {
            "type": "string"
          },
          "RefundAmount": {
            "type": "number",
            "format": "double"
          },
          "RefundItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundItems"
            },
            "nullable": true
          },
          "InvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrgInvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "MerchantId": {
            "type": "string",
            "nullable": true
          },
          "StoreNo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingInfo": {
        "type": "object",
        "properties": {
          "ReceiverName": {
            "type": "string",
            "nullable": true
          },
          "ReceiverPhone": {
            "type": "string",
            "nullable": true
          },
          "ReceiverEmail": {
            "type": "string",
            "nullable": true
          },
          "ReceiverAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateStatusVoucherSAP": {
        "required": [
          "OrderNo",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "Vouchers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTierMemberO2": {
        "required": [
          "DataUpdate",
          "MemberNumber",
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "O2",
            "example": "O2"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "ServiceType": {
            "type": "string",
            "default": "O2_UPDATE_TIER",
            "example": "O2_UPDATE_TIER"
          },
          "MemberNumber": {
            "type": "string",
            "default": "0559900185",
            "example": "0559900185"
          },
          "DataUpdate": {
            "type": "string",
            "default": "VIP",
            "example": "VIP"
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidateKitStatusRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          }
        },
        "additionalProperties": false
      },
      "driver_arriving_times": {
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "driver_uid": {
            "type": "integer",
            "format": "int32"
          },
          "arriving_time": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "export_error_menu": {
        "type": "object",
        "properties": {
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          },
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "error_type": {
            "type": "string",
            "nullable": true
          },
          "error_time": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "object_changes": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "partner_api_url_callback_update_drivers_status": {
        "type": "object",
        "properties": {
          "driver_arriving_times": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/driver_arriving_times"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "description": "Basic Authorization header using the Bearer scheme.",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basic": [ ]
    }
  ]
}
2023-09-21 10:16:19.639 [WRN] 63830888179635628215 request POST /api/v1/transaction/order/list	
{
  "PartnerCode": "WCM",
  "AppCode": "WMT",
  "PosNo": "201801",
  "FromDate": "20220610",
  "ToDate": "yyyyMMdd",
  "CustomerKeyword": "Tên khách",
  "ItemKeyword": "Tên sản phẩm",
  "PageNumber": 1,
  "PageSize": 10
}
2023-09-21 10:16:25.275 [WRN] f197e2d2f3464772b8e55453c9888102 Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:16:25.496 [WRN] f197e2d2f3464772b8e55453c9888102 Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:16:25.553 [WRN] 63830888179635628215 responseBody POST /api/v1/transaction/order/list {"Meta":{"Code":200,"Message":"OK"},"Data":[]}
2023-09-21 10:19:06.768 [WRN] 6383088834658937144 Exception GET /swagger/v1/swagger.json An error occurred while writing to logger(s). (Input string was not in a correct format.) (Input string was not in a correct format.) (Index was outside the bounds of the array.)
2023-09-21 10:20:18.205 [WRN] 6383088841806011004 Exception GET /swagger/v1/swagger.json An error occurred while writing to logger(s). (Input string was not in a correct format.) (Input string was not in a correct format.) (Index was outside the bounds of the array.)
2023-09-21 10:20:54.774 [WRN] 6383088845463100444 Exception GET /swagger/v1/swagger.json An error occurred while writing to logger(s). (Input string was not in a correct format.) (Input string was not in a correct format.) (Input string was not in a correct format.) (Index was outside the bounds of the array.)
2023-09-21 10:21:32.802 [WRN] 77187cca05a34303b44bd5db97759fa7 Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:21:32.990 [WRN] 77187cca05a34303b44bd5db97759fa7 Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:23:10.452 [WRN] 0562971ec45b4453a53435cf99bd00f3 Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:23:10.620 [WRN] 0562971ec45b4453a53435cf99bd00f3 Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:23:12.769 [WRN] 0ed674bb38f745c493aaefa58d46d168 Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:23:12.812 [WRN] 0ed674bb38f745c493aaefa58d46d168 Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:23:41.579 [WRN] request: /api/v1/transaction/order/list Request /api/v1/transaction/order/list 
2023-09-21 10:23:43.557 [WRN] f8d2c436630542e0bf634bd1d6e8a4c9 Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:23:43.789 [WRN] f8d2c436630542e0bf634bd1d6e8a4c9 Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:24:48.741 [WRN] request: /api/v1/transaction/order/list Request /api/v1/transaction/order/list 
2023-09-21 10:24:49.907 [WRN] 16d543d3f9724686b04cf9a55937446e Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:24:50.062 [WRN] 16d543d3f9724686b04cf9a55937446e Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:24:51.232 [WRN] request: /api/v1/sevices/tax-info/0302616081-0011 Request /api/v1/sevices/tax-info/0302616081-0011 
2023-09-21 10:26:29.752 [WRN] 6383088878960725124 Exception GET /swagger/v1/swagger.json An error occurred while writing to logger(s). (Input string was not in a correct format.) (Input string was not in a correct format.) (Input string was not in a correct format.) (Index was outside the bounds of the array.)
2023-09-21 10:26:59.671 [WRN] 63830888819533255912 Exception GET /swagger/v1/swagger.json An error occurred while writing to logger(s). (Input string was not in a correct format.) (Input string was not in a correct format.) (Input string was not in a correct format.) (Index was outside the bounds of the array.)
2023-09-21 10:30:15.214 [WRN] 63830889014873705210 Exception GET /swagger/index.html An error occurred while writing to logger(s). (Index (zero based) must be greater than or equal to zero and less than the size of the argument list.) (Index (zero based) must be greater than or equal to zero and less than the size of the argument list.) (Index (zero based) must be greater than or equal to zero and less than the size of the argument list.) (Index was outside the bounds of the array.)
2023-09-21 10:30:15.466 [WRN] 6383088901531544314 responseBody GET /swagger/v1/swagger.json {
  "openapi": "3.0.1",
  "info": {
    "title": "WINMART",
    "version": "v1"
  },
  "paths": {
    "/api/v1/phuc-long/order/create": {
      "post": {
        "tags": [
          "MakeOrder"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phuc-long/order/check": {
      "get": {
        "tags": [
          "MakeOrder"
        ],
        "parameters": [
          {
            "name": "AppCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "200101-41498-001-0001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_order": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/export_error_menu": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_drivers_status": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/partner/card": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/topup": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/serial": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/esim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/physical-sim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/subscriber-info": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/o2/update": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sevices/tax-info/{taxcode}": {
      "get": {
        "tags": [
          "PublicService"
        ],
        "parameters": [
          {
            "name": "taxcode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0302616081-001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/create": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "PartnerCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "373701"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1630307833376"
            }
          },
          {
            "name": "AppCode",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "NOWFOOD"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/list": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/count": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/update-status": {
      "put": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/refund": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/register": {
      "post": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/check/phone": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "parameters": [
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/update-status": {
      "put": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BillingInfo": {
        "type": "object",
        "properties": {
          "TaxID": {
            "type": "string",
            "nullable": true
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CompanyName": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountOrderRequest": {
        "required": [
          "AppCode",
          "PartnerCode",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "WEB",
            "example": "WEB"
          },
          "StoreNo": {
            "type": "string",
            "default": "2018",
            "example": "2018"
          }
        },
        "additionalProperties": false
      },
      "Coupons": {
        "required": [
          "CouponCode"
        ],
        "type": "object",
        "properties": {
          "CouponCode": {
            "type": "string"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "DiscountPercent": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateEsimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePhysicalSimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "SerialSimKIT": {
            "type": "string",
            "nullable": true
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IssueVoucher": {
        "required": [
          "NumberOfVouchers",
          "PhoneNumber"
        ],
        "type": "object",
        "properties": {
          "PhoneNumber": {
            "maxLength": 11,
            "minLength": 9,
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string"
          },
          "NumberOfVouchers": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MembershipCard": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CardClass": {
            "type": "string",
            "nullable": true
          },
          "TotalPoints": {
            "type": "number",
            "format": "double"
          },
          "AvailabilityPoints": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Meta": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer",
            "format": "int32"
          },
          "Message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDiscount": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "OfferNo": {
            "type": "string",
            "nullable": true
          },
          "OfferType": {
            "type": "string",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineDto": {
        "required": [
          "ItemNo",
          "Quantity",
          "TaxGroupCode",
          "Uom",
          "VatPercent"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "maximum": 99999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "maximum": 99999,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "maxLength": 18,
            "minLength": 0,
            "type": "string"
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string"
          },
          "OldPrice": {
            "type": "number",
            "format": "double"
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "Quantity": {
            "maximum": 999,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "default": 1,
            "example": 1
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "LineAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountInVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountIncVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "TaxGroupCode": {
            "type": "string"
          },
          "VatPercent": {
            "type": "integer",
            "format": "int32"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "CupType": {
            "type": "string",
            "nullable": true
          },
          "Size": {
            "type": "string",
            "nullable": true
          },
          "IsTopping": {
            "type": "boolean"
          },
          "IsCombo": {
            "type": "boolean"
          },
          "ComboNo": {
            "type": "string",
            "nullable": true
          },
          "ComboId": {
            "type": "integer",
            "format": "int32"
          },
          "ArticleType": {
            "type": "string",
            "nullable": true
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "Loyalty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLoyalty"
            },
            "nullable": true
          },
          "OptionEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineOptionDto"
            },
            "nullable": true
          },
          "DiscountEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscount"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineOptionDto": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "OptionType": {
            "type": "string",
            "nullable": true
          },
          "OptionName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "Qty": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderLoyalty": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderPaymentDto": {
        "required": [
          "AmountTendered",
          "CurrencyCode",
          "ExchangeRate",
          "LineId",
          "PaymentMethod"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "PaymentMethod": {
            "type": "string"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "ExchangeRate": {
            "type": "number",
            "format": "double"
          },
          "AmountTendered": {
            "type": "number",
            "format": "double"
          },
          "AmountInCurrency": {
            "type": "number",
            "format": "double"
          },
          "TransactionNo": {
            "type": "string",
            "nullable": true
          },
          "ApprovalCode": {
            "type": "string",
            "nullable": true
          },
          "TraceCode": {
            "type": "string",
            "nullable": true
          },
          "ReferenceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderRequestBody": {
        "required": [
          "AppCode",
          "OrderDate",
          "OrderNo",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "AppCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "PartnerCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrderNo": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "OrderDate": {
            "type": "string",
            "format": "date-time"
          },
          "StoreNo": {
            "type": "string",
            "default": "2001",
            "example": "2001"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CustAddress": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "maximum": 999,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "SaleTypeId": {
            "maximum": 99,
            "minimum": 10,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "TotalAmount": {
            "type": "number",
            "format": "double"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double"
          },
          "ShippingFee": {
            "type": "number",
            "format": "double"
          },
          "HasVatInvoice": {
            "type": "boolean"
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "WinCode": {
            "type": "string",
            "nullable": true
          },
          "BillingInfo": {
            "$ref": "#/components/schemas/BillingInfo"
          },
          "UseCoupon": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Coupons"
            },
            "nullable": true
          },
          "ShippingInfo": {
            "$ref": "#/components/schemas/ShippingInfo"
          },
          "Serial": {
            "type": "string",
            "nullable": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineDto"
            },
            "nullable": true
          },
          "Payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPaymentDto"
            },
            "nullable": true
          },
          "MembershipCard": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MembershipCard"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "POSPurchaseCardRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "PurchaseValue",
          "Quantity",
          "ServiceCode",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "ServiceType": {
            "type": "string",
            "default": "PURCHASE_CARD",
            "example": "PURCHASE_CARD"
          },
          "ServiceCode": {
            "type": "string",
            "default": "GPPC.100",
            "example": "GPPC.100"
          },
          "PurchaseValue": {
            "maximum": 10000000,
            "minimum": 9999,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          },
          "Quantity": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          }
        },
        "additionalProperties": false
      },
      "POSTopupRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "Receiver",
          "TopupValue"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "Receiver": {
            "type": "string",
            "default": "0559384959",
            "example": "0559384959"
          },
          "TopupValue": {
            "maximum": 10000000,
            "minimum": 10000,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback": {
        "type": "object",
        "properties": {
          "object_changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/object_changes"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback_update_order": {
        "required": [
          "order_code"
        ],
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string"
          },
          "update_type": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "pick_time": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "merchant_note": {
            "type": "string",
            "nullable": true
          },
          "note_for_shipper": {
            "type": "string",
            "nullable": true
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "serial": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefundItems": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "OldPrice": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "TaxGroupCode": {
            "type": "string",
            "nullable": true
          },
          "VatPercent": {
            "type": "number",
            "format": "double"
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Remark": {
        "type": "object",
        "properties": {
          "Remark1": {
            "type": "string",
            "nullable": true
          },
          "Remark2": {
            "type": "string",
            "nullable": true
          },
          "Remark3": {
            "type": "string",
            "nullable": true
          },
          "Remark4": {
            "type": "string",
            "nullable": true
          },
          "Remark5": {
            "type": "string",
            "nullable": true
          },
          "Remark6": {
            "type": "string",
            "nullable": true
          },
          "Remark7": {
            "type": "string",
            "nullable": true
          },
          "Remark8": {
            "type": "string",
            "nullable": true
          },
          "Remark9": {
            "type": "string",
            "nullable": true
          },
          "Remark10": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestListOrderPOS": {
        "required": [
          "PageNumber",
          "PageSize",
          "PartnerCode",
          "PosNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "SHOPEE",
            "nullable": true,
            "example": "SHOPEE"
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "FromDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "ToDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "CustomerKeyword": {
            "type": "string",
            "default": "Tên khách",
            "nullable": true,
            "example": "Tên khách"
          },
          "ItemKeyword": {
            "type": "string",
            "default": "Tên sản phẩm",
            "nullable": true,
            "example": "Tên sản phẩm"
          },
          "PageNumber": {
            "type": "integer",
            "format": "int32",
            "default": "1",
            "example": "1"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32",
            "default": "10",
            "example": "10"
          }
        },
        "additionalProperties": false
      },
      "RequestUpdateOrderStatus": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PaymentAmount",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "OrderNo": {
            "type": "string",
            "default": "PLH1652759636107",
            "example": "PLH1652759636107"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double",
            "default": "0",
            "example": "0"
          },
          "Status": {
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseClient": {
        "type": "object",
        "properties": {
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "Data": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesReturnRequest": {
        "required": [
          "OrderNo",
          "OrgOrderNo",
          "PartnerCode",
          "PosNo",
          "ReturnedOrderNo",
          "TenderType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "ReturnedOrderNo": {
            "type": "string"
          },
          "OrgOrderNo": {
            "type": "string"
          },
          "TransactionDatetime": {
            "type": "string",
            "format": "date-time"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "TenderType": {
            "type": "string"
          },
          "RefundAmount": {
            "type": "number",
            "format": "double"
          },
          "RefundItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundItems"
            },
            "nullable": true
          },
          "InvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrgInvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "MerchantId": {
            "type": "string",
            "nullable": true
          },
          "StoreNo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingInfo": {
        "type": "object",
        "properties": {
          "ReceiverName": {
            "type": "string",
            "nullable": true
          },
          "ReceiverPhone": {
            "type": "string",
            "nullable": true
          },
          "ReceiverEmail": {
            "type": "string",
            "nullable": true
          },
          "ReceiverAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateStatusVoucherSAP": {
        "required": [
          "OrderNo",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "Vouchers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTierMemberO2": {
        "required": [
          "DataUpdate",
          "MemberNumber",
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "O2",
            "example": "O2"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "ServiceType": {
            "type": "string",
            "default": "O2_UPDATE_TIER",
            "example": "O2_UPDATE_TIER"
          },
          "MemberNumber": {
            "type": "string",
            "default": "0559900185",
            "example": "0559900185"
          },
          "DataUpdate": {
            "type": "string",
            "default": "VIP",
            "example": "VIP"
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidateKitStatusRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          }
        },
        "additionalProperties": false
      },
      "driver_arriving_times": {
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "driver_uid": {
            "type": "integer",
            "format": "int32"
          },
          "arriving_time": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "export_error_menu": {
        "type": "object",
        "properties": {
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          },
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "error_type": {
            "type": "string",
            "nullable": true
          },
          "error_time": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "object_changes": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "partner_api_url_callback_update_drivers_status": {
        "type": "object",
        "properties": {
          "driver_arriving_times": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/driver_arriving_times"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "description": "Basic Authorization header using the Bearer scheme.",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basic": [ ]
    }
  ]
}
2023-09-21 10:30:15.481 [WRN] 6383088901531544314 Exception GET /swagger/v1/swagger.json An error occurred while writing to logger(s). (Input string was not in a correct format.) (Input string was not in a correct format.) (Input string was not in a correct format.) (Index was outside the bounds of the array.)
2023-09-21 10:30:18.602 [WRN] request: /api/v1/sevices/tax-info/0302616081-0011 Request /api/v1/sevices/tax-info/0302616081-0011 
2023-09-21 10:30:21.507 [WRN] request: /api/v1/transaction/order/list Request /api/v1/transaction/order/list 
2023-09-21 10:30:21.565 [WRN] 5c65f2c563204ffdb56f2517cf91de6e Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:30:21.854 [WRN] 5c65f2c563204ffdb56f2517cf91de6e Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:30:21.886 [WRN] 63830889021503137216 responseBody POST /api/v1/transaction/order/list {"Meta":{"Code":200,"Message":"OK"},"Data":[]}
2023-09-21 10:30:21.952 [WRN] 63830889021503137216 Exception POST /api/v1/transaction/order/list An error occurred while writing to logger(s). (Input string was not in a correct format.) (Input string was not in a correct format.) (Input string was not in a correct format.) (Index was outside the bounds of the array.)
2023-09-21 10:30:41.980 [WRN] 63830889018599231810 responseBody GET /api/v1/sevices/tax-info/0302616081-0011 {"Meta":{"Code":400,"Message":"Lỗi api https://api.vietqr.io/v2/ - vui lòng thử lại"},"Data":null}
2023-09-21 10:30:42.002 [WRN] 63830889018599231810 Exception GET /api/v1/sevices/tax-info/0302616081-0011 An error occurred while writing to logger(s). (Input string was not in a correct format.) (Input string was not in a correct format.) (Input string was not in a correct format.) (Index was outside the bounds of the array.)
2023-09-21 10:30:53.151 [WRN] request: /api/v1/transaction/order/list Request /api/v1/transaction/order/list 
2023-09-21 10:30:53.174 [WRN] 52e131ad194342f5ac40639851babaa6 Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:30:53.224 [WRN] 52e131ad194342f5ac40639851babaa6 Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:30:53.227 [WRN] 6383088905314719785 responseBody POST /api/v1/transaction/order/list {"Meta":{"Code":200,"Message":"OK"},"Data":[]}
2023-09-21 10:30:53.273 [WRN] 6383088905314719785 Exception POST /api/v1/transaction/order/list An error occurred while writing to logger(s). (Input string was not in a correct format.) (Input string was not in a correct format.) (Input string was not in a correct format.) (Index was outside the bounds of the array.)
2023-09-21 10:30:54.057 [WRN] request: /api/v1/transaction/order/list Request /api/v1/transaction/order/list 
2023-09-21 10:30:54.080 [WRN] f48a8bc2226549cfab121a7223d59b4a Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:30:54.163 [WRN] f48a8bc2226549cfab121a7223d59b4a Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:30:54.167 [WRN] 6383088905405439054 responseBody POST /api/v1/transaction/order/list {"Meta":{"Code":200,"Message":"OK"},"Data":[]}
2023-09-21 10:30:54.206 [WRN] 6383088905405439054 Exception POST /api/v1/transaction/order/list An error occurred while writing to logger(s). (Input string was not in a correct format.) (Input string was not in a correct format.) (Input string was not in a correct format.) (Index was outside the bounds of the array.)
2023-09-21 10:30:55.081 [WRN] request: /api/v1/transaction/order/list Request /api/v1/transaction/order/list 
2023-09-21 10:30:55.104 [WRN] e87875366f844833864f694098759368 Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:30:55.136 [WRN] e87875366f844833864f694098759368 Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:30:55.139 [WRN] 6383088905507935925 responseBody POST /api/v1/transaction/order/list {"Meta":{"Code":200,"Message":"OK"},"Data":[]}
2023-09-21 10:30:55.173 [WRN] 6383088905507935925 Exception POST /api/v1/transaction/order/list An error occurred while writing to logger(s). (Input string was not in a correct format.) (Input string was not in a correct format.) (Input string was not in a correct format.) (Index was outside the bounds of the array.)
2023-09-21 10:30:55.751 [WRN] request: /api/v1/transaction/order/list Request /api/v1/transaction/order/list 
2023-09-21 10:30:55.765 [WRN] 15e12f825b3e4de4880c550100e31d3b Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:30:55.806 [WRN] 15e12f825b3e4de4880c550100e31d3b Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:30:55.809 [WRN] 6383088905574829449 responseBody POST /api/v1/transaction/order/list {"Meta":{"Code":200,"Message":"OK"},"Data":[]}
2023-09-21 10:30:55.850 [WRN] 6383088905574829449 Exception POST /api/v1/transaction/order/list An error occurred while writing to logger(s). (Input string was not in a correct format.) (Input string was not in a correct format.) (Input string was not in a correct format.) (Index was outside the bounds of the array.)
2023-09-21 10:30:56.213 [WRN] request: /api/v1/transaction/order/list Request /api/v1/transaction/order/list 
2023-09-21 10:30:56.230 [WRN] 16d0db560c1043bc9d980e18190942e6 Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:30:56.261 [WRN] 16d0db560c1043bc9d980e18190942e6 Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:30:56.264 [WRN] 6383088905621053435 responseBody POST /api/v1/transaction/order/list {"Meta":{"Code":200,"Message":"OK"},"Data":[]}
2023-09-21 10:30:56.297 [WRN] 6383088905621053435 Exception POST /api/v1/transaction/order/list An error occurred while writing to logger(s). (Input string was not in a correct format.) (Input string was not in a correct format.) (Input string was not in a correct format.) (Index was outside the bounds of the array.)
2023-09-21 10:30:56.731 [WRN] request: /api/v1/transaction/order/list Request /api/v1/transaction/order/list 
2023-09-21 10:30:56.747 [WRN] 8ad62234a09a4311a7e84d94e97840d8 Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:30:56.785 [WRN] 8ad62234a09a4311a7e84d94e97840d8 Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:30:56.788 [WRN] 63830889056728955932 responseBody POST /api/v1/transaction/order/list {"Meta":{"Code":200,"Message":"OK"},"Data":[]}
2023-09-21 10:30:56.817 [WRN] 63830889056728955932 Exception POST /api/v1/transaction/order/list An error occurred while writing to logger(s). (Input string was not in a correct format.) (Input string was not in a correct format.) (Input string was not in a correct format.) (Index was outside the bounds of the array.)
2023-09-21 10:30:57.221 [WRN] request: /api/v1/transaction/order/list Request /api/v1/transaction/order/list 
2023-09-21 10:30:57.251 [WRN] 13de51b9d8ec41a387fe52e890749c7f Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:30:57.314 [WRN] 13de51b9d8ec41a387fe52e890749c7f Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:30:57.319 [WRN] 6383088905721863534 responseBody POST /api/v1/transaction/order/list {"Meta":{"Code":200,"Message":"OK"},"Data":[]}
2023-09-21 10:30:57.363 [WRN] 6383088905721863534 Exception POST /api/v1/transaction/order/list An error occurred while writing to logger(s). (Input string was not in a correct format.) (Input string was not in a correct format.) (Input string was not in a correct format.) (Index was outside the bounds of the array.)
2023-09-21 10:30:57.592 [WRN] request: /api/v1/transaction/order/list Request /api/v1/transaction/order/list 
2023-09-21 10:30:57.607 [WRN] 9227a5de8f3e4412a5fde499c37cbc24 Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:30:57.645 [WRN] 9227a5de8f3e4412a5fde499c37cbc24 Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:30:57.650 [WRN] 6383088905759038404 responseBody POST /api/v1/transaction/order/list {"Meta":{"Code":200,"Message":"OK"},"Data":[]}
2023-09-21 10:30:57.694 [WRN] 6383088905759038404 Exception POST /api/v1/transaction/order/list An error occurred while writing to logger(s). (Input string was not in a correct format.) (Input string was not in a correct format.) (Input string was not in a correct format.) (Index was outside the bounds of the array.)
2023-09-21 10:31:02.171 [WRN] request: /api/v1/transaction/order/list Request /api/v1/transaction/order/list 
2023-09-21 10:31:02.186 [WRN] b05f28a2a7ec4c19bade2fc8bba3f3ff Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:31:02.236 [WRN] b05f28a2a7ec4c19bade2fc8bba3f3ff Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:31:02.239 [WRN] 6383088906216857465 responseBody POST /api/v1/transaction/order/list {"Meta":{"Code":200,"Message":"OK"},"Data":[]}
2023-09-21 10:31:02.269 [WRN] 6383088906216857465 Exception POST /api/v1/transaction/order/list An error occurred while writing to logger(s). (Input string was not in a correct format.) (Input string was not in a correct format.) (Input string was not in a correct format.) (Index was outside the bounds of the array.)
2023-09-21 10:31:02.563 [WRN] request: /api/v1/transaction/order/list Request /api/v1/transaction/order/list 
2023-09-21 10:31:02.576 [WRN] 87ecfa845cae421990ef2cbb444c4ea9 Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:31:02.625 [WRN] 87ecfa845cae421990ef2cbb444c4ea9 Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:31:02.629 [WRN] 6383088906256080969 responseBody POST /api/v1/transaction/order/list {"Meta":{"Code":200,"Message":"OK"},"Data":[]}
2023-09-21 10:31:02.664 [WRN] 6383088906256080969 Exception POST /api/v1/transaction/order/list An error occurred while writing to logger(s). (Input string was not in a correct format.) (Input string was not in a correct format.) (Input string was not in a correct format.) (Index was outside the bounds of the array.)
2023-09-21 10:31:02.950 [WRN] request: /api/v1/transaction/order/list Request /api/v1/transaction/order/list 
2023-09-21 10:31:02.961 [WRN] 2d8cf15c707246779178150d69cb14c0 Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:31:03.021 [WRN] 2d8cf15c707246779178150d69cb14c0 Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:31:03.024 [WRN] 63830889062948439510 responseBody POST /api/v1/transaction/order/list {"Meta":{"Code":200,"Message":"OK"},"Data":[]}
2023-09-21 10:31:03.062 [WRN] 63830889062948439510 Exception POST /api/v1/transaction/order/list An error occurred while writing to logger(s). (Input string was not in a correct format.) (Input string was not in a correct format.) (Input string was not in a correct format.) (Index was outside the bounds of the array.)
2023-09-21 10:31:03.333 [WRN] request: /api/v1/transaction/order/list Request /api/v1/transaction/order/list 
2023-09-21 10:31:03.355 [WRN] 282ea6c7d8f740398713d1c46340a71c Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:31:03.400 [WRN] 282ea6c7d8f740398713d1c46340a71c Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:31:03.404 [WRN] 6383088906333044014 responseBody POST /api/v1/transaction/order/list {"Meta":{"Code":200,"Message":"OK"},"Data":[]}
2023-09-21 10:31:03.438 [WRN] 6383088906333044014 Exception POST /api/v1/transaction/order/list An error occurred while writing to logger(s). (Input string was not in a correct format.) (Input string was not in a correct format.) (Input string was not in a correct format.) (Index was outside the bounds of the array.)
2023-09-21 10:31:03.662 [WRN] request: /api/v1/transaction/order/list Request /api/v1/transaction/order/list 
2023-09-21 10:31:03.693 [WRN] 1cffd7871bef4115b1a146d1da82143b Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:31:03.733 [WRN] 1cffd7871bef4115b1a146d1da82143b Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:31:03.737 [WRN] 6383088906366034024 responseBody POST /api/v1/transaction/order/list {"Meta":{"Code":200,"Message":"OK"},"Data":[]}
2023-09-21 10:31:03.771 [WRN] 6383088906366034024 Exception POST /api/v1/transaction/order/list An error occurred while writing to logger(s). (Input string was not in a correct format.) (Input string was not in a correct format.) (Input string was not in a correct format.) (Index was outside the bounds of the array.)
2023-09-21 10:31:04.032 [WRN] request: /api/v1/transaction/order/list Request /api/v1/transaction/order/list 
2023-09-21 10:31:04.044 [WRN] 6cfbf3ae67aa43d49a87a928e99b11fd Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:31:04.148 [WRN] 6cfbf3ae67aa43d49a87a928e99b11fd Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:31:04.151 [WRN] 63830889064030475933 responseBody POST /api/v1/transaction/order/list {"Meta":{"Code":200,"Message":"OK"},"Data":[]}
2023-09-21 10:31:04.180 [WRN] 63830889064030475933 Exception POST /api/v1/transaction/order/list An error occurred while writing to logger(s). (Input string was not in a correct format.) (Input string was not in a correct format.) (Input string was not in a correct format.) (Index was outside the bounds of the array.)
2023-09-21 10:31:04.399 [WRN] request: /api/v1/transaction/order/list Request /api/v1/transaction/order/list 
2023-09-21 10:31:04.414 [WRN] e7a1e3c9752c439dbde345c6ba683185 Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:31:04.485 [WRN] e7a1e3c9752c439dbde345c6ba683185 Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:31:04.489 [WRN] 63830889064396737111 responseBody POST /api/v1/transaction/order/list {"Meta":{"Code":200,"Message":"OK"},"Data":[]}
2023-09-21 10:31:04.527 [WRN] 63830889064396737111 Exception POST /api/v1/transaction/order/list An error occurred while writing to logger(s). (Input string was not in a correct format.) (Input string was not in a correct format.) (Input string was not in a correct format.) (Index was outside the bounds of the array.)
2023-09-21 10:32:56.252 [WRN] 63830889176118616811 responseBody GET /swagger/v1/swagger.json {
  "openapi": "3.0.1",
  "info": {
    "title": "WINMART",
    "version": "v1"
  },
  "paths": {
    "/api/v1/phuc-long/order/create": {
      "post": {
        "tags": [
          "MakeOrder"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phuc-long/order/check": {
      "get": {
        "tags": [
          "MakeOrder"
        ],
        "parameters": [
          {
            "name": "AppCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "200101-41498-001-0001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_order": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback_update_order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_api_url_callback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/export_error_menu": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/export_error_menu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/foody/partner_api_url_callback/update_drivers_status": {
      "post": {
        "tags": [
          "NowFood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/partner_api_url_callback_update_drivers_status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/partner/card": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSPurchaseCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/topup": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/POSTopupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/serial": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/esim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEsimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/physical-sim": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhysicalSimOrderPosWcmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/check/subscriber-info": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateKitStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partner/o2/update": {
      "post": {
        "tags": [
          "Partner"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTierMemberO2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sevices/tax-info/{taxcode}": {
      "get": {
        "tags": [
          "PublicService"
        ],
        "parameters": [
          {
            "name": "taxcode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0302616081-001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/create": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "parameters": [
          {
            "name": "PartnerCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "PLH"
            }
          },
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "373701"
            }
          },
          {
            "name": "OrderNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1630307833376"
            }
          },
          {
            "name": "AppCode",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "NOWFOOD"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/list": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestListOrderPOS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/count": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CountOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/update-status": {
      "put": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrderStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transaction/order/refund": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SalesReturnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/register": {
      "post": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueVoucher"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/check/phone": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "parameters": [
          {
            "name": "PosNo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/voucher/update-status": {
      "put": {
        "tags": [
          "Voucher"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusVoucherSAP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClient"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BillingInfo": {
        "type": "object",
        "properties": {
          "TaxID": {
            "type": "string",
            "nullable": true
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CompanyName": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountOrderRequest": {
        "required": [
          "AppCode",
          "PartnerCode",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "WEB",
            "example": "WEB"
          },
          "StoreNo": {
            "type": "string",
            "default": "2018",
            "example": "2018"
          }
        },
        "additionalProperties": false
      },
      "Coupons": {
        "required": [
          "CouponCode"
        ],
        "type": "object",
        "properties": {
          "CouponCode": {
            "type": "string"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "DiscountPercent": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateEsimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePhysicalSimOrderPosWcmRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          },
          "SerialSimKIT": {
            "type": "string",
            "nullable": true
          },
          "PackageId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderNo": {
            "type": "string",
            "nullable": true
          },
          "CustEmail": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IssueVoucher": {
        "required": [
          "NumberOfVouchers",
          "PhoneNumber"
        ],
        "type": "object",
        "properties": {
          "PhoneNumber": {
            "maxLength": 11,
            "minLength": 9,
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string"
          },
          "NumberOfVouchers": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MembershipCard": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CardClass": {
            "type": "string",
            "nullable": true
          },
          "TotalPoints": {
            "type": "number",
            "format": "double"
          },
          "AvailabilityPoints": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Meta": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer",
            "format": "int32"
          },
          "Message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDiscount": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "OfferNo": {
            "type": "string",
            "nullable": true
          },
          "OfferType": {
            "type": "string",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineDto": {
        "required": [
          "ItemNo",
          "Quantity",
          "TaxGroupCode",
          "Uom",
          "VatPercent"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "maximum": 99999,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "maximum": 99999,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "maxLength": 18,
            "minLength": 0,
            "type": "string"
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string"
          },
          "OldPrice": {
            "type": "number",
            "format": "double"
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "Quantity": {
            "maximum": 999,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "default": 1,
            "example": 1
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "LineAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountInVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "LineAmountIncVAT": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "TaxGroupCode": {
            "type": "string"
          },
          "VatPercent": {
            "type": "integer",
            "format": "int32"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "CupType": {
            "type": "string",
            "nullable": true
          },
          "Size": {
            "type": "string",
            "nullable": true
          },
          "IsTopping": {
            "type": "boolean"
          },
          "IsCombo": {
            "type": "boolean"
          },
          "ComboNo": {
            "type": "string",
            "nullable": true
          },
          "ComboId": {
            "type": "integer",
            "format": "int32"
          },
          "ArticleType": {
            "type": "string",
            "nullable": true
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "Loyalty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLoyalty"
            },
            "nullable": true
          },
          "OptionEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineOptionDto"
            },
            "nullable": true
          },
          "DiscountEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDiscount"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLineOptionDto": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "OptionType": {
            "type": "string",
            "nullable": true
          },
          "OptionName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "Qty": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderLoyalty": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "MemberCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ClubCode": {
            "type": "string",
            "nullable": true
          },
          "LoyaltyPointsEarn": {
            "type": "number",
            "format": "double"
          },
          "LoyaltyPointsRedeem": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderPaymentDto": {
        "required": [
          "AmountTendered",
          "CurrencyCode",
          "ExchangeRate",
          "LineId",
          "PaymentMethod"
        ],
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "PaymentMethod": {
            "type": "string"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "ExchangeRate": {
            "type": "number",
            "format": "double"
          },
          "AmountTendered": {
            "type": "number",
            "format": "double"
          },
          "AmountInCurrency": {
            "type": "number",
            "format": "double"
          },
          "TransactionNo": {
            "type": "string",
            "nullable": true
          },
          "ApprovalCode": {
            "type": "string",
            "nullable": true
          },
          "TraceCode": {
            "type": "string",
            "nullable": true
          },
          "ReferenceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderRequestBody": {
        "required": [
          "AppCode",
          "OrderDate",
          "OrderNo",
          "StoreNo"
        ],
        "type": "object",
        "properties": {
          "AppCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "PartnerCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrderNo": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "OrderDate": {
            "type": "string",
            "format": "date-time"
          },
          "StoreNo": {
            "type": "string",
            "default": "2001",
            "example": "2001"
          },
          "CustName": {
            "type": "string",
            "nullable": true
          },
          "CustAddress": {
            "type": "string",
            "nullable": true
          },
          "CustPhone": {
            "pattern": "^\\$?\\d+(\\.(\\d{2}))?$",
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "maximum": 999,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "SaleTypeId": {
            "maximum": 99,
            "minimum": 10,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "example": 0
          },
          "TotalAmount": {
            "type": "number",
            "format": "double"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double"
          },
          "ShippingFee": {
            "type": "number",
            "format": "double"
          },
          "HasVatInvoice": {
            "type": "boolean"
          },
          "IsLoyalty": {
            "type": "boolean"
          },
          "WinCode": {
            "type": "string",
            "nullable": true
          },
          "BillingInfo": {
            "$ref": "#/components/schemas/BillingInfo"
          },
          "UseCoupon": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Coupons"
            },
            "nullable": true
          },
          "ShippingInfo": {
            "$ref": "#/components/schemas/ShippingInfo"
          },
          "Serial": {
            "type": "string",
            "nullable": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineDto"
            },
            "nullable": true
          },
          "Payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPaymentDto"
            },
            "nullable": true
          },
          "MembershipCard": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MembershipCard"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "POSPurchaseCardRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "PurchaseValue",
          "Quantity",
          "ServiceCode",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "ServiceType": {
            "type": "string",
            "default": "PURCHASE_CARD",
            "example": "PURCHASE_CARD"
          },
          "ServiceCode": {
            "type": "string",
            "default": "GPPC.100",
            "example": "GPPC.100"
          },
          "PurchaseValue": {
            "maximum": 10000000,
            "minimum": 9999,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          },
          "Quantity": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          }
        },
        "additionalProperties": false
      },
      "POSTopupRequest": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PosNo",
          "Receiver",
          "TopupValue"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "OrderNo": {
            "type": "string",
            "default": "153301210605119",
            "example": "153301210605119"
          },
          "Receiver": {
            "type": "string",
            "default": "0559384959",
            "example": "0559384959"
          },
          "TopupValue": {
            "maximum": 10000000,
            "minimum": 10000,
            "type": "integer",
            "format": "int32",
            "default": 10000,
            "example": 10000
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback": {
        "type": "object",
        "properties": {
          "object_changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/object_changes"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Partner_api_url_callback_update_order": {
        "required": [
          "order_code"
        ],
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string"
          },
          "update_type": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "pick_time": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "merchant_note": {
            "type": "string",
            "nullable": true
          },
          "note_for_shipper": {
            "type": "string",
            "nullable": true
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "serial": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefundItems": {
        "type": "object",
        "properties": {
          "LineId": {
            "type": "integer",
            "format": "int32"
          },
          "ParentLineId": {
            "type": "integer",
            "format": "int32"
          },
          "ItemNo": {
            "type": "string",
            "nullable": true
          },
          "ItemName": {
            "type": "string",
            "nullable": true
          },
          "Uom": {
            "type": "string",
            "nullable": true
          },
          "UnitPrice": {
            "type": "number",
            "format": "double"
          },
          "OldPrice": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "Quantity": {
            "type": "number",
            "format": "double"
          },
          "DiscountAmount": {
            "type": "number",
            "format": "double"
          },
          "TaxGroupCode": {
            "type": "string",
            "nullable": true
          },
          "VatPercent": {
            "type": "number",
            "format": "double"
          },
          "Barcode": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Remark": {
        "type": "object",
        "properties": {
          "Remark1": {
            "type": "string",
            "nullable": true
          },
          "Remark2": {
            "type": "string",
            "nullable": true
          },
          "Remark3": {
            "type": "string",
            "nullable": true
          },
          "Remark4": {
            "type": "string",
            "nullable": true
          },
          "Remark5": {
            "type": "string",
            "nullable": true
          },
          "Remark6": {
            "type": "string",
            "nullable": true
          },
          "Remark7": {
            "type": "string",
            "nullable": true
          },
          "Remark8": {
            "type": "string",
            "nullable": true
          },
          "Remark9": {
            "type": "string",
            "nullable": true
          },
          "Remark10": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestListOrderPOS": {
        "required": [
          "PageNumber",
          "PageSize",
          "PartnerCode",
          "PosNo"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "default": "SHOPEE",
            "nullable": true,
            "example": "SHOPEE"
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "FromDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "ToDate": {
            "type": "string",
            "default": "yyyyMMdd",
            "nullable": true,
            "example": "yyyyMMdd"
          },
          "CustomerKeyword": {
            "type": "string",
            "default": "Tên khách",
            "nullable": true,
            "example": "Tên khách"
          },
          "ItemKeyword": {
            "type": "string",
            "default": "Tên sản phẩm",
            "nullable": true,
            "example": "Tên sản phẩm"
          },
          "PageNumber": {
            "type": "integer",
            "format": "int32",
            "default": "1",
            "example": "1"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32",
            "default": "10",
            "example": "10"
          }
        },
        "additionalProperties": false
      },
      "RequestUpdateOrderStatus": {
        "required": [
          "OrderNo",
          "PartnerCode",
          "PaymentAmount",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "PLH",
            "example": "PLH"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string",
            "default": "200101",
            "example": "200101"
          },
          "OrderNo": {
            "type": "string",
            "default": "PLH1652759636107",
            "example": "PLH1652759636107"
          },
          "PaymentAmount": {
            "type": "number",
            "format": "double",
            "default": "0",
            "example": "0"
          },
          "Status": {
            "type": "integer",
            "format": "int32",
            "default": 1,
            "example": 1
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseClient": {
        "type": "object",
        "properties": {
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "Data": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesReturnRequest": {
        "required": [
          "OrderNo",
          "OrgOrderNo",
          "PartnerCode",
          "PosNo",
          "ReturnedOrderNo",
          "TenderType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string"
          },
          "AppCode": {
            "type": "string",
            "nullable": true
          },
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "ReturnedOrderNo": {
            "type": "string"
          },
          "OrgOrderNo": {
            "type": "string"
          },
          "TransactionDatetime": {
            "type": "string",
            "format": "date-time"
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "TenderType": {
            "type": "string"
          },
          "RefundAmount": {
            "type": "number",
            "format": "double"
          },
          "RefundItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundItems"
            },
            "nullable": true
          },
          "InvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrgInvoiceNo": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "MerchantId": {
            "type": "string",
            "nullable": true
          },
          "StoreNo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShippingInfo": {
        "type": "object",
        "properties": {
          "ReceiverName": {
            "type": "string",
            "nullable": true
          },
          "ReceiverPhone": {
            "type": "string",
            "nullable": true
          },
          "ReceiverEmail": {
            "type": "string",
            "nullable": true
          },
          "ReceiverAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateStatusVoucherSAP": {
        "required": [
          "OrderNo",
          "PosNo",
          "Status"
        ],
        "type": "object",
        "properties": {
          "PosNo": {
            "type": "string"
          },
          "OrderNo": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "Vouchers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTierMemberO2": {
        "required": [
          "DataUpdate",
          "MemberNumber",
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "O2",
            "example": "O2"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "ServiceType": {
            "type": "string",
            "default": "O2_UPDATE_TIER",
            "example": "O2_UPDATE_TIER"
          },
          "MemberNumber": {
            "type": "string",
            "default": "0559900185",
            "example": "0559900185"
          },
          "DataUpdate": {
            "type": "string",
            "default": "VIP",
            "example": "VIP"
          },
          "Remark": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Remark"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidateKitStatusRequest": {
        "required": [
          "PartnerCode",
          "PosNo",
          "ServiceType"
        ],
        "type": "object",
        "properties": {
          "PartnerCode": {
            "type": "string",
            "default": "MBC",
            "example": "MBC"
          },
          "ServiceType": {
            "type": "string",
            "default": "KIT_WINTEL_WIN99",
            "example": "KIT_WINTEL_WIN99"
          },
          "PosNo": {
            "type": "string",
            "default": "373701",
            "example": "373701"
          },
          "Serial": {
            "type": "string",
            "default": "89840905510000099835",
            "nullable": true,
            "example": "89840905510000099835"
          }
        },
        "additionalProperties": false
      },
      "driver_arriving_times": {
        "type": "object",
        "properties": {
          "order_code": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "driver_uid": {
            "type": "integer",
            "format": "int32"
          },
          "arriving_time": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "export_error_menu": {
        "type": "object",
        "properties": {
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          },
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "error_type": {
            "type": "string",
            "nullable": true
          },
          "error_time": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "object_changes": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "integer",
            "format": "int64"
          },
          "object_type": {
            "type": "string",
            "nullable": true
          },
          "object_id": {
            "type": "integer",
            "format": "int32"
          },
          "update_type": {
            "type": "string",
            "nullable": true
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_restaurant_id": {
            "type": "string",
            "nullable": true
          },
          "partner_object_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "partner_api_url_callback_update_drivers_status": {
        "type": "object",
        "properties": {
          "driver_arriving_times": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/driver_arriving_times"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "description": "Basic Authorization header using the Bearer scheme.",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basic": [ ]
    }
  ]
}
2023-09-21 10:32:59.793 [WRN] 6383088917978956157 request POST /api/v1/transaction/order/list	
{
  "PartnerCode": "WCM",
  "AppCode": "WMT",
  "PosNo": "201801",
  "FromDate": "20220610",
  "ToDate": "yyyyMMdd",
  "CustomerKeyword": "Tên khách",
  "ItemKeyword": "Tên sản phẩm",
  "PageNumber": 1,
  "PageSize": 10
}
2023-09-21 10:33:01.752 [WRN] 5edbb7379d2b49a6ae7594e70b007a54 Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:33:01.957 [WRN] 5edbb7379d2b49a6ae7594e70b007a54 Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:33:01.990 [WRN] 6383088917978956157 responseBody POST /api/v1/transaction/order/list {"Meta":{"Code":200,"Message":"OK"},"Data":[]}
2023-09-21 10:33:21.492 [WRN] 6383088920148958487 request POST /api/v1/transaction/order/list	
{
  "PartnerCode": "WCM",
  "AppCode": "WMT",
  "PosNo": "201801",
  "FromDate": "20220610",
  "ToDate": "yyyyMMdd",
  "CustomerKeyword": "Tên khách",
  "ItemKeyword": "Tên sản phẩm",
  "PageNumber": 1,
  "PageSize": 10
}
2023-09-21 10:33:21.529 [WRN] e300de4ac53f4eb181aad3b08e0edcaa Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:33:21.565 [WRN] e300de4ac53f4eb181aad3b08e0edcaa Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:33:21.570 [WRN] 6383088920148958487 responseBody POST /api/v1/transaction/order/list {"Meta":{"Code":200,"Message":"OK"},"Data":[]}
2023-09-21 10:33:22.358 [WRN] 6383088920235593149 request POST /api/v1/transaction/order/list	
{
  "PartnerCode": "WCM",
  "AppCode": "WMT",
  "PosNo": "201801",
  "FromDate": "20220610",
  "ToDate": "yyyyMMdd",
  "CustomerKeyword": "Tên khách",
  "ItemKeyword": "Tên sản phẩm",
  "PageNumber": 1,
  "PageSize": 10
}
2023-09-21 10:33:22.388 [WRN] 51c2b87754ca4baebad1d272a80f7767 Request https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	

2023-09-21 10:33:22.425 [WRN] 51c2b87754ca4baebad1d272a80f7767 Response  https://uat-api-crownx.winmart.vn/rp/api/pos/order/list	
{
  "code": "S200",
  "message": "Thành công",
  "data": [
    {
      "orderCode": "1695011928138",
      "status": "New",
      "orderTime": "2023-09-18T04:38:48.138181",
      "totalPayment": 233062.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694751907028",
      "status": "New",
      "orderTime": "2023-09-15T04:25:07.028416",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663023054",
      "status": "New",
      "orderTime": "2023-09-14T03:43:43.054203",
      "totalPayment": 103800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694663003986",
      "status": "New",
      "orderTime": "2023-09-14T03:43:23.986523",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntt",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662978561",
      "status": "New",
      "orderTime": "2023-09-14T03:42:58.561623",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662954452",
      "status": "New",
      "orderTime": "2023-09-14T03:42:34.452156",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662856504",
      "status": "New",
      "orderTime": "2023-09-14T03:40:56.504107",
      "totalPayment": 290000.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694662824505",
      "status": "New",
      "orderTime": "2023-09-14T03:40:24.505886",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599651854",
      "status": "New",
      "orderTime": "2023-09-13T10:07:31.854658",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694599390877",
      "status": "New",
      "orderTime": "2023-09-13T10:03:10.877958",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694598664384",
      "status": "New",
      "orderTime": "2023-09-13T09:51:04.384601",
      "totalPayment": 123800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597589248",
      "status": "New",
      "orderTime": "2023-09-13T09:33:09.248498",
      "totalPayment": 145800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    },
    {
      "orderCode": "1694597353424",
      "status": "New",
      "orderTime": "2023-09-13T09:29:13.423228",
      "totalPayment": 92800.00000,
      "receiverName": "thuyntn",
      "receiverPhone": "0908123456",
      "receiverAddress": "gfgfg, P. Vĩnh Tuy, Q. Hai Bà Trưng, TP. Hà Nội"
    }
  ]
}
2023-09-21 10:33:22.429 [WRN] 6383088920235593149 responseBody POST /api/v1/transaction/order/list {"Meta":{"Code":200,"Message":"OK"},"Data":[]}
